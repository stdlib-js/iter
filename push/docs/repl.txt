
{{alias}}( iterator, ...items )
    Returns an iterator which appends additional values to the end of a provided
    iterator.

    If an environment supports Symbol.iterator and a provided iterator is
    iterable, the returned iterator is iterable.

    Parameters
    ----------
    iterator: Object
        Input iterator.

    items: ...any
        Items to append.

    Returns
    -------
    iterator: Object
        Iterator.

    iterator.next(): Function
        Returns an iterator protocol-compliant object containing the next
        iterated value (if one exists) and a boolean flag indicating whether the
        iterator is finished.

    iterator.return( [value] ): Function
        Finishes an iterator and returns a provided value.

    Examples
    --------
    > var it1 = {{alias:@stdlib/array/to-iterator}}( [ 1, 2 ] );
    > var it2 = {{alias}}( it1, 3, 4 );
    > var v = it2.next().value
    1
    > v = it2.next().value
    2
    > v = it2.next().value
    3
    > v = it2.next().value
    4
    > var bool = it2.next().done
    true

    See Also
    --------


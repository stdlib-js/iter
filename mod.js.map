{"version":3,"file":"mod.js","sources":["../node_modules/@stdlib/utils/define-property/lib/define_property.js","../node_modules/@stdlib/utils/define-property/lib/has_define_property_support.js","../node_modules/@stdlib/utils/define-property/lib/builtin.js","../node_modules/@stdlib/string/format/lib/is_number.js","../node_modules/@stdlib/string/format/lib/zero_pad.js","../node_modules/@stdlib/string/format/lib/format_integer.js","../node_modules/@stdlib/string/format/lib/format_double.js","../node_modules/@stdlib/string/format/lib/tokenize.js","../node_modules/@stdlib/string/format/lib/space_pad.js","../node_modules/@stdlib/string/format/lib/is_string.js","../node_modules/@stdlib/string/format/lib/main.js","../node_modules/@stdlib/string/format/lib/index.js","../node_modules/@stdlib/utils/define-property/lib/polyfill.js","../node_modules/@stdlib/utils/define-property/lib/index.js","../node_modules/@stdlib/utils/define-read-only-property/lib/main.js","../node_modules/@stdlib/utils/define-read-only-property/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/re.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/index.js","../node_modules/@stdlib/assert/is-boolean/lib/primitive.js","../node_modules/@stdlib/assert/has-symbol-support/lib/main.js","../node_modules/@stdlib/assert/has-tostringtag-support/lib/main.js","../node_modules/@stdlib/assert/has-tostringtag-support/lib/index.js","../node_modules/@stdlib/utils/native-class/lib/tostring.js","../node_modules/@stdlib/utils/native-class/lib/native_class.js","../node_modules/@stdlib/assert/has-own-property/lib/main.js","../node_modules/@stdlib/assert/has-own-property/lib/index.js","../node_modules/@stdlib/utils/native-class/lib/tostringtag.js","../node_modules/@stdlib/utils/native-class/lib/polyfill.js","../node_modules/@stdlib/utils/native-class/lib/index.js","../node_modules/@stdlib/assert/is-boolean/lib/try2serialize.js","../node_modules/@stdlib/assert/is-boolean/lib/tostring.js","../node_modules/@stdlib/assert/is-boolean/lib/object.js","../node_modules/@stdlib/assert/is-boolean/lib/main.js","../node_modules/@stdlib/assert/is-boolean/lib/index.js","../node_modules/@stdlib/utils/global/lib/codegen.js","../node_modules/@stdlib/utils/global/lib/self.js","../node_modules/@stdlib/utils/global/lib/window.js","../node_modules/@stdlib/utils/global/lib/main.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/nodelist.js","../node_modules/@stdlib/utils/global/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/typedarray.js","../node_modules/@stdlib/utils/type-of/lib/check.js","../node_modules/@stdlib/regexp/function-name/lib/main.js","../node_modules/@stdlib/regexp/function-name/lib/index.js","../node_modules/@stdlib/regexp/function-name/lib/regexp.js","../node_modules/@stdlib/assert/is-array/lib/main.js","../node_modules/@stdlib/assert/is-array/lib/index.js","../node_modules/@stdlib/assert/tools/array-function/lib/arrayfcn.js","../node_modules/@stdlib/assert/is-object-like/lib/main.js","../node_modules/@stdlib/assert/is-object-like/lib/index.js","../node_modules/@stdlib/assert/is-buffer/lib/main.js","../node_modules/@stdlib/utils/constructor-name/lib/main.js","../node_modules/@stdlib/utils/type-of/lib/typeof.js","../node_modules/@stdlib/utils/constructor-name/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/polyfill.js","../node_modules/@stdlib/utils/type-of/lib/index.js","../node_modules/@stdlib/assert/is-function/lib/main.js","../node_modules/@stdlib/assert/is-function/lib/index.js","../node_modules/@stdlib/assert/is-iterator-like/lib/main.js","../node_modules/@stdlib/assert/is-iterator-like/lib/index.js","../node_modules/@stdlib/assert/is-number/lib/primitive.js","../node_modules/@stdlib/number/ctor/lib/index.js","../node_modules/@stdlib/number/ctor/lib/number.js","../node_modules/@stdlib/assert/is-number/lib/try2serialize.js","../node_modules/@stdlib/assert/is-number/lib/tostring.js","../node_modules/@stdlib/assert/is-number/lib/object.js","../node_modules/@stdlib/assert/is-number/lib/main.js","../node_modules/@stdlib/assert/is-number/lib/index.js","../node_modules/@stdlib/constants/float64/pinf/lib/index.js","../node_modules/@stdlib/constants/float64/ninf/lib/index.js","../node_modules/@stdlib/math/base/special/floor/lib/index.js","../node_modules/@stdlib/math/base/special/floor/lib/main.js","../node_modules/@stdlib/math/base/assert/is-integer/lib/is_integer.js","../node_modules/@stdlib/math/base/assert/is-integer/lib/index.js","../node_modules/@stdlib/assert/is-integer/lib/integer.js","../node_modules/@stdlib/assert/is-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-integer/lib/object.js","../node_modules/@stdlib/assert/is-integer/lib/main.js","../node_modules/@stdlib/assert/is-integer/lib/index.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/object.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/main.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/index.js","../advance/lib/main.js","../advance/lib/index.js","../any/lib/main.js","../any/lib/index.js","../any-by/lib/main.js","../any-by/lib/index.js","../node_modules/@stdlib/assert/has-iterator-symbol-support/lib/main.js","../node_modules/@stdlib/symbol/iterator/lib/index.js","../node_modules/@stdlib/symbol/iterator/lib/main.js","../concat/lib/main.js","../concat/lib/index.js","../node_modules/@stdlib/assert/is-object/lib/main.js","../node_modules/@stdlib/assert/is-object/lib/index.js","../node_modules/@stdlib/utils/get-prototype-of/lib/native.js","../node_modules/@stdlib/utils/get-prototype-of/lib/proto.js","../node_modules/@stdlib/utils/get-prototype-of/lib/polyfill.js","../node_modules/@stdlib/utils/get-prototype-of/lib/detect.js","../node_modules/@stdlib/utils/get-prototype-of/lib/get_prototype_of.js","../node_modules/@stdlib/assert/is-plain-object/lib/main.js","../node_modules/@stdlib/assert/is-plain-object/lib/index.js","../constant/lib/main.js","../constant/lib/index.js","../counter/lib/main.js","../counter/lib/index.js","../node_modules/@stdlib/assert/is-collection/lib/main.js","../node_modules/@stdlib/assert/is-collection/lib/index.js","../node_modules/@stdlib/constants/array/max-typed-array-length/lib/index.js","../node_modules/@stdlib/assert/is-string/lib/primitive.js","../node_modules/@stdlib/assert/is-string/lib/try2valueof.js","../node_modules/@stdlib/assert/is-string/lib/valueof.js","../node_modules/@stdlib/assert/is-string/lib/object.js","../node_modules/@stdlib/assert/is-string/lib/main.js","../node_modules/@stdlib/assert/is-string/lib/index.js","../node_modules/@stdlib/math/base/assert/is-nan/lib/main.js","../node_modules/@stdlib/math/base/assert/is-nan/lib/index.js","../node_modules/@stdlib/assert/is-nan/lib/primitive.js","../node_modules/@stdlib/assert/is-nan/lib/object.js","../node_modules/@stdlib/assert/is-nan/lib/main.js","../node_modules/@stdlib/assert/is-nan/lib/index.js","../node_modules/@stdlib/assert/contains/lib/contains.js","../node_modules/@stdlib/assert/contains/lib/index.js","../node_modules/@stdlib/math/base/special/ceil/lib/index.js","../node_modules/@stdlib/math/base/special/ceil/lib/main.js","../node_modules/@stdlib/math/base/special/round/lib/index.js","../node_modules/@stdlib/math/base/special/round/lib/round.js","../node_modules/@stdlib/assert/is-date-object/lib/try2getday.js","../node_modules/@stdlib/assert/is-date-object/lib/getday.js","../node_modules/@stdlib/assert/is-date-object/lib/main.js","../datespace/lib/convert.js","../datespace/lib/main.js","../datespace/lib/index.js","../node_modules/@stdlib/assert/is-positive-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-positive-integer/lib/object.js","../node_modules/@stdlib/assert/is-positive-integer/lib/main.js","../node_modules/@stdlib/assert/is-positive-integer/lib/index.js","../dedupe/lib/main.js","../dedupe/lib/index.js","../dedupe-by/lib/main.js","../dedupe-by/lib/index.js","../empty/lib/main.js","../empty/lib/index.js","../every/lib/main.js","../every/lib/index.js","../every-by/lib/main.js","../every-by/lib/index.js","../fill/lib/main.js","../fill/lib/index.js","../filter/lib/main.js","../filter/lib/index.js","../filter-map/lib/main.js","../filter-map/lib/index.js","../first/lib/main.js","../first/lib/index.js","../node_modules/@stdlib/utils/define-nonenumerable-property/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-property/lib/index.js","../node_modules/@stdlib/utils/keys/lib/builtin.js","../node_modules/@stdlib/utils/keys/lib/has_arguments_bug.js","../node_modules/@stdlib/utils/keys/lib/has_builtin.js","../node_modules/@stdlib/assert/is-arguments/lib/main.js","../node_modules/@stdlib/assert/is-arguments/lib/detect.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/has_string_enumerability_bug.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/native.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/main.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/index.js","../node_modules/@stdlib/assert/is-arguments/lib/polyfill.js","../node_modules/@stdlib/assert/is-arguments/lib/index.js","../node_modules/@stdlib/constants/uint32/max/lib/index.js","../node_modules/@stdlib/utils/keys/lib/builtin_wrapper.js","../node_modules/@stdlib/utils/noop/lib/noop.js","../node_modules/@stdlib/utils/noop/lib/index.js","../node_modules/@stdlib/utils/keys/lib/has_enumerable_prototype_bug.js","../node_modules/@stdlib/utils/keys/lib/has_non_enumerable_properties_bug.js","../node_modules/@stdlib/utils/index-of/lib/index_of.js","../node_modules/@stdlib/utils/keys/lib/is_constructor_prototype.js","../node_modules/@stdlib/utils/keys/lib/has_automation_equality_bug.js","../node_modules/@stdlib/utils/keys/lib/window.js","../node_modules/@stdlib/utils/keys/lib/has_window.js","../node_modules/@stdlib/utils/keys/lib/is_constructor_prototype_wrapper.js","../node_modules/@stdlib/utils/keys/lib/polyfill.js","../node_modules/@stdlib/utils/keys/lib/main.js","../flow/lib/main.js","../flow/lib/index.js","../for-each/lib/main.js","../for-each/lib/index.js","../head/lib/main.js","../head/lib/index.js","../incrspace/lib/main.js","../incrspace/lib/index.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-accessor/lib/main.js","../node_modules/@stdlib/utils/linked-list/lib/node.js","../node_modules/@stdlib/utils/linked-list/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-accessor/lib/index.js","../intersection/lib/main.js","../intersection/lib/index.js","../intersection-by-hash/lib/main.js","../intersection-by-hash/lib/index.js","../last/lib/main.js","../last/lib/index.js","../length/lib/main.js","../length/lib/index.js","../linspace/lib/main.js","../linspace/lib/index.js","../node_modules/@stdlib/assert/is-positive-number/lib/primitive.js","../node_modules/@stdlib/assert/is-positive-number/lib/object.js","../node_modules/@stdlib/assert/is-positive-number/lib/main.js","../node_modules/@stdlib/assert/is-positive-number/lib/index.js","../node_modules/@stdlib/math/base/assert/is-even/lib/is_even.js","../node_modules/@stdlib/math/base/assert/is-odd/lib/is_odd.js","../node_modules/@stdlib/math/base/assert/is-odd/lib/index.js","../node_modules/@stdlib/math/base/assert/is-infinite/lib/main.js","../node_modules/@stdlib/math/base/assert/is-infinite/lib/index.js","../node_modules/@stdlib/math/base/special/sqrt/lib/index.js","../node_modules/@stdlib/math/base/special/sqrt/lib/main.js","../node_modules/@stdlib/math/base/special/abs/lib/main.js","../node_modules/@stdlib/math/base/special/abs/lib/index.js","../node_modules/@stdlib/assert/is-uint32array/lib/main.js","../node_modules/@stdlib/assert/has-uint32array-support/lib/uint32array.js","../node_modules/@stdlib/assert/has-uint32array-support/lib/main.js","../node_modules/@stdlib/array/uint32/lib/polyfill.js","../node_modules/@stdlib/array/uint32/lib/index.js","../node_modules/@stdlib/array/uint32/lib/uint32array.js","../node_modules/@stdlib/assert/has-uint32array-support/lib/index.js","../node_modules/@stdlib/assert/is-float64array/lib/main.js","../node_modules/@stdlib/assert/has-float64array-support/lib/float64array.js","../node_modules/@stdlib/assert/has-float64array-support/lib/main.js","../node_modules/@stdlib/array/float64/lib/polyfill.js","../node_modules/@stdlib/array/float64/lib/index.js","../node_modules/@stdlib/array/float64/lib/float64array.js","../node_modules/@stdlib/assert/has-float64array-support/lib/index.js","../node_modules/@stdlib/assert/is-uint8array/lib/main.js","../node_modules/@stdlib/assert/has-uint8array-support/lib/uint8array.js","../node_modules/@stdlib/assert/has-uint8array-support/lib/main.js","../node_modules/@stdlib/array/uint8/lib/polyfill.js","../node_modules/@stdlib/array/uint8/lib/index.js","../node_modules/@stdlib/array/uint8/lib/uint8array.js","../node_modules/@stdlib/assert/has-uint8array-support/lib/index.js","../node_modules/@stdlib/assert/is-uint16array/lib/main.js","../node_modules/@stdlib/assert/has-uint16array-support/lib/uint16array.js","../node_modules/@stdlib/assert/has-uint16array-support/lib/main.js","../node_modules/@stdlib/array/uint16/lib/polyfill.js","../node_modules/@stdlib/assert/is-little-endian/lib/main.js","../node_modules/@stdlib/array/uint16/lib/index.js","../node_modules/@stdlib/array/uint16/lib/uint16array.js","../node_modules/@stdlib/assert/is-little-endian/lib/ctors.js","../node_modules/@stdlib/assert/has-uint16array-support/lib/index.js","../node_modules/@stdlib/number/float64/base/to-words/lib/indices.js","../node_modules/@stdlib/assert/is-little-endian/lib/index.js","../node_modules/@stdlib/number/float64/base/to-words/lib/to_words.js","../node_modules/@stdlib/number/float64/base/to-words/lib/main.js","../node_modules/@stdlib/number/float64/base/to-words/lib/index.js","../node_modules/@stdlib/number/float64/base/set-low-word/lib/main.js","../node_modules/@stdlib/number/float64/base/set-low-word/lib/low.js","../node_modules/@stdlib/number/float64/base/set-low-word/lib/index.js","../node_modules/@stdlib/number/uint32/base/to-int32/lib/main.js","../node_modules/@stdlib/number/uint32/base/to-int32/lib/index.js","../node_modules/@stdlib/number/float64/base/get-high-word/lib/main.js","../node_modules/@stdlib/number/float64/base/get-high-word/lib/high.js","../node_modules/@stdlib/number/float64/base/from-words/lib/indices.js","../node_modules/@stdlib/number/float64/base/get-high-word/lib/index.js","../node_modules/@stdlib/number/float64/base/from-words/lib/main.js","../node_modules/@stdlib/number/float64/base/from-words/lib/index.js","../node_modules/@stdlib/math/base/special/copysign/lib/main.js","../node_modules/@stdlib/math/base/special/copysign/lib/index.js","../node_modules/@stdlib/math/base/special/pow/lib/x_is_zero.js","../node_modules/@stdlib/math/base/special/pow/lib/y_is_huge.js","../node_modules/@stdlib/math/base/special/pow/lib/y_is_infinite.js","../node_modules/@stdlib/number/float64/base/set-high-word/lib/main.js","../node_modules/@stdlib/number/float64/base/set-high-word/lib/high.js","../node_modules/@stdlib/math/base/special/pow/lib/polyval_l.js","../node_modules/@stdlib/math/base/special/pow/lib/log2ax.js","../node_modules/@stdlib/number/float64/base/set-high-word/lib/index.js","../node_modules/@stdlib/math/base/special/pow/lib/polyval_w.js","../node_modules/@stdlib/math/base/special/pow/lib/logx.js","../node_modules/@stdlib/number/float64/base/normalize/lib/normalize.js","../node_modules/@stdlib/number/float64/base/normalize/lib/main.js","../node_modules/@stdlib/constants/float64/smallest-normal/lib/index.js","../node_modules/@stdlib/number/float64/base/exponent/lib/main.js","../node_modules/@stdlib/constants/float64/high-word-exponent-mask/lib/index.js","../node_modules/@stdlib/constants/float64/exponent-bias/lib/index.js","../node_modules/@stdlib/math/base/special/ldexp/lib/main.js","../node_modules/@stdlib/number/float64/base/exponent/lib/index.js","../node_modules/@stdlib/constants/float64/min-base2-exponent-subnormal/lib/index.js","../node_modules/@stdlib/constants/float64/max-base2-exponent/lib/index.js","../node_modules/@stdlib/constants/float64/max-base2-exponent-subnormal/lib/index.js","../node_modules/@stdlib/math/base/special/pow/lib/polyval_p.js","../node_modules/@stdlib/math/base/special/pow/lib/pow2.js","../node_modules/@stdlib/math/base/special/ldexp/lib/index.js","../node_modules/@stdlib/constants/float64/ln-two/lib/index.js","../node_modules/@stdlib/math/base/special/pow/lib/pow.js","../logspace/lib/main.js","../node_modules/@stdlib/math/base/special/pow/lib/index.js","../logspace/lib/index.js","../map/lib/main.js","../map/lib/index.js","../mapn/lib/main.js","../mapn/lib/index.js","../none/lib/main.js","../none/lib/index.js","../none-by/lib/main.js","../none-by/lib/index.js","../nth/lib/main.js","../nth/lib/index.js","../node_modules/@stdlib/assert/is-array-like-object/lib/main.js","../pipeline/lib/main.js","../node_modules/@stdlib/constants/array/max-array-length/lib/index.js","../pipeline/lib/index.js","../pipeline-thunk/lib/main.js","../pipeline-thunk/lib/index.js","../pop/lib/main.js","../pop/lib/index.js","../push/lib/main.js","../push/lib/index.js","../reject/lib/main.js","../reject/lib/index.js","../replicate/lib/main.js","../replicate/lib/index.js","../replicate-by/lib/main.js","../replicate-by/lib/index.js","../shift/lib/main.js","../shift/lib/index.js","../slice/lib/main.js","../slice/lib/index.js","../some/lib/main.js","../some/lib/index.js","../some-by/lib/main.js","../some-by/lib/index.js","../step/lib/main.js","../step/lib/index.js","../strided/lib/main.js","../strided/lib/index.js","../strided-by/lib/main.js","../strided-by/lib/index.js","../node_modules/@stdlib/array/base/arraylike2object/lib/setter.accessor.js","../node_modules/@stdlib/array/base/arraylike2object/lib/main.js","../node_modules/@stdlib/array/base/arraylike2object/lib/getter.js","../node_modules/@stdlib/array/base/arraylike2object/lib/getter.accessor.js","../node_modules/@stdlib/array/base/arraylike2object/lib/setter.js","../to-array-view/lib/main.js","../node_modules/@stdlib/array/base/arraylike2object/lib/index.js","../to-array-view/lib/index.js","../to-array-view-right/lib/main.js","../to-array-view-right/lib/index.js","../union/lib/main.js","../union/lib/index.js","../unique/lib/main.js","../unique/lib/index.js","../unique-by/lib/main.js","../unique-by/lib/index.js","../unique-by-hash/lib/main.js","../unique-by-hash/lib/index.js","../unitspace/lib/main.js","../unitspace/lib/index.js","../unshift/lib/main.js","../unshift/lib/index.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './define_property.js' );\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/\nfunction startsWithMinus( str ) {\n\treturn str[ 0 ] === '-';\n}\n\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/\nfunction zeros( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += '0';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction zeroPad( str, width, right ) {\n\tvar negative = false;\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tif ( startsWithMinus( str ) ) {\n\t\tnegative = true;\n\t\tstr = str.substr( 1 );\n\t}\n\tstr = ( right ) ?\n\t\tstr + zeros( pad ) :\n\t\tzeros( pad ) + str;\n\tif ( negative ) {\n\t\tstr = '-' + str;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = zeroPad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './is_number.js' );\nvar zeroPad = require( './zero_pad.js' );\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/\nfunction formatInteger( token ) {\n\tvar base;\n\tvar out;\n\tvar i;\n\n\tswitch ( token.specifier ) {\n\tcase 'b':\n\t\t// Case: %b (binary)\n\t\tbase = 2;\n\t\tbreak;\n\tcase 'o':\n\t\t// Case: %o (octal)\n\t\tbase = 8;\n\t\tbreak;\n\tcase 'x':\n\tcase 'X':\n\t\t// Case: %x, %X (hexadecimal)\n\t\tbase = 16;\n\t\tbreak;\n\tcase 'd':\n\tcase 'i':\n\tcase 'u':\n\tdefault:\n\t\t// Case: %d, %i, %u (decimal)\n\t\tbase = 10;\n\t\tbreak;\n\t}\n\tout = token.arg;\n\ti = parseInt( out, 10 );\n\tif ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( out ) ) {\n\t\t\tthrow new Error( 'invalid integer. Value: ' + out );\n\t\t}\n\t\ti = 0;\n\t}\n\tif ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {\n\t\ti = 0xffffffff + i + 1;\n\t}\n\tif ( i < 0 ) {\n\t\tout = ( -i ).toString( base );\n\t\tif ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tout = '-' + out;\n\t} else {\n\t\tout = i.toString( base );\n\t\tif ( !i && !token.precision ) {\n\t\t\tout = '';\n\t\t} else if ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tif ( token.sign ) {\n\t\t\tout = token.sign + out;\n\t\t}\n\t}\n\tif ( base === 16 ) {\n\t\tif ( token.alternate ) {\n\t\t\tout = '0x' + out;\n\t\t}\n\t\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\t\tuppercase.call( out ) :\n\t\t\tlowercase.call( out );\n\t}\n\tif ( base === 8 ) {\n\t\tif ( token.alternate && out.charAt( 0 ) !== '0' ) {\n\t\t\tout = '0' + out;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './is_number.js' );\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\nvar replace = String.prototype.replace;\n\n\n// VARIABLES //\n\nvar RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar RE_ONLY_DIGITS = /^(\\d+)$/;\nvar RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/\nfunction formatDouble( token ) {\n\tvar digits;\n\tvar out;\n\tvar f = parseFloat( token.arg );\n\tif ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( token.arg ) ) {\n\t\t\tthrow new Error( 'invalid floating-point number. Value: ' + out );\n\t\t}\n\t\t// Case: NaN, Infinity, or -Infinity\n\t\tf = token.arg;\n\t}\n\tswitch ( token.specifier ) {\n\tcase 'e':\n\tcase 'E':\n\t\tout = f.toExponential( token.precision );\n\t\tbreak;\n\tcase 'f':\n\tcase 'F':\n\t\tout = f.toFixed( token.precision );\n\t\tbreak;\n\tcase 'g':\n\tcase 'G':\n\t\tif ( abs( f ) < 0.0001 ) {\n\t\t\tdigits = token.precision;\n\t\t\tif ( digits > 0 ) {\n\t\t\t\tdigits -= 1;\n\t\t\t}\n\t\t\tout = f.toExponential( digits );\n\t\t} else {\n\t\t\tout = f.toPrecision( token.precision );\n\t\t}\n\t\tif ( !token.alternate ) {\n\t\t\tout = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );\n\t\t\tout = replace.call( out, RE_PERIOD_ZERO_EXP, 'e');\n\t\t\tout = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'invalid double notation. Value: ' + token.specifier );\n\t}\n\tout = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );\n\tout = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );\n\tif ( token.alternate ) {\n\t\tout = replace.call( out, RE_ONLY_DIGITS, '$1.' );\n\t\tout = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );\n\t}\n\tif ( f >= 0 && token.sign ) {\n\t\tout = token.sign + out;\n\t}\n\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\tuppercase.call( out ) :\n\t\tlowercase.call( out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatDouble;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\treturn {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'hasPeriod': match[ 4 ] === '.',\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string.\n*\n* @private\n* @param {string} str - input string\n* @returns {Array} tokens\n*/\nfunction tokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\ttokens.push( parse( match ) );\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nmodule.exports = tokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/\nfunction spaces( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += ' ';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction spacePad( str, width, right ) {\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tstr = ( right ) ?\n\t\tstr + spaces( pad ) :\n\t\tspaces( pad ) + str;\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = spacePad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar formatInteger = require( './format_integer.js' );\nvar formatDouble = require( './format_double.js' );\nvar tokenize = require( './tokenize.js' );\nvar spacePad = require( './space_pad.js' );\nvar zeroPad = require( './zero_pad.js' );\nvar isString = require( './is_string.js' );\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\nvar isnan = isNaN; // NOTE: We use the global `isNaN` function here instead of `@stdlib/math/base/assert/is-nan` to avoid circular dependencies.\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar tokens;\n\tvar flags;\n\tvar token;\n\tvar flag;\n\tvar num;\n\tvar out;\n\tvar pos;\n\tvar i;\n\tvar j;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\ttokens = tokenize( str );\n\tout = '';\n\tpos = 1;\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isString( token ) ) {\n\t\t\tout += token;\n\t\t} else {\n\t\t\tif ( token.mapping ) {\n\t\t\t\tpos = token.mapping;\n\t\t\t}\n\t\t\tflags = token.flags;\n\t\t\tfor ( j = 0; j < flags.length; j++ ) {\n\t\t\t\tflag = flags.charAt( j );\n\t\t\t\tswitch ( flag ) {\n\t\t\t\tcase ' ':\n\t\t\t\t\ttoken.sign = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+':\n\t\t\t\t\ttoken.sign = '+';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '0':\n\t\t\t\t\ttoken.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n\t\t\t\t\tbreak;\n\t\t\t\tcase '#':\n\t\t\t\t\ttoken.alternate = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'invalid flag: ' + flag );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.width === '*' ) {\n\t\t\t\ttoken.width = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.width ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.width < 0 ) {\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.width = -token.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.precision === '*' && token.hasPeriod ) {\n\t\t\t\ttoken.precision = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.precision ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.precision < 0 ) {\n\t\t\t\t\ttoken.precision = 1;\n\t\t\t\t\ttoken.hasPeriod = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoken.arg = arguments[ pos ];\n\t\t\tswitch ( token.specifier ) {\n\t\t\tcase 'b':\n\t\t\tcase 'o':\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\t// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n\t\t\t\tif ( token.hasPeriod ) {\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatInteger( token );\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\t// Case: %s (string)\n\t\t\t\ttoken.maxWidth = ( token.hasPeriod ) ? token.precision : -1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t// Case: %c (character)\n\t\t\t\tif ( !isnan( token.arg ) ) {\n\t\t\t\t\tnum = parseInt( token.arg, 10 );\n\t\t\t\t\tif ( num < 0 || num > 127 ) {\n\t\t\t\t\t\tthrow new Error( 'invalid character code. Value: ' + token.arg );\n\t\t\t\t\t}\n\t\t\t\t\ttoken.arg = ( isnan( num ) ) ?\n\t\t\t\t\t\tString( token.arg ) :\n\t\t\t\t\t\tfromCharCode( num );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'E':\n\t\t\tcase 'f':\n\t\t\tcase 'F':\n\t\t\tcase 'g':\n\t\t\tcase 'G':\n\t\t\t\t// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n\t\t\t\tif ( !token.hasPeriod ) {\n\t\t\t\t\ttoken.precision = 6;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatDouble( token );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'invalid specifier: ' + token.specifier );\n\t\t\t}\n\t\t\t// Fit argument into field width...\n\t\t\tif ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {\n\t\t\t\ttoken.arg = token.arg.substring( 0, token.maxWidth );\n\t\t\t}\n\t\t\tif ( token.padZeros ) {\n\t\t\t\ttoken.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len\n\t\t\t} else if ( token.width ) {\n\t\t\t\ttoken.arg = spacePad( token.arg, token.width, token.padRight );\n\t\t\t}\n\t\t\tout += token.arg || '';\n\t\t\tpos += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Insert supplied variable values into a format string.\n*\n* @module @stdlib/string/format\n*\n* @example\n* var format = require( '@stdlib/string/format' );\n*\n* var out = format( '%s %s!', 'Hello', 'World' );\n* // returns 'Hello World!'\n*\n* out = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\n\n// MODULES //\n\nvar format = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils/define-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nvar hasDefinePropertySupport = require( './has_define_property_support.js' );\nvar builtin = require( './builtin.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a read-only property.\n*\n* @module @stdlib/utils/define-read-only-property\n*\n* @example\n* var setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n*\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n// MODULES //\n\nvar setReadOnly = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar RE = /./;\n\n\n// EXPORTS //\n\nmodule.exports = RE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a non-enumerable read-only property.\n*\n* @module @stdlib/utils/define-nonenumerable-read-only-property\n*\n* @example\n* var setNonEnumerableReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n// MODULES //\n\nvar setNonEnumerableReadOnly = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a boolean primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean primitive\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( true ) );\n* // returns false\n*/\nfunction isBoolean( value ) {\n\treturn ( typeof value === 'boolean' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasSymbols = require( './../../has-symbol-support' );\n\n\n// VARIABLES //\n\nvar FLG = hasSymbols();\n\n\n// MAIN //\n\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\nfunction hasToStringTagSupport() {\n\treturn ( FLG && typeof Symbol.toStringTag === 'symbol' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `toStringTag` support.\n*\n* @module @stdlib/assert/has-tostringtag-support\n*\n* @example\n* var hasToStringTagSupport = require( '@stdlib/assert/has-tostringtag-support' );\n*\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasToStringTagSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStr = Object.prototype.toString;\n\n\n// EXPORTS //\n\nmodule.exports = toStr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toStr = require( './tostring.js' );\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\treturn toStr.call( v );\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object has a specified property.\n*\n* @module @stdlib/assert/has-own-property\n*\n* @example\n* var hasOwnProp = require( '@stdlib/assert/has-own-property' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* bool = hasOwnProp( beep, 'bop' );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasOwnProp = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';\n\n\n// EXPORTS //\n\nmodule.exports = toStrTag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar toStringTag = require( './tostringtag.js' );\nvar toStr = require( './tostring.js' );\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\tvar isOwn;\n\tvar tag;\n\tvar out;\n\n\tif ( v === null || v === void 0 ) {\n\t\treturn toStr.call( v );\n\t}\n\ttag = v[ toStringTag ];\n\tisOwn = hasOwnProp( v, toStringTag );\n\n\t// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\ttry {\n\t\tv[ toStringTag ] = void 0;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn toStr.call( v );\n\t}\n\tout = toStr.call( v );\n\n\tif ( isOwn ) {\n\t\tv[ toStringTag ] = tag;\n\t} else {\n\t\tdelete v[ toStringTag ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils/native-class\n*\n* @example\n* var nativeClass = require( '@stdlib/utils/native-class' );\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n// MODULES //\n\nvar hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );\nvar builtin = require( './native_class.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar nativeClass;\nif ( hasToStringTag() ) {\n\tnativeClass = polyfill;\n} else {\n\tnativeClass = builtin;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Boolean.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2serialize.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean object\n*\n* @example\n* var bool = isBoolean( true );\n* // returns false\n*\n* @example\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Boolean ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Boolean]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a boolean\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( true ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a boolean.\n*\n* @module @stdlib/assert/is-boolean\n*\n* @example\n* var isBoolean = require( '@stdlib/assert/is-boolean' );\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* // Use interface to check for boolean primitives...\n* var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( true ) );\n* // returns false\n*\n* @example\n* // Use interface to check for boolean objects...\n* var isBoolean = require( '@stdlib/assert/is-boolean' ).isObject;\n*\n* var bool = isBoolean( true );\n* // returns false\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isBoolean = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isBoolean, 'isPrimitive', isPrimitive );\nsetReadOnly( isBoolean, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the global object using code generation.\n*\n* @private\n* @returns {Object} global object\n*/\nfunction getGlobal() {\n\treturn new Function( 'return this;' )(); // eslint-disable-line no-new-func\n}\n\n\n// EXPORTS //\n\nmodule.exports = getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof self === 'object' ) ? self : null;\n\n\n// EXPORTS //\n\nmodule.exports = obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof window === 'object' ) ? window : null;\n\n\n// EXPORTS //\n\nmodule.exports = obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar getThis = require( './codegen.js' );\nvar Self = require( './self.js' );\nvar Win = require( './window.js' );\nvar Global = require( './global.js' );\n\n\n// MAIN //\n\n/**\n* Returns the global object.\n*\n* ## Notes\n*\n* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.\n*\n* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object\n* @throws {TypeError} must provide a boolean\n* @throws {Error} unable to resolve global object\n* @returns {Object} global object\n*\n* @example\n* var g = getGlobal();\n* // returns {...}\n*/\nfunction getGlobal( codegen ) {\n\tif ( arguments.length ) {\n\t\tif ( !isBoolean( codegen ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a boolean. Value: `%s`.', codegen ) );\n\t\t}\n\t\tif ( codegen ) {\n\t\t\treturn getThis();\n\t\t}\n\t\t// Fall through...\n\t}\n\t// Case: browsers and web workers\n\tif ( Self ) {\n\t\treturn Self;\n\t}\n\t// Case: browsers\n\tif ( Win ) {\n\t\treturn Win;\n\t}\n\t// Case: Node.js\n\tif ( Global ) {\n\t\treturn Global;\n\t}\n\t// Case: unknown\n\tthrow new Error( 'unexpected error. Unable to resolve global object.' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getGlobal = require( './../../../global' );\n\n\n// MAIN //\n\nvar root = getGlobal();\nvar nodeList = root.document && root.document.childNodes;\n\n\n// EXPORTS //\n\nmodule.exports = nodeList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the global object.\n*\n* @module @stdlib/utils/global\n*\n* @example\n* var getGlobal = require( '@stdlib/utils/global' );\n*\n* var g = getGlobal();\n* // returns {...}\n*/\n\n// MODULES //\n\nvar getGlobal = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar typedarray = Int8Array; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar RE = require( './fixtures/re.js' );\nvar nodeList = require( './fixtures/nodelist.js' );\nvar typedarray = require( './fixtures/typedarray.js' );\n\n\n// MAIN //\n\n/**\n* Checks whether a polyfill is needed when using the `typeof` operator.\n*\n* @private\n* @returns {boolean} boolean indicating whether a polyfill is needed\n*/\nfunction check() {\n\tif (\n\t\t// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):\n\t\ttypeof RE === 'function' ||\n\n\t\t// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):\n\t\ttypeof typedarray === 'object' ||\n\n\t\t// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):\n\t\ttypeof nodeList === 'function'\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\nfunction reFunctionName() {\n\treturn /^\\s*function\\s*([^(]*)/i;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @module @stdlib/regexp/function-name\n*\n* @example\n* var reFunctionName = require( '@stdlib/regexp/function-name' );\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reFunctionName = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reFunctionName, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reFunctionName = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* Regular expression: `/^\\s*function\\s*([^(]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `\\s*`\n*     -   Match zero or more spaces after the word `function`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^\\s*function\\s*([^(]*)/i\n*/\nvar RE_FUNCTION_NAME = reFunctionName();\n\n\n// EXPORTS //\n\nmodule.exports = RE_FUNCTION_NAME;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar f;\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is an array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array\n*\n* @example\n* var bool = isArray( [] );\n* // returns true\n*\n* @example\n* var bool = isArray( {} );\n* // returns false\n*/\nfunction isArray( value ) {\n\treturn ( nativeClass( value ) === '[object Array]' );\n}\n\n\n// MAIN //\n\nif ( Array.isArray ) {\n\tf = Array.isArray;\n} else {\n\tf = isArray;\n}\n\n\n// EXPORTS //\n\nmodule.exports = f;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array.\n*\n* @module @stdlib/assert/is-array\n*\n* @example\n* var isArray = require( '@stdlib/assert/is-array' );\n*\n* var bool = isArray( [] );\n* // returns true\n*\n* bool = isArray( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( './../../../is-array' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arrayfcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArray( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is object-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is object-like\n*\n* @example\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( [] );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( null );\n* // returns false\n*/\nfunction isObjectLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is object-like.\n*\n* @module @stdlib/assert/is-object-like\n*\n* @example\n* var isObjectLike = require( '@stdlib/assert/is-object-like' );\n*\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* bool = isObjectLike( [] );\n* // returns true\n*\n* bool = isObjectLike( null );\n* // returns false\n*\n* @example\n* var isObjectLike = require( '@stdlib/assert/is-object-like' ).isObjectLikeArray;\n*\n* var bool = isObjectLike( [ {}, [] ] );\n* // returns true\n*\n* bool = isObjectLike( [ {}, '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-function' );\nvar isObjectLike = require( './main.js' );\n\n\n// MAIN //\n\nsetReadOnly( isObjectLike, 'isObjectLikeArray', arrayfun( isObjectLike ) );\n\n\n// EXPORTS //\n\nmodule.exports = isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObjectLike = require( './../../is-object-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Buffer instance.\n*\n* @param {*} value - value to validate\n* @returns {boolean} boolean indicating if a value is a Buffer instance\n*\n* @example\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( new Buffer( [1,2,3,4] ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( {} );\n* // returns false\n*\n* @example\n* var v = isBuffer( [] );\n* // returns false\n*/\nfunction isBuffer( value ) {\n\treturn (\n\t\tisObjectLike( value ) &&\n\t\t(\n\t\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t\tvalue._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n\t\t\t(\n\t\t\t\tvalue.constructor &&\n\n\t\t\t\t// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions\n\t\t\t\ttypeof value.constructor.isBuffer === 'function' &&\n\t\t\t\tvalue.constructor.isBuffer( value )\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( './../../native-class' );\nvar RE = require( '@stdlib/regexp/function-name' ).REGEXP;\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\n\n\n// MAIN //\n\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/\nfunction constructorName( v ) {\n\tvar match;\n\tvar name;\n\tvar ctor;\n\tname = nativeClass( v ).slice( 8, -1 );\n\tif ( (name === 'Object' || name === 'Error') && v.constructor ) {\n\t\tctor = v.constructor;\n\t\tif ( typeof ctor.name === 'string' ) {\n\t\t\treturn ctor.name;\n\t\t}\n\t\tmatch = RE.exec( ctor.toString() );\n\t\tif ( match ) {\n\t\t\treturn match[ 1 ];\n\t\t}\n\t}\n\tif ( isBuffer( v ) ) {\n\t\treturn 'Buffer';\n\t}\n\treturn name;\n}\n\n\n// EXPORTS //\n\nmodule.exports = constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( './../../constructor-name' );\n\n\n// NOTES //\n\n/*\n* Built-in `typeof` operator behavior:\n*\n* ```text\n* typeof null => 'object'\n* typeof undefined => 'undefined'\n* typeof 'a' => 'string'\n* typeof 5 => 'number'\n* typeof NaN => 'number'\n* typeof true => 'boolean'\n* typeof false => 'boolean'\n* typeof {} => 'object'\n* typeof [] => 'object'\n* typeof function foo(){} => 'function'\n* typeof function* foo(){} => 'object'\n* typeof Symbol() => 'symbol'\n* ```\n*\n*/\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\tvar type;\n\n\t// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):\n\tif ( v === null ) {\n\t\treturn 'null';\n\t}\n\ttype = typeof v;\n\n\t// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.\n\tif ( type === 'object' ) {\n\t\treturn ctorName( v ).toLowerCase();\n\t}\n\treturn type;\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the name of a value's constructor.\n*\n* @module @stdlib/utils/constructor-name\n*\n* @example\n* var constructorName = require( '@stdlib/utils/constructor-name' );\n*\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* v = constructorName( {} );\n* // returns 'Object'\n*\n* v = constructorName( true );\n* // returns 'Boolean'\n*/\n\n// MODULES //\n\nvar constructorName = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( './../../constructor-name' );\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\treturn ctorName( v ).toLowerCase();\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine a value's type.\n*\n* @module @stdlib/utils/type-of\n*\n* @example\n* var typeOf = require( '@stdlib/utils/type-of' );\n*\n* var str = typeOf( 'a' );\n* // returns 'string'\n*\n* str = typeOf( 5 );\n* // returns 'number'\n*/\n\n// MODULES //\n\nvar usePolyfill = require( './check.js' );\nvar typeOf = require( './typeof.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar main = ( usePolyfill() ) ? polyfill : typeOf;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar typeOf = require( '@stdlib/utils/type-of' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a function\n*\n* @example\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\nfunction isFunction( value ) {\n\t// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.\n\treturn ( typeOf( value ) === 'function' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a function.\n*\n* @module @stdlib/assert/is-function\n*\n* @example\n* var isFunction = require( '@stdlib/assert/is-function' );\n*\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\n\n// MODULES //\n\nvar isFunction = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( './../../is-function' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is iterator-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is iterator-like\n*\n* @example\n* var it = {\n*     'next': function noop() {}\n* };\n* var bool = isIteratorLike( it );\n* // returns true\n*\n* @example\n* var bool = isIteratorLike( {} );\n* // returns false\n*\n* @example\n* var bool = isIteratorLike( null );\n* // returns false\n*/\nfunction isIteratorLike( value ) {\n\tvar t = typeof value;\n\treturn (\n\t\tvalue !== null &&\n\t\t( t === 'object' || t === 'function' ) &&\n\t\tisFunction( value.next )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isIteratorLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is iterator-like.\n*\n* @module @stdlib/assert/is-iterator-like\n*\n* @example\n* var isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\n*\n* var it = {\n*     'next': function noop() {}\n* };\n* var bool = isIteratorLike( it );\n* // returns true\n*\n* bool = isIteratorLike( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isIterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor which returns a `Number` object.\n*\n* @module @stdlib/number/ctor\n*\n* @example\n* var Number = require( '@stdlib/number/ctor' );\n*\n* var v = new Number( 10.0 );\n* // returns <Number>\n*/\n\n// MODULES //\n\nvar Number = require( './number.js' );\n\n\n// EXPORTS //\n\nmodule.exports = Number;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = Number; // eslint-disable-line stdlib/require-globals\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Number = require( '@stdlib/number/ctor' );\n\n\n// MAIN //\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Number.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar Number = require( '@stdlib/number/ctor' );\nvar test = require( './try2serialize.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\nfunction isNumber( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Number ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Number]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a number\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( null );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a number.\n*\n* @module @stdlib/assert/is-number\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' );\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( null );\n* // returns false\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' ).isObject;\n*\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* @module @stdlib/constants/float64/pinf\n* @type {number}\n*\n* @example\n* var FLOAT64_PINF = require( '@stdlib/constants/float64/pinf' );\n* // returns Infinity\n*/\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.POSITIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_PINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* @module @stdlib/constants/float64/ninf\n* @type {number}\n*\n* @example\n* var FLOAT64_NINF = require( '@stdlib/constants/float64/ninf' );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar Number = require( '@stdlib/number/ctor' );\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.NEGATIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_NINF = Number.NEGATIVE_INFINITY;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_NINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a double-precision floating-point number toward negative infinity.\n*\n* @module @stdlib/math/base/special/floor\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* v = floor( 9.99999 );\n* // returns 9.0\n*\n* v = floor( 0.0 );\n* // returns 0.0\n*\n* v = floor( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar floor = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = floor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward negative infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* @example\n* var v = floor( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = floor( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = floor( NaN );\n* // returns NaN\n*/\nvar floor = Math.floor; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = floor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( './../../../../base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is an integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an integer\n*\n* @example\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( 3.14 );\n* // returns false\n*/\nfunction isInteger( x ) {\n\treturn (floor(x) === x);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite double-precision floating-point number is an integer.\n*\n* @module @stdlib/math/base/assert/is-integer\n*\n* @example\n* var isInteger = require( '@stdlib/math/base/assert/is-integer' );\n*\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* bool = isInteger( 3.14 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInteger = require( './is_integer.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar isInt = require( '@stdlib/math/base/assert/is-integer' );\n\n\n// MAIN //\n\n/**\n* Tests if a number primitive is an integer value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a number primitive is an integer value\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tvalue < PINF &&\n\t\tvalue > NINF &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar isInt = require( './integer.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having an integer value\n*\n* @example\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar isInt = require( './integer.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having an integer value\n*\n* @example\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an integer\n*\n* @example\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isInteger( null );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an integer.\n*\n* @module @stdlib/assert/is-integer\n*\n* @example\n* var isInteger = require( '@stdlib/assert/is-integer' );\n*\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isInteger( -3.14 );\n* // returns false\n*\n* bool = isInteger( null );\n* // returns false\n*\n* @example\n* // Use interface to check for integer primitives...\n* var isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\n*\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for integer objects...\n* var isInteger = require( '@stdlib/assert/is-integer' ).isObject;\n*\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( null );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative integer.\n*\n* @module @stdlib/assert/is-nonnegative-integer\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' );\n*\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* bool = isNonNegativeInteger( null );\n* // returns false\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isObject;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNonNegativeInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isNonNegativeInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Advances an iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {NonNegativeInteger} [n=1e308] - number of iterations\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {Iterator} input iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it1 = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var it2 = iterAdvance( it1, 4 );\n*\n* var v = it2.next().value;\n* // returns 1\n*\n* var bool = it2.next().done;\n* // returns true\n*/\nfunction iterAdvance( iterator, n ) {\n\tvar N;\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', n ) );\n\t\t}\n\t\tN = n;\n\t} else {\n\t\tN = 1e308;\n\t}\n\ti = 0;\n\twhile ( i < N ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t}\n\treturn iterator;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterAdvance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Advance an iterator.\n*\n* @module @stdlib/iter/advance\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterAdvance = require( '@stdlib/iter/advance' );\n*\n* var it1 = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var it2 = iterAdvance( it1, 4 );\n*\n* var v = it2.next().value;\n* // returns 1\n*\n* var bool = it2.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterAdvance = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterAdvance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether at least one iterated value is truthy.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {boolean} boolean indicating whether at least one iterated value is truthy\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterAny( it );\n* // returns true\n*/\nfunction iterAny( iterator ) {\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( v.value ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterAny;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least one iterated value is truthy.\n*\n* @module @stdlib/iter/any\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterAny = require( '@stdlib/iter/any' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterAny( it );\n* // returns true\n*/\n\n// MODULES //\n\nvar iterAny = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterAny;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether at least one iterated value passes a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether at least one iterated value passes a test implemented by a predicate function\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function predicate( v ) {\n*     return ( v === 1 );\n* }\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterAnyBy( it, predicate );\n* // returns true\n*/\nfunction iterAnyBy( iterator, predicate, thisArg ) {\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( predicate.call( thisArg, v.value, i ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterAnyBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least one iterated value passes a test implemented by a predicate function.\n*\n* @module @stdlib/iter/any-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterAnyBy = require( '@stdlib/iter/any-by' );\n*\n* function predicate( v ) {\n*     return ( v === 1 );\n* }\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterAnyBy( it );\n* // returns true\n*/\n\n// MODULES //\n\nvar iterAnyBy = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterAnyBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( './../../has-own-property' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Symbol.iterator` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol.iterator` support\n*\n* @example\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasIteratorSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol' &&\n\t\thasOwnProp( Symbol, 'iterator' ) &&\n\t\ttypeof Symbol.iterator === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Iterator symbol.\n*\n* @module @stdlib/symbol/iterator\n*\n* @example\n* var IteratorSymbol = require( '@stdlib/symbol/iterator' );\n*\n* function iterator() {\n*     var it;\n*     var i;\n*\n*     i = -1;\n*\n*     it = {};\n*     it.next = next;\n*     it.return = done;\n*\n*     if ( IteratorSymbol ) {\n*         it[ IteratorSymbol ] = iterator;\n*     }\n*     return it;\n*\n*     function next() {\n*         i += 1;\n*         return {\n*             'value': i,\n*             'done': false\n*         };\n*     }\n*\n*     function done( value ) {\n*         if ( arguments.length === 0 ) {\n*             return {\n*                 'done': true\n*             };\n*         }\n*         return {\n*             'value': value,\n*             'done': true\n*         };\n*     }\n* }\n*\n* var obj = iterator();\n*/\n\n// MAIN //\n\nvar IteratorSymbol = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = IteratorSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\n\n\n// MAIN //\n\n/**\n* Iterator symbol.\n*\n* @name IteratorSymbol\n* @constant\n* @type {(symbol|null)}\n*\n* @example\n* function iterator() {\n*     var it;\n*     var i;\n*\n*     i = -1;\n*\n*     it = {};\n*     it.next = next;\n*     it.return = done;\n*\n*     if ( IteratorSymbol ) {\n*         it[ IteratorSymbol ] = iterator;\n*     }\n*     return it;\n*\n*     function next() {\n*         i += 1;\n*         return {\n*             'value': i,\n*             'done': false\n*         };\n*     }\n*\n*     function done( value ) {\n*         if ( arguments.length === 0 ) {\n*             return {\n*                 'done': true\n*             };\n*         }\n*         return {\n*             'value': value,\n*             'done': true\n*         };\n*     }\n* }\n*\n* var obj = iterator();\n*/\nvar IteratorSymbol = ( hasIteratorSymbolSupport() ) ? Symbol.iterator : null;\n\n\n// EXPORTS //\n\nmodule.exports = IteratorSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over the values of two or more iterators.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it1 = array2iterator( [ 1, 2 ] );\n* var it2 = array2iterator( [ 3, 4 ] );\n*\n* var iter = iterConcat( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterConcat() {\n\tvar iterators;\n\tvar iterator;\n\tvar niter;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient input arguments. Must provide two or more iterators.' );\n\t}\n\titerators = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\tif ( !isIteratorLike( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\titerators.push( arguments[ i ] );\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\titerator = iterators[ 0 ];\n\tFLG = false;\n\ti = 0;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\t// Note: if provided non-empty iterators, this loop executes at most twice...\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\ti += 1;\n\t\t\t\tif ( i === niter ) {\n\t\t\t\t\tFLG = true;\n\t\t\t\t\tif ( hasOwnProp( v, 'value' ) ) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'value': v.value,\n\t\t\t\t\t\t\t'done': true\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'done': true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\titerator = iterators[ i ];\n\n\t\t\t\t// Note: we ignore iterator return values except for the final iterator...\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\treturn iterConcat.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterConcat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iterates over the values of two or more iterators.\n*\n* @module @stdlib/iter/concat\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterConcat = require( '@stdlib/iter/concat' );\n*\n* var it1 = array2iterator( [ 1, 2 ] );\n* var it2 = array2iterator( [ 3, 4 ] );\n*\n* var iter = iterConcat( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterConcat = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterConcat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( './../../is-array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an object; e.g., `{}`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an object\n*\n* @example\n* var bool = isObject( {} );\n* // returns true\n*\n* @example\n* var bool = isObject( null );\n* // returns false\n*/\nfunction isObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t!isArray( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an object.\n*\n* @module @stdlib/assert/is-object\n*\n* @example\n* var isObject = require( '@stdlib/assert/is-object' );\n*\n* var bool = isObject( {} );\n* // returns true\n*\n* bool = isObject( true );\n* // returns false\n*/\n\n// MODULES //\n\nvar isObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar getProto = Object.getPrototypeOf;\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the value of the `__proto__` property.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {*} value of `__proto__` property\n*/\nfunction getProto( obj ) {\n\t// eslint-disable-next-line no-proto\n\treturn obj.__proto__;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( './../../native-class' );\nvar getProto = require( './proto.js' );\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {(Object|null)} prototype\n*/\nfunction getPrototypeOf( obj ) {\n\tvar proto = getProto( obj );\n\tif ( proto || proto === null ) {\n\t\treturn proto;\n\t}\n\tif ( nativeClass( obj.constructor ) === '[object Function]' ) {\n\t\t// May break if the constructor has been tampered with...\n\t\treturn obj.constructor.prototype;\n\t}\n\tif ( obj instanceof Object ) {\n\t\treturn Object.prototype;\n\t}\n\t// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar builtin = require( './native.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar getProto;\nif ( isFunction( Object.getPrototypeOf ) ) {\n\tgetProto = builtin;\n} else {\n\tgetProto = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getProto = require( './detect.js' );\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @param {*} value - input value\n* @returns {(Object|null)} prototype\n*\n* @example\n* var proto = getPrototypeOf( {} );\n* // returns {}\n*/\nfunction getPrototypeOf( value ) {\n\tif (\n\t\tvalue === null ||\n\t\tvalue === void 0\n\t) {\n\t\treturn null;\n\t}\n\t// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:\n\tvalue = Object( value );\n\n\treturn getProto( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( './../../is-object' );\nvar isFunction = require( './../../is-function' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar hasOwnProp = require( './../../has-own-property' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar objectPrototype = Object.prototype;\n\n\n// FUNCTIONS //\n\n/**\n* Tests that an object only has own properties.\n*\n* @private\n* @param {Object} obj - value to test\n* @returns {boolean} boolean indicating if an object only has own properties\n*/\nfunction ownProps( obj ) {\n\tvar key;\n\n\t// NOTE: possibility of perf boost if key enumeration order is known (see http://stackoverflow.com/questions/18531624/isplainobject-thing).\n\tfor ( key in obj ) {\n\t\tif ( !hasOwnProp( obj, key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests if a value is a plain object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a plain object\n*\n* @example\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* @example\n* var bool = isPlainObject( null );\n* // returns false\n*/\nfunction isPlainObject( value ) {\n\tvar proto;\n\n\t// Screen for obvious non-objects...\n\tif ( !isObject( value ) ) {\n\t\treturn false;\n\t}\n\t// Objects with no prototype (e.g., `Object.create( null )`) are plain...\n\tproto = getPrototypeOf( value );\n\tif ( !proto ) {\n\t\treturn true;\n\t}\n\t// Objects having a prototype are plain if and only if they are constructed with a global `Object` function and the prototype points to the prototype of a plain object...\n\treturn (\n\t\t// Cannot have own `constructor` property:\n\t\t!hasOwnProp( value, 'constructor' ) &&\n\n\t\t// Prototype `constructor` property must be a function (see also https://bugs.jquery.com/ticket/9897 and http://stackoverflow.com/questions/18531624/isplainobject-thing):\n\t\thasOwnProp( proto, 'constructor' ) &&\n\t\tisFunction( proto.constructor ) &&\n\t\tnativeClass( proto.constructor ) === '[object Function]' &&\n\n\t\t// Test for object-specific method:\n\t\thasOwnProp( proto, 'isPrototypeOf' ) &&\n\t\tisFunction( proto.isPrototypeOf ) &&\n\n\t\t(\n\t\t\t// Test if the prototype matches the global `Object` prototype (same realm):\n\t\t\tproto === objectPrototype ||\n\n\t\t\t// Test that all properties are own properties (cross-realm; *most* likely a plain object):\n\t\t\townProps( value )\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a plain object.\n*\n* @module @stdlib/assert/is-plain-object\n*\n* @example\n* var isPlainObject = require( '@stdlib/assert/is-plain-object' );\n*\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* bool = isPlainObject( null );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPlainObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which always returns the same value.\n*\n* @param {*} value - value to return\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterConstant( 3.14 );\n*\n* var v = iter.next().value;\n* // returns 3.14\n*\n* v = iter.next().value;\n* // returns 3.14\n*\n* v = iter.next().value;\n* // returns 3.14\n*\n* // ...\n*/\nfunction iterConstant( value ) {\n\tvar options;\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\topts = {\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length > 1 ) {\n\t\toptions = arguments[ 1 ];\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\t\topts.iter = options.iter;\n\t\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t\t}\n\t\t}\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value, // Note: can be different than the iterator constant\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterConstant( value, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterConstant;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which always returns the same value.\n*\n* @module @stdlib/iter/constant\n*\n* @example\n* var iterConstant = require( '@stdlib/iter/constant' );\n*\n* var iter = iterConstant( 3.14 );\n*\n* var v = iter.next().value;\n* // returns 3.14\n*\n* v = iter.next().value;\n* // returns 3.14\n*\n* v = iter.next().value;\n* // returns 3.14\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes the number of iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n*\n* var iter = iterCounter( randu() );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction iterCounter( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\ti += 1;\n\t\treturn {\n\t\t\t'value': i,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterCounter( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterCounter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes the number of iterated values.\n*\n* @module @stdlib/iter/counter\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterCounter = require( '@stdlib/iter/counter' );\n*\n* var iter = iterCounter( randu() );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterCounter = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterCounter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-typed-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a collection.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a collection\n*\n* @example\n* var bool = isCollection( [] );\n* // returns true\n*\n* @example\n* var bool = isCollection( {} );\n* // returns false\n*/\nfunction isCollection( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a collection.\n*\n* @module @stdlib/assert/is-collection\n*\n* @example\n* var isCollection = require( '@stdlib/assert/is-collection' );\n*\n* var bool = isCollection( [] );\n* // returns true\n*\n* bool = isCollection( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isCollection = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a typed array.\n*\n* @module @stdlib/constants/array/max-typed-array-length\n*\n* @example\n* var MAX_TYPED_ARRAY_LENGTH = require( '@stdlib/constants/array/max-typed-array-length' );\n* // returns 9007199254740991\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a typed array.\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n*/\nvar MAX_TYPED_ARRAY_LENGTH = 9007199254740991;\n\n\n// EXPORTS //\n\nmodule.exports = MAX_TYPED_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar valueOf = require( './valueof.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to extract a string value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a string can be extracted\n*/\nfunction test( value ) {\n\ttry {\n\t\tvalueOf.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar valueOf = String.prototype.valueOf; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = valueOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2valueof.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string object\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns false\n*/\nfunction isString( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof String ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object String]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a string\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*/\nfunction isString( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a string.\n*\n* @module @stdlib/assert/is-string\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' );\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 5 );\n* // returns false\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' ).isObject;\n*\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 'beep' );\n* // returns false\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' ).isPrimitive;\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isString = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isString, 'isPrimitive', isPrimitive );\nsetReadOnly( isString, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 7.0 );\n* // returns false\n*/\nfunction isnan( x ) {\n\treturn ( x !== x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a double-precision floating-point numeric value is `NaN`.\n*\n* @module @stdlib/math/base/assert/is-nan\n*\n* @example\n* var isnan = require( '@stdlib/math/base/assert/is-nan' );\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 7.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isnan = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar isNan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `NaN` number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `NaN` number primitive\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar isNan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value of `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value of `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( null );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `NaN`.\n*\n* @module @stdlib/assert/is-nan\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' );\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( null );\n* // returns false\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' ).isPrimitive;\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns false\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' ).isObject;\n*\n* var bool = isnan( NaN );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isnan = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isnan, 'isPrimitive', isPrimitive );\nsetReadOnly( isnan, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( './../../is-collection' );\nvar isInteger = require( './../../is-integer' ).isPrimitive;\nvar isString = require( './../../is-string' ).isPrimitive;\nvar isnan = require( './../../is-nan' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests if an array-like value contains a search value.\n*\n* @param {(Collection|string)} val - input value\n* @param {*} searchValue - search value\n* @param {integer} [position=0] - position at which to start searching for `searchValue`\n* @throws {TypeError} first argument must be array-like\n* @throws {Error} must provide a search value\n* @throws {TypeError} second argument must be a string when the first argument is a string\n* @throws {TypeError} third argument must be an integer\n* @returns {boolean} boolean indicating whether one value contains another\n*\n* @example\n* var bool = contains( 'last man standing', 'stand' );\n* // returns true\n*\n* @example\n* var bool = contains( [ 1, 2, 3, 4 ], 2 );\n* // returns true\n*\n* @example\n* var bool = contains( 'presidential election', 'president' );\n* // returns true\n*\n* @example\n* var bool = contains( [ NaN, 2, 3, 4 ], NaN );\n* // returns true\n*\n* @example\n* var bool = contains( 'javaScript', 'js' );\n* // returns false\n*\n* @example\n* var bool = contains( [ 1, 2, 3, {} ], {} );\n* // returns false\n*\n* @example\n* var bool = contains( 'Hidden Treasures', '' );\n* // returns true\n*/\nfunction contains( val, searchValue, position ) {\n\tvar len;\n\tvar pos;\n\tvar i;\n\tif ( !isCollection( val ) && !isString( val ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be array-like. Value: `%s`.', val ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\tthrow new Error( 'insufficient input arguments. Must provide a search value.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isInteger( position ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', position ) );\n\t\t}\n\t\tpos = position;\n\t\tif ( pos < 0 ) {\n\t\t\tpos = 0;\n\t\t}\n\t} else {\n\t\tpos = 0;\n\t}\n\tif ( isString( val ) ) {\n\t\tif ( !isString( searchValue ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', searchValue ) );\n\t\t}\n\t\treturn val.indexOf( searchValue, pos ) !== -1;\n\t}\n\tlen = val.length;\n\tif ( isnan( searchValue ) ) {\n\t\tfor ( i = pos; i < len; i++ ) {\n\t\t\tif ( isnan( val[ i ] ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tfor ( i = pos; i < len; i++ ) {\n\t\tif ( val[ i ] === searchValue ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = contains;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if an array-like value contains another value.\n*\n* @module @stdlib/assert/contains\n*\n* @example\n* var contains = require( '@stdlib/assert/contains' );\n*\n* var bool = contains( 'Hello World', 'World' );\n* // returns true\n*\n* bool = contains( 'Hello World', 'world' );\n* // returns false\n*\n* bool = contains( [ 1, 2, 3, 4 ], 2 );\n* // returns true\n*\n* bool = contains( [ NaN, 2, 3, 4 ], NaN );\n* // returns true\n*/\n\n// MODULES //\n\nvar contains = require( './contains.js' );\n\n\n// EXPORTS //\n\nmodule.exports = contains;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a double-precision floating-point number toward positive infinity.\n*\n* @module @stdlib/math/base/special/ceil\n*\n* @example\n* var ceil = require( '@stdlib/math/base/special/ceil' );\n*\n* var v = ceil( -4.2 );\n* // returns -4.0\n*\n* v = ceil( 9.99999 );\n* // returns 10.0\n*\n* v = ceil( 0.0 );\n* // returns 0.0\n*\n* v = ceil( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar ceil = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ceil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward positive infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = ceil( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = ceil( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = ceil( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = ceil( NaN );\n* // returns NaN\n*/\nvar ceil = Math.ceil; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = ceil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation\n\n/**\n* Round a numeric value to the nearest integer.\n*\n* @module @stdlib/math/base/special/round\n*\n* @example\n* var round = require( '@stdlib/math/base/special/round' );\n*\n* var v = round( -4.2 );\n* // returns -4.0\n*\n* v = round( -4.5 );\n* // returns -4.0\n*\n* v = round( -4.6 );\n* // returns -5.0\n*\n* v = round( 9.99999 );\n* // returns 10.0\n*\n* v = round( 9.5 );\n* // returns 10.0\n*\n* v = round( 9.2 );\n* // returns 9.0\n*\n* v = round( 0.0 );\n* // returns 0.0\n*\n* v = round( -0.0 );\n* // returns -0.0\n*\n* v = round( Infinity );\n* // returns Infinity\n*\n* v = round( -Infinity );\n* // returns -Infinity\n*\n* v = round( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar round = require( './round.js' );\n\n\n// EXPORTS //\n\nmodule.exports = round;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation\n\n/**\n* Rounds a numeric value to the nearest integer.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = round( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = round( -4.5 );\n* // returns -4.0\n*\n* @example\n* var v = round( -4.6 );\n* // returns -5.0\n*\n* @example\n* var v = round( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = round( 9.5 );\n* // returns 10.0\n*\n* @example\n* var v = round( 9.2 );\n* // returns 9.0\n*\n* @example\n* var v = round( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = round( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = round( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = round( -Infinity );\n* // returns -Infinity\n*\n* @example\n* var v = round( NaN );\n* // returns NaN\n*/\nvar round = Math.round; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = round;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getDay = require( './getday.js' );\n\n\n// MAIN //\n\n/**\n* Attempts to call a `Date` method.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if able to call a `Date` method\n*/\nfunction test( value ) {\n\ttry {\n\t\tgetDay.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar getDay = Date.prototype.getDay; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = getDay;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2getday.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `Date` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Date` object\n*\n* @example\n* var bool = isDateObject( new Date() );\n* // returns true\n*\n* @example\n* var bool = isDateObject( '2017-01-01' );\n* // returns false\n*/\nfunction isDateObject( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Date ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Date]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isDateObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isDateObject = require( '@stdlib/assert/is-date-object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Converts a value to a JavaScript timestamp.\n*\n* @private\n* @param {*} value - value to convert\n* @returns {(NonNegativeInteger|Error)} either a JavaScript timestamp or an error object\n*/\nfunction convert( value ) {\n\tif ( isString( value ) ) {\n\t\tvalue = Date.parse( value );\n\t\tif ( value !== value ) {\n\t\t\treturn new TypeError( format( 'invalid argument. Unable to parse date string. Value: `%s`.', value ) );\n\t\t}\n\t\treturn value;\n\t}\n\tif ( isNonNegativeInteger( value ) ) {\n\t\treturn value;\n\t}\n\tif ( isDateObject( value ) ) {\n\t\treturn value.getTime();\n\t}\n\treturn new TypeError( format( 'invalid argument. Must provide either a Date object, a JavaScript timestamp (i.e., a nonnegative integer), or a date string. Value: `%s`.', value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = convert;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar contains = require( '@stdlib/assert/contains' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar ceil = require( '@stdlib/math/base/special/ceil' );\nvar round = require( '@stdlib/math/base/special/round' );\nvar convert = require( './convert.js' );\n\n\n// VARIABLES //\n\nvar DEFAULT_LENGTH = 100;\nvar DEFAULT_ROUNDING_MODE = 'floor';\nvar ROUNDING_MODES = [\n\t'floor',\n\t'ceil',\n\t'round'\n];\nvar ROUNDING_FCNS = {\n\t'floor': floor,\n\t'ceil': ceil,\n\t'round': round\n};\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns evenly spaced dates over a specified interval.\n*\n* @param {(NonNegativeInteger|string|Date)} start - starting date as either a `Date` object, JavaScript timestamp, or a date string (inclusive)\n* @param {(NonNegativeInteger|string|Date)} stop - stopping date as either a `Date` object, JavaScript timestamp, or a date string (inclusive)\n* @param {NonNegativeInteger} [N=100] - number of values\n* @param {Options} [options] - function options\n* @param {string} [options.round='floor'] - specifies how sub-millisecond times should be rounded: 'floor', 'ceil', or 'round'\n* @throws {TypeError} a numeric `start` argument must be a nonnegative integer\n* @throws {TypeError} a numeric `stop` argument must be a nonnegative integer\n* @throws {TypeError} unable to parse date string\n* @throws {TypeError} `N` argument must be a nonnegative integer\n* @throws {TypeError} `options` argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var MILLISECONDS_IN_DAY = require( '@stdlib/constants/time/milliseconds-in-day' );\n*\n* var start = new Date();\n* var iter = iterDatespace( start, new Date( start.getTime()+MILLISECONDS_IN_DAY ) );\n*\n* var v = iter.next().value;\n* // returns <Date>\n*\n* v = iter.next().value;\n* // returns <Date>\n*\n* v = iter.next().value;\n* // returns <Date>\n*\n* // ...\n*/\nfunction iterDatespace( start, stop, N, options ) {\n\tvar step;\n\tvar iter;\n\tvar opts;\n\tvar rfcn;\n\tvar FLG;\n\tvar t1;\n\tvar t2;\n\tvar n;\n\tvar d;\n\tvar i;\n\n\tt1 = convert( start );\n\tif ( t1 instanceof Error ) {\n\t\tthrow t1;\n\t}\n\tt2 = convert( stop );\n\tif ( t2 instanceof Error ) {\n\t\tthrow t2;\n\t}\n\topts = {\n\t\t'round': DEFAULT_ROUNDING_MODE\n\t};\n\tif ( arguments.length === 3 ) {\n\t\tif ( isNonNegativeInteger( N ) ) {\n\t\t\tn = N;\n\t\t} else if ( isPlainObject( N ) ) {\n\t\t\tn = DEFAULT_LENGTH;\n\t\t\tif ( hasOwnProp( N, 'round' ) ) {\n\t\t\t\tif ( !contains( ROUNDING_MODES, N.round ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. Unrecognized rounding mode. Option: `%s`.', N.round ) );\n\t\t\t\t}\n\t\t\t\topts.round = N.round;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either a nonnegative integer or an options object. Value: `%s`.', N ) );\n\t\t}\n\t} else if ( arguments.length > 3 ) {\n\t\tif ( !isNonNegativeInteger( N ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t\t}\n\t\tn = N;\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'round' ) ) {\n\t\t\tif ( !contains( ROUNDING_MODES, options.round ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. Unrecognized rounding mode. Option: `%s`.', options.round ) );\n\t\t\t}\n\t\t\topts.round = options.round;\n\t\t}\n\t} else {\n\t\tn = DEFAULT_LENGTH;\n\t}\n\trfcn = ROUNDING_FCNS[ opts.round ];\n\td = n - 1;\n\tstep = (t2-t1) / d;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( i === 0 ) {\n\t\t\treturn {\n\t\t\t\t'value': new Date( t1 ),\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\tif ( i === d ) {\n\t\t\treturn {\n\t\t\t\t'value': new Date( t2 ),\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': new Date( rfcn( t1+(i*step) ) ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterDatespace( start, stop, n, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterDatespace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns evenly spaced dates over a specified interval.\n*\n* @module @stdlib/iter/datespace\n*\n* @example\n* var MILLISECONDS_IN_DAY = require( '@stdlib/constants/time/milliseconds-in-day' );\n* var iterDatespace = require( '@stdlib/iter/datespace' );\n*\n* var start = new Date();\n* var iter = iterDatespace( start, new Date( start.getTime()+MILLISECONDS_IN_DAY ) );\n*\n* var v = iter.next().value;\n* // returns <Date>\n*\n* v = iter.next().value;\n* // returns <Date>\n*\n* v = iter.next().value;\n* // returns <Date>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive integer\n*\n* @example\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( null );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive integer.\n*\n* @module @stdlib/assert/is-positive-integer\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\n*\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* bool = isPositiveInteger( null );\n* // returns false\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isObject;\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isPositiveInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isPositiveInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isPositiveInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which removes consecutive duplicated values.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} [limit=1] - number of allowed consecutive duplicates\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = iterDedupe( array2iterator( [ 1, 1, 2, 3, 3 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterDedupe( iterator, limit ) {\n\tvar count;\n\tvar iter;\n\tvar prev;\n\tvar FLG;\n\tvar N;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( limit ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', limit ) );\n\t\t}\n\t\tN = limit;\n\t} else {\n\t\tN = 1;\n\t}\n\tprev = NaN; // Note: we leverage the fact that `NaN` is not equal to anything, including itself, to handle initial condition\n\tcount = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( v.value === prev ) {\n\t\t\tcount += 1;\n\t\t\tif ( count > N ) {\n\t\t\t\t// Find the next \"unique\" value...\n\t\t\t\twhile ( v.value === prev ) {\n\t\t\t\t\tv = iterator.next();\n\t\t\t\t\tif ( v.done ) {\n\t\t\t\t\t\tFLG = true;\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprev = v.value;\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t} else {\n\t\t\tprev = v.value;\n\t\t\tcount = 1;\n\t\t}\n\t\treturn {\n\t\t\t'value': prev,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterDedupe( iterator[ iteratorSymbol ](), N );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterDedupe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which removes consecutive duplicated values.\n*\n* @module @stdlib/iter/dedupe\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterDedupe = require( '@stdlib/iter/dedupe' );\n*\n* var iter = iterDedupe( array2iterator( [ 1, 1, 2, 3, 3 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterDedupe = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterDedupe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which removes consecutive values that resolve to the same value according to a provided function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} [limit=1] - number of allowed consecutive duplicates\n* @param {Function} clbk - function which indicates whether an iterated value is a \"duplicate\"\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @throws {TypeError} `limit` argument must be a positive integer\n* @throws {TypeError} last argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function fcn( v ) {\n*     return v;\n* }\n*\n* var iter = iterDedupeBy( array2iterator( [ 1, 1, 2, 3, 3 ] ), fcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterDedupeBy( iterator, limit, clbk ) { // eslint-disable-line no-unused-vars\n\tvar count;\n\tvar sprev; // previous source iterated value\n\tvar dprev; // previous downstream iterated value\n\tvar iter;\n\tvar acc;\n\tvar FLG;\n\tvar fcn;\n\tvar N;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tfcn = arguments[ arguments.length-1 ];\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isPositiveInteger( limit ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', limit ) );\n\t\t}\n\t\tN = limit;\n\t} else {\n\t\tN = 1;\n\t}\n\tacc = NaN; // Note: we leverage the fact that `NaN` is not equal to anything, including itself, to handle initial condition\n\tcount = 0;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar out;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\ti += 1;\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tout = fcn( v.value, sprev, dprev, i, acc );\n\t\tif ( out === acc ) {\n\t\t\tsprev = v.value;\n\t\t\tcount += 1;\n\t\t\tif ( count > N ) {\n\t\t\t\t// Find the next \"unique\" value...\n\t\t\t\twhile ( out === acc ) {\n\t\t\t\t\tv = iterator.next();\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif ( v.done ) {\n\t\t\t\t\t\tFLG = true;\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\t\t\t\t\tout = fcn( v.value, sprev, dprev, i, acc );\n\t\t\t\t\tsprev = v.value;\n\t\t\t\t}\n\t\t\t\tacc = out;\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tdprev = sprev;\n\t\t} else {\n\t\t\tsprev = v.value;\n\t\t\tdprev = sprev;\n\t\t\tacc = out;\n\t\t\tcount = 1;\n\t\t}\n\t\treturn {\n\t\t\t'value': dprev,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterDedupeBy( iterator[ iteratorSymbol ](), N, fcn );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterDedupeBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which removes consecutive values that resolve to the same value according to a provided function.\n*\n* @module @stdlib/iter/dedupe-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterDedupeBy = require( '@stdlib/iter/dedupe-by' );\n*\n* function fcn( v ) {\n*     return v;\n* }\n*\n* var iter = iterDedupeBy( array2iterator( [ 1, 1, 2, 3, 3 ] ), fcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterDedupeBy = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterDedupeBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\n\n\n// MAIN //\n\n/**\n* Returns an empty iterator.\n*\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterEmpty();\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterEmpty() {\n\tvar iter;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterEmpty();\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterEmpty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an empty iterator.\n*\n* @module @stdlib/iter/empty\n*\n* @example\n* var iterEmpty = require( '@stdlib/iter/empty' );\n*\n* var iter = iterEmpty();\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether all iterated values are truthy.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {boolean} boolean indicating whether all iterated values are truthy\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 0 ] );\n*\n* var bool = iterEvery( it );\n* // returns false\n*/\nfunction iterEvery( iterator ) {\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( !v.value ) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterEvery;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all iterated values are truthy.\n*\n* @module @stdlib/iter/every\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterEvery = require( '@stdlib/iter/every' );\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 0 ] );\n*\n* var bool = iterEvery( it );\n* // returns false\n*/\n\n// MODULES //\n\nvar iterEvery = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterEvery;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether every iterated value passes a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether every iterated value passes a test implemented by a predicate function\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function predicate( v ) {\n*     return ( v > 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 1 ] );\n*\n* var bool = iterEveryBy( it, predicate );\n* // returns true\n*/\nfunction iterEveryBy( iterator, predicate, thisArg ) {\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( !predicate.call( thisArg, v.value, i ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterEveryBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether every iterated value passes a test implemented by a predicate function.\n*\n* @module @stdlib/iter/every-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterEveryBy = require( '@stdlib/iter/every-by' );\n*\n* function predicate( v ) {\n*     return ( v > 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 1 ] );\n*\n* var bool = iterEveryBy( it, predicate );\n* // returns true\n*/\n\n// MODULES //\n\nvar iterEveryBy = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterEveryBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar BEGIN = 0;\nvar END = 1e308;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which replaces all values from a provided iterator from a start index to an end index with a static value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {*} value - static value\n* @param {NonNegativeInteger} [begin=0] - start iteration index (inclusive)\n* @param {NonNegativeInteger} [end=1e308] - end iteration index (non-inclusive)\n* @throws {Error} must provide both an iterator and a static value\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} third argument must be a nonnegative integer\n* @throws {TypeError} fourth argument must be a nonnegative integer\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n*\n* var iter = iterFill( randu(), 3.14, 0, 2 );\n*\n* var r = iter.next().value;\n* // returns 3.14\n*\n* r = iter.next().value;\n* // returns 3.14\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterFill( iterator, value, begin, end ) {\n\tvar iter;\n\tvar FLG;\n\tvar N;\n\tvar M;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isNonNegativeInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tN = begin;\n\t\tif ( arguments.length > 3 ) {\n\t\t\tif ( !isNonNegativeInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a nonnegative integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tM = end;\n\t\t} else {\n\t\t\tM = END;\n\t\t}\n\t} else if ( arguments.length < 2 ) {\n\t\tthrow new Error( 'insufficient input arguments. Must provide both an iterator and a static value.' );\n\t} else {\n\t\tN = BEGIN;\n\t\tM = END;\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', finish );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\ti = -1;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\ti += 1;\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': ( i >= N && i < M ) ? value : v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction finish( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterFill( iterator[ iteratorSymbol ](), value, N, M );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterFill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which replaces all values from a provided iterator from a start index to an end index with a static value.\n*\n* @module @stdlib/iter/fill\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterFill = require( '@stdlib/iter/fill' );\n*\n* var iter = iterFill( randu(), 3.14, 0, 2 );\n*\n* var r = iter.next().value;\n* // returns 3.14\n*\n* r = iter.next().value;\n* // returns 3.14\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterFill = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterFill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which filters a provided iterator's values according to a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function predicate( v ) {\n*     return ( v > 2 );\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterFilter( src, predicate );\n*\n* var v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterFilter( iterator, predicate, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tif ( predicate.call( thisArg, v.value, i ) ) {\n\t\t\t\treturn {\n\t\t\t\t\t'value': v.value,\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterFilter( iterator[ iteratorSymbol ](), predicate, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterFilter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which filters a provided iterator's values according to a predicate function.\n*\n* @module @stdlib/iter/filter\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterFilter = require( '@stdlib/iter/filter' );\n*\n* function predicate( v ) {\n*     return ( v > 2 );\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterFilter( src, predicate );\n*\n* var v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterFilter = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterFilter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which both filters and maps a provided iterator's values.\n*\n* ## Notes\n*\n* -   If a callback function returns `undefined`, the returned iterator invokes the callback for the next iterated value; otherwise, the iterator returns the callback's return value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - callback which both filters and maps\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function fcn( v ) {\n*     if ( v > 2 ) {\n*         return v * 10;\n*     }\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterFilterMap( src, fcn );\n*\n* var v = iter.next().value;\n* // returns 30\n*\n* v = iter.next().value;\n* // returns 40\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterFilterMap( iterator, fcn, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tv = fcn.call( thisArg, v.value, i );\n\t\t\tif ( v !== void 0 ) {\n\t\t\t\treturn {\n\t\t\t\t\t'value': v,\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterFilterMap( iterator[ iteratorSymbol ](), fcn, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterFilterMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which both filters and maps a provided iterator's values.\n*\n* @module @stdlib/iter/filter-map\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterFilterMap = require( '@stdlib/iter/filter-map' );\n*\n* function fcn( v ) {\n*     if ( v > 2 ) {\n*         return v * 10;\n*     }\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterFilterMap( src, fcn );\n*\n* var v = iter.next().value;\n* // returns 30\n*\n* v = iter.next().value;\n* // returns 40\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterFilterMap = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterFilterMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns the first iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {*} first iterated value\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 1, 0, 0, 0, 0 ] );\n*\n* var v = iterFirst( it );\n* // returns 1\n*/\nfunction iterFirst( iterator ) {\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tv = iterator.next();\n\tif ( v.done ) {\n\t\treturn;\n\t}\n\treturn v.value;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterFirst;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the first iterated value.\n*\n* @module @stdlib/iter/first\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterFirst = require( '@stdlib/iter/first' );\n*\n* var it = array2iterator( [ 1, 0, 0, 0, 0 ] );\n*\n* var v = iterFirst( it );\n* // returns 1\n*/\n\n// MODULES //\n\nvar iterFirst = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterFirst;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var objectKeys = require( '@stdlib/utils/keys' );\n*\n* var obj = {};\n*\n* setNonEnumerableProperty( obj, 'foo', 'bar' );\n*\n* var v = obj.foo;\n* // returns 'bar'\n*\n* var keys = objectKeys( obj );\n* // returns []\n*/\nfunction setNonEnumerableProperty( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a non-enumerable property.\n*\n* @module @stdlib/utils/define-nonenumerable-property\n*\n* @example\n* var objectKeys = require( '@stdlib/utils/keys' );\n* var setNonEnumerableProperty = require( '@stdlib/utils/define-nonenumerable-property' );\n*\n* var obj = {};\n*\n* setNonEnumerableProperty( obj, 'foo', 'bar' );\n*\n* var v = obj.foo;\n* // returns 'bar'\n*\n* var keys = objectKeys( obj );\n* // returns []\n*/\n\n// MODULES //\n\nvar setNonEnumerableProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.keys()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\treturn Object.keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar keys = require( './builtin.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests the built-in `Object.keys()` implementation when provided `arguments`.\n*\n* @private\n* @returns {boolean} boolean indicating whether the built-in implementation returns the expected number of keys\n*/\nfunction test() {\n\treturn ( keys( arguments ) || '' ).length !== 2;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether the built-in `Object.keys()` implementation supports providing `arguments` as an input value.\n*\n* ## Notes\n*\n* -   Safari 5.0 does **not** support `arguments` as an input value.\n*\n* @private\n* @returns {boolean} boolean indicating whether a built-in implementation supports `arguments`\n*/\nfunction check() {\n\treturn test( 1, 2 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.keys !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn ( nativeClass( value ) === '[object Arguments]' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArguments = require( './main.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment returns the expected internal class of the `arguments` object.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment behaves as expected\n*\n* @example\n* var bool = detect();\n* // returns <boolean>\n*/\nfunction detect() {\n\treturn isArguments( arguments );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isEnum = require( './native.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment has a bug where String indices are not detected as \"enumerable\" properties. Observed in Node v0.10.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment has the bug\n*/\nfunction detect() {\n\treturn !isEnum.call( 'beep', '0' );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @private\n* @name isEnumerableProperty\n* @type {Function}\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nvar isEnumerableProperty = Object.prototype.propertyIsEnumerable;\n\n\n// EXPORTS //\n\nmodule.exports = isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' );\nvar isnan = require( './../../is-nan' ).isPrimitive;\nvar isInteger = require( './../../is-integer' ).isPrimitive;\nvar isEnum = require( './native.js' );\nvar hasStringEnumBug = require( './has_string_enumerability_bug.js' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nfunction isEnumerableProperty( value, property ) {\n\tvar bool;\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\tbool = isEnum.call( value, property );\n\tif ( !bool && hasStringEnumBug && isString( value ) ) {\n\t\t// Note: we only check for indices, as properties attached to a `String` object are properly detected as enumerable above.\n\t\tproperty = +property;\n\t\treturn (\n\t\t\t!isnan( property ) &&\n\t\t\tisInteger( property ) &&\n\t\t\tproperty >= 0 &&\n\t\t\tproperty < value.length\n\t\t);\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own property is enumerable.\n*\n* @module @stdlib/assert/is-enumerable-property\n*\n* @example\n* var isEnumerableProperty = require( '@stdlib/assert/is-enumerable-property' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isEnumerableProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( './../../has-own-property' );\nvar isEnumerableProperty = require( './../../is-enumerable-property' );\nvar isArray = require( './../../is-array' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/uint32/max' );\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\t!isArray( value ) &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH &&\n\t\thasOwnProp( value, 'callee' ) &&\n\t\t!isEnumerableProperty( value, 'callee' )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an `arguments` object.\n*\n* @module @stdlib/assert/is-arguments\n*\n* @example\n* var isArguments = require( '@stdlib/assert/is-arguments' );\n*\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* bool = isArguments( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasArgumentsClass = require( './detect.js' );\nvar main = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar isArguments;\nif ( hasArgumentsClass ) {\n\tisArguments = main;\n} else {\n\tisArguments = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* @module @stdlib/constants/uint32/max\n* @type {uinteger32}\n*\n* @example\n* var UINT32_MAX = require( '@stdlib/constants/uint32/max' );\n* // returns 4294967295\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar UINT32_MAX = 4294967295;\n\n\n// EXPORTS //\n\nmodule.exports = UINT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArguments = require( '@stdlib/assert/is-arguments' );\nvar builtin = require( './builtin.js' );\n\n\n// VARIABLES //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tif ( isArguments( value ) ) {\n\t\treturn builtin( slice.call( value ) );\n\t}\n\treturn builtin( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @example\n* noop();\n* // ...does nothing.\n*/\nfunction noop() {\n\t// Empty function...\n}\n\n\n// EXPORTS //\n\nmodule.exports = noop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @module @stdlib/utils/noop\n*\n* @example\n* var noop = require( '@stdlib/utils/noop' );\n*\n* noop();\n* // ...does nothing.\n*/\n\n// MODULES //\n\nvar noop = require( './noop.js' );\n\n\n// EXPORTS //\n\nmodule.exports = noop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isEnumerableProperty = require( '@stdlib/assert/is-enumerable-property' );\nvar noop = require( './../../noop' );\n\n\n// MAIN //\n\n// Note: certain environments treat an object's prototype as enumerable, which, as a matter of convention, it shouldn't be...\nvar bool = isEnumerableProperty( noop, 'prototype' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isEnumerableProperty = require( '@stdlib/assert/is-enumerable-property' );\n\n\n// VARIABLES //\n\nvar obj = {\n\t'toString': null\n};\n\n\n// MAIN //\n\n// Note: certain environments don't allow enumeration of overwritten properties which are considered non-enumerable...\nvar bool = !isEnumerableProperty( obj, 'toString' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @param {ArrayLike} arr - array-like object\n* @param {*} searchElement - element to find\n* @param {integer} [fromIndex] - starting index (if negative, the start index is determined relative to last element)\n* @throws {TypeError} must provide an array-like object\n* @throws {TypeError} `fromIndex` must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 3 );\n* // returns 1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 5 );\n* // returns -1\n*\n* @example\n* // Using a `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, 3 );\n* // returns 5\n*\n* @example\n* // `fromIndex` which exceeds `array` length:\n* var arr = [ 1, 2, 3, 4, 2, 5 ];\n* var idx = indexOf( arr, 2, 10 );\n* // returns -1\n*\n* @example\n* // Negative `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6, 2 ];\n* var idx = indexOf( arr, 2, -4 );\n* // returns 5\n*\n* idx = indexOf( arr, 2, -1 );\n* // returns 7\n*\n* @example\n* // Negative `fromIndex` exceeding input `array` length:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, -10 );\n* // returns 1\n*\n* @example\n* // Array-like objects:\n* var str = 'bebop';\n* var idx = indexOf( str, 'o' );\n* // returns 3\n*/\nfunction indexOf( arr, searchElement, fromIndex ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( arr ) && !isString( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tlen = arr.length;\n\tif ( len === 0 ) {\n\t\treturn -1;\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. `fromIndex` must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= 0 ) {\n\t\t\tif ( fromIndex >= len ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\ti = fromIndex;\n\t\t} else {\n\t\t\ti = len + fromIndex;\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ti = 0;\n\t}\n\t// Check for `NaN`...\n\tif ( isnan( searchElement ) ) {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( isnan( arr[i] ) ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( arr[ i ] === searchElement ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nmodule.exports = indexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests whether a value equals the prototype of its constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction isConstructorPrototype( value ) {\n\treturn ( value.constructor && value.constructor.prototype === value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isConstructorPrototype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar indexOf = require( './../../index-of' );\nvar typeOf = require( './../../type-of' );\nvar isConstructorPrototype = require( './is_constructor_prototype.js' );\nvar EXCLUDED_KEYS = require( './excluded_keys.json' );\nvar win = require( './window.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Determines whether an environment throws when comparing to the prototype of a value's constructor (e.g., [IE9][1]).\n*\n* [1]: https://stackoverflow.com/questions/7688070/why-is-comparing-the-constructor-property-of-two-windows-unreliable\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment is buggy\n*/\nfunction check() {\n\tvar k;\n\tif ( typeOf( win ) === 'undefined' ) {\n\t\treturn false;\n\t}\n\tfor ( k in win ) { // eslint-disable-line guard-for-in\n\t\ttry {\n\t\t\tif (\n\t\t\t\tindexOf( EXCLUDED_KEYS, k ) === -1 &&\n\t\t\t\thasOwnProp( win, k ) &&\n\t\t\t\twin[ k ] !== null &&\n\t\t\t\ttypeOf( win[ k ] ) === 'object'\n\t\t\t) {\n\t\t\t\tisConstructorPrototype( win[ k ] );\n\t\t\t}\n\t\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\nbool = check();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar w = ( typeof window === 'undefined' ) ? void 0 : window;\n\n\n// EXPORTS //\n\nmodule.exports = w;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof window !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasAutomationEqualityBug = require( './has_automation_equality_bug.js' );\nvar isConstructorPrototype = require( './is_constructor_prototype.js' );\nvar HAS_WINDOW = require( './has_window.js' );\n\n\n// MAIN //\n\n/**\n* Wraps the test for constructor prototype equality to accommodate buggy environments (e.g., environments which throw when testing equality).\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction wrapper( value ) {\n\tif ( HAS_WINDOW === false && !hasAutomationEqualityBug ) {\n\t\treturn isConstructorPrototype( value );\n\t}\n\ttry {\n\t\treturn isConstructorPrototype( value );\n\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = wrapper;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObjectLike = require( '@stdlib/assert/is-object-like' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isArguments = require( '@stdlib/assert/is-arguments' );\nvar HAS_ENUM_PROTO_BUG = require( './has_enumerable_prototype_bug.js' );\nvar HAS_NON_ENUM_PROPS_BUG = require( './has_non_enumerable_properties_bug.js' );\nvar isConstructorPrototype = require( './is_constructor_prototype_wrapper.js' );\nvar NON_ENUMERABLE = require( './non_enumerable.json' );\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tvar skipConstructor;\n\tvar skipPrototype;\n\tvar isFcn;\n\tvar out;\n\tvar k;\n\tvar p;\n\tvar i;\n\n\tout = [];\n\tif ( isArguments( value ) ) {\n\t\t// Account for environments which treat `arguments` differently...\n\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\tout.push( i.toString() );\n\t\t}\n\t\t// Note: yes, we are precluding the `arguments` array-like object from having other enumerable properties; however, this should (1) be very rare and (2) not be encouraged (e.g., doing something like `arguments.a = 'b'`; in certain engines directly manipulating the `arguments` value results in automatic de-optimization).\n\t\treturn out;\n\t}\n\tif ( typeof value === 'string' ) {\n\t\t// Account for environments which do not treat string character indices as \"own\" properties...\n\t\tif ( value.length > 0 && !hasOwnProp( value, '0' ) ) {\n\t\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\t\tout.push( i.toString() );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tisFcn = ( typeof value === 'function' );\n\t\tif ( isFcn === false && !isObjectLike( value ) ) {\n\t\t\treturn out;\n\t\t}\n\t\tskipPrototype = ( HAS_ENUM_PROTO_BUG && isFcn );\n\t}\n\tfor ( k in value ) {\n\t\tif ( !( skipPrototype && k === 'prototype' ) && hasOwnProp( value, k ) ) {\n\t\t\tout.push( String( k ) );\n\t\t}\n\t}\n\tif ( HAS_NON_ENUM_PROPS_BUG ) {\n\t\tskipConstructor = isConstructorPrototype( value );\n\t\tfor ( i = 0; i < NON_ENUMERABLE.length; i++ ) {\n\t\t\tp = NON_ENUMERABLE[ i ];\n\t\t\tif ( !( skipConstructor && p === 'constructor' ) && hasOwnProp( value, p ) ) {\n\t\t\t\tout.push( String( p ) );\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasArgumentsBug = require( './has_arguments_bug.js' );\nvar HAS_BUILTIN = require( './has_builtin.js' );\nvar builtin = require( './builtin.js' );\nvar wrapper = require( './builtin_wrapper.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @name keys\n* @type {Function}\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nvar keys;\nif ( HAS_BUILTIN ) {\n\tif ( hasArgumentsBug() ) {\n\t\tkeys = wrapper;\n\t} else {\n\t\tkeys = builtin;\n\t}\n} else {\n\tkeys = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this, no-restricted-syntax */\n\n'use strict';\n\n// MODULES //\n\nvar setNonEnumerableReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setNonEnumerable = require( '@stdlib/utils/define-nonenumerable-property' );\nvar isObject = require( '@stdlib/assert/is-object' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a constructor for creating a fluent interface for chaining together iterator methods.\n*\n* ## Notes\n*\n* -   We assume that each provided iterator function has the following function signature:\n*\n*     ```text\n*     function iterFcn( iterator[, ...args] ) {...}\n*     ```\n*\n*     where `iterator` is an input iterator and `args` are additional iterator function arguments (if any).\n*\n*\n* @param {Object} methods - an object mapping method names to iterator functions\n* @throws {TypeError} must provide an object\n* @throws {TypeError} object property values must be functions\n* @returns {Function} constructor\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterHead = require( '@stdlib/iter/head' );\n* var iterSome = require( '@stdlib/iter/some' );\n*\n* // Create a \"fluent\" interface:\n* var FluentIterator = iterFlow({\n*     'head': iterHead,\n*     'some': iterSome\n* });\n*\n* // Create a source iterator:\n* var arr = array2iterator( [ 0, 0, 1, 1, 1, 0, 0, 1, 0, 1 ] );\n*\n* // Create a new iterator:\n* var it = new FluentIterator( arr );\n*\n* var bool = it.head( 5 ).some( 3 );\n* // returns true\n*\n* // Create another source iterator:\n* arr = array2iterator( [ 0, 0, 1, 0, 1, 0, 0, 1, 0, 1 ] );\n*\n* // Create a new iterator:\n* it = new FluentIterator( arr );\n*\n* bool = it.head( 5 ).some( 3 );\n* // returns false\n*/\nfunction iterFlow( methods ) {\n\tvar keys;\n\tvar k;\n\tvar f;\n\tvar i;\n\tif ( !isObject( methods ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', methods ) );\n\t}\n\t/**\n\t* Fluent interface iterator constructor.\n\t*\n\t* @private\n\t* @constructor\n\t* @param {Iterator} iterator - source iterator\n\t* @throws {TypeError} must provide an iterator\n\t* @returns {FluentIterator} a \"fluent\" iterator\n\t*/\n\tfunction FluentIterator( iterator ) {\n\t\tif ( !( this instanceof FluentIterator ) ) {\n\t\t\treturn new FluentIterator( iterator );\n\t\t}\n\t\tif ( !isIteratorLike( iterator ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t\t}\n\t\tsetNonEnumerableReadOnly( this, '_source', iterator );\n\t\tsetNonEnumerable( this, '_done', false );\n\t\treturn this;\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @throws {TypeError} `this` must be a fluent interface iterator\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tsetNonEnumerableReadOnly( FluentIterator.prototype, 'next', function next() {\n\t\tif ( !(this instanceof FluentIterator) ) {\n\t\t\tthrow new TypeError( 'invalid invocation. `this` is not a fluent interface iterator.' );\n\t\t}\n\t\tif ( this._done ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn this._source.next();\n\t});\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @throws {TypeError} `this` must be a fluent interface iterator\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tsetNonEnumerableReadOnly( FluentIterator.prototype, 'return', function finish( value ) {\n\t\tif ( !(this instanceof FluentIterator) ) {\n\t\t\tthrow new TypeError( 'invalid invocation. `this` is not a fluent interface iterator.' );\n\t\t}\n\t\tthis._done = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t});\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\t/**\n\t\t* Returns the current iterator.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   This method allows the iterator to be iterable and thus able to be consumed, e.g., in `for..of` loops.\n\t\t*\n\t\t* @private\n\t\t* @returns {Iterator} iterator\n\t\t*/\n\t\tsetNonEnumerableReadOnly( FluentIterator.prototype, iteratorSymbol, function factory() { // eslint-disable-line max-len\n\t\t\treturn this;\n\t\t});\n\t}\n\n\t/**\n\t* Wraps an iterator function as a fluent interface method.\n\t*\n\t* @private\n\t* @param {Function} iterFcn - iterator function\n\t* @returns {Function} method wrapper\n\t*/\n\tfunction createMethod( iterFcn ) {\n\t\treturn method;\n\n\t\t/**\n\t\t* Iterator function wrapper.\n\t\t*\n\t\t* @private\n\t\t* @param {...*} [args] - method arguments\n\t\t* @throws {TypeError} `this` must be a fluent interface iterator\n\t\t* @returns {Iterator} iterator\n\t\t*/\n\t\tfunction method() {\n\t\t\tvar args;\n\t\t\tvar out;\n\t\t\tvar i;\n\n\t\t\tif ( !(this instanceof FluentIterator) ) {\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not a fluent interface iterator.' );\n\t\t\t}\n\t\t\targs = [ this._source ];\n\t\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\t\targs.push( arguments[ i ] );\n\t\t\t}\n\t\t\tout = iterFcn.apply( null, args );\n\n\t\t\t// If the iterator function returns an iterator, in order to support subsequent chaining, we need to create a new fluent interface instance...\n\t\t\tif ( isIteratorLike( out ) ) {\n\t\t\t\treturn new FluentIterator( out );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t}\n\n\t// Bind the provided iterator functions to the constructor prototype...\n\tkeys = objectKeys( methods );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tk = keys[ i ];\n\t\tf = methods[ k ];\n\t\tif ( !isFunction( f ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Object property values must be functions. Key: `%s`. Value: `%s`.', k, f ) );\n\t\t}\n\t\tsetNonEnumerableReadOnly( FluentIterator.prototype, k, createMethod( f ) ); // eslint-disable-line max-len\n\t}\n\n\treturn FluentIterator;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterFlow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a fluent interface for chaining together iterator methods.\n*\n* @module @stdlib/iter/flow\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterHead = require( '@stdlib/iter/head' );\n* var iterSome = require( '@stdlib/iter/some' );\n* var iterFlow = require( '@stdlib/iter/flow' );\n*\n* // Create a \"fluent\" interface:\n* var FluentIterator = iterFlow({\n*     'head': iterHead,\n*     'some': iterSome\n* });\n*\n* // Create a source iterator:\n* var arr = array2iterator( [ 0, 0, 1, 1, 1, 0, 0, 1, 0, 1 ] );\n*\n* // Create a new iterator:\n* var it = new FluentIterator( arr );\n*\n* var bool = it.head( 5 ).some( 3 );\n* // returns true\n*\n* // Create another source iterator:\n* arr = array2iterator( [ 0, 0, 1, 0, 1, 0, 0, 1, 0, 1 ] );\n*\n* // Create a new iterator:\n* it = new FluentIterator( arr );\n*\n* bool = it.head( 5 ).some( 3 );\n* // returns false\n*/\n\n// MODULES //\n\nvar iterFlow = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterFlow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which invokes a function for each iterated value before returning the iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var isnan = require( '@stdlib/math/base/assert/is-nan' );\n*\n* function assert( v ) {\n*     if ( isnan( v ) ) {\n*         throw new Error( 'should not be NaN' );\n*     }\n* }\n*\n* var iter = iterForEach( randu(), assert );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterForEach( iterator, fcn, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tv = v.value;\n\t\tfcn.call( thisArg, v, i );\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterForEach( iterator[ iteratorSymbol ](), fcn, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterForEach;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which invokes a function for each iterated value before returning the iterated value.\n*\n* @module @stdlib/iter/for-each\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var isnan = require( '@stdlib/math/base/assert/is-nan' );\n* var iterForEach = require( '@stdlib/iter/for-each' );\n*\n* function assert( v ) {\n*     if ( isnan( v ) ) {\n*         throw new Error( 'should not be NaN' );\n*     }\n* }\n*\n* var iter = iterForEach( randu(), assert );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns the first `n` values of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - number of values\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n*\n* var iter = iterHead( randu(), 10 );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterHead( iterator, n ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i > n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterHead( iterator[ iteratorSymbol ](), n );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterHead;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns the first `n` values of a provided iterator.\n*\n* @module @stdlib/iter/head\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterHead = require( '@stdlib/iter/head' );\n*\n* var iter = iterHead( randu(), 10 );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterHead = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterHead;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar ceil = require( '@stdlib/math/base/special/ceil' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar DEFAULT_INCREMENT = 1;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns evenly spaced numbers according to a specified increment.\n*\n* @param {number} start - starting value (inclusive)\n* @param {number} stop - stopping value (exclusive)\n* @param {number} [increment=1] - increment\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a number\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterIncrspace( 0, 100, 2 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* // ...\n*/\nfunction iterIncrspace( start, stop, increment ) {\n\tvar iter;\n\tvar incr;\n\tvar FLG;\n\tvar N;\n\tvar i;\n\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( !isNumber( stop ) || isnan( stop ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', stop ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isNumber( increment ) || isnan( increment ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a number. Value: `%s`.', increment ) );\n\t\t}\n\t\tincr = increment;\n\t} else {\n\t\tincr = DEFAULT_INCREMENT;\n\t}\n\tN = ceil( (stop-start)/incr );\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= N ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': start + (i*incr),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterIncrspace( start, stop, incr );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterIncrspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns evenly spaced numbers according to a specified increment.\n*\n* @module @stdlib/iter/incrspace\n*\n* @example\n* var iterIncrspace = require( '@stdlib/iter/incrspace' );\n*\n* var iter = iterIncrspace( 0, 100, 2 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnlyAccessor( obj, prop, getter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* List node constructor.\n*\n* @private\n* @constructor\n* @param {*} value - node value\n* @returns {Node} Node instance\n*\n* @example\n* var node = new Node( 'foo' );\n* // returns <Node>\n*/\nfunction Node( value ) { // eslint-disable-line stdlib/no-redeclare\n\t// Why a getter? Because some of the list APIs will return the list \"node\", not the value. In which case, the node API is no longer private and we have to guard against users mucking about (deleting, updating, etc) with property values (in particular, the `next` property).\n\tdefineProperty( this, 'next', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() { // eslint-disable-line no-restricted-syntax\n\t\t\treturn this._next;\n\t\t}\n\t});\n\tthis.value = value;\n\n\tdefineProperty( this, '_next', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': null\n\t});\n\n\t// NOTE: strictly speaking, we should not be keeping back-references in a singly-linked list; however, doing so allows us to more efficiently add, remove, and insert list values.\n\tdefineProperty( this, '_prev', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': null\n\t});\n\n\treturn this;\n}\n\n\n// EXPORTS //\n\nmodule.exports = Node;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( './../../define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( './../../define-nonenumerable-read-only-accessor' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar Node = require( './node.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Linked list constructor.\n*\n* @constructor\n* @returns {LinkedList} linked list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the first value:\n* v = list.shift();\n* // returns 'foo'\n*/\nfunction LinkedList() {\n\tif ( !(this instanceof LinkedList) ) {\n\t\treturn new LinkedList();\n\t}\n\tthis._length = 0;\n\tthis._first = null;\n\tthis._last = null;\n\treturn this;\n}\n\n/**\n* Clears the list.\n*\n* @name clear\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the first value:\n* var v = list.first().value;\n* // returns 'foo'\n*\n* // Examine the list length:\n* var len = list.length;\n* // returns 2\n*\n* // Clear all list items:\n* list.clear();\n*\n* // Peek at the first value:\n* v = list.first();\n* // returns undefined\n*\n* // Examine the list length:\n* len = list.length;\n* // returns 0\n*/\nsetReadOnly( LinkedList.prototype, 'clear', function clear() {\n\tthis._length = 0;\n\tthis._first = null;\n\tthis._last = null;\n\treturn this;\n});\n\n/**\n* Returns the first list node.\n*\n* @name first\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(Node|void)} list node\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the first value:\n* var v = list.first().value;\n* // returns 'foo'\n*/\nsetReadOnly( LinkedList.prototype, 'first', function first() {\n\tif ( this._length ) {\n\t\treturn this._first;\n\t}\n});\n\n/**\n* Inserts a value into the list **after** a provided list node.\n*\n* @name insert\n* @memberof LinkedList.prototype\n* @type {Function}\n* @param {Node} node - node after which to insert the value\n* @param {*} value - value to insert\n* @throws {Error} must provide a node belonging to the list\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' ).push( 'beep' );\n*\n* // Determine the list length:\n* var len = list.length;\n* // returns 3\n*\n* // Get the second node:\n* var node = list.first().next;\n*\n* // Insert a value after the second node:\n* list.insert( node, 'boop' );\n*\n* // Determine the list length:\n* len = list.length;\n* // returns 4\n*/\nsetReadOnly( LinkedList.prototype, 'insert', function insert( node, value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar n;\n\n\t// Case: last node (equivalent to `push()`)\n\tif ( node === this._last ) {\n\t\treturn this.push( value );\n\t}\n\t// Unfortunately, we need to check whether we have been provided a node belonging to our list by walking the list. If we don't, we could erroneously increment the list length. This means our runtime goes from the theoretical O(1) to O(N).\n\tn = this._first;\n\twhile ( n !== this._last && n !== node ) {\n\t\tn = n._next;\n\t}\n\t// Check if we iterated through the entire list:\n\tif ( n === this._last ) {\n\t\tthrow new Error( 'invalid argument. The list does not contain the provided list node.' );\n\t}\n\t// Create a new list node:\n\tn = new Node( value );\n\n\t// Update pointers:\n\tnode._next._prev = n;\n\tn._next = node._next;\n\n\tnode._next = n;\n\tn._prev = node;\n\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Returns an iterator for iterating over a list.\n*\n* ## Notes\n*\n* -   In order to prevent confusion arising from list mutation during iteration, a returned iterator **always** iterates over a list \"snapshot\", which is defined as the list of elements at the time of this method's invocation.\n*\n* @name iterator\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {Iterator} iterator\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Create an iterator:\n* var it = list.iterator();\n*\n* // Iterate over the list...\n* var v = it.next().value;\n* // returns 'foo'\n*\n* v = it.next().value;\n* // returns 'bar'\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( LinkedList.prototype, 'iterator', function iterator() {\n\tvar values;\n\tvar iter;\n\tvar self;\n\tvar FLG;\n\tvar i;\n\n\tself = this;\n\n\t// Initialize the iteration index:\n\ti = -1;\n\n\t// Create a copy of list values (necessary in order to \"snapshot\" the list; otherwise, values could come and go between calls to `next`):\n\tvalues = this.toArray();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= values.length ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': values[ i ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.iterator();\n\t}\n});\n\n/**\n* Returns the last node.\n*\n* @name last\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(Node|void)} list node\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the last value:\n* var v = list.last().value;\n* // returns 'bar'\n*/\nsetReadOnly( LinkedList.prototype, 'last', function last() {\n\tif ( this._length ) {\n\t\treturn this._last;\n\t}\n});\n\n/**\n* List length.\n*\n* @name length\n* @memberof LinkedList.prototype\n* @type {NonNegativeInteger}\n*\n* @example\n* var list = new LinkedList();\n*\n* // Examine the initial list length:\n* var len = list.length;\n* // returns 0\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Retrieve the current list length:\n* len = list.length;\n* // returns 2\n*/\nsetReadOnlyAccessor( LinkedList.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Removes a value from the end of the list.\n*\n* @name pop\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'beep'\n*/\nsetReadOnly( LinkedList.prototype, 'pop', function pop() {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tif ( this._length ) {\n\t\t// Retrieve the last value:\n\t\tvalue = this._last.value;\n\n\t\t// Check whether we have a new \"tail\" or whether we have emptied the list...\n\t\tif ( this._last._prev ) {\n\t\t\tthis._last = this._last._prev;\n\t\t\tthis._last._next = null;\n\t\t} else {\n\t\t\t// List is empty:\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t}\n\t\t// Decrement the list length:\n\t\tthis._length -= 1;\n\t}\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Adds a value to the end of the list.\n*\n* @name push\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'beep'\n*/\nsetReadOnly( LinkedList.prototype, 'push', function push( value ) {\n\tvar node;\n\n\t// Create a new list node:\n\tnode = new Node( value );\n\n\t// Check whether the list is currently empty...\n\tif ( this._length === 0 ) {\n\t\t// This is the only list node, making it both the first and last node:\n\t\tthis._first = node;\n\t\tthis._last = node;\n\t} else {\n\t\t// Link the new node to the previous last node:\n\t\tnode._prev = this._last; // eslint-disable-line no-underscore-dangle\n\n\t\t// Link the previous last node to the new node:\n\t\tthis._last._next = node; // eslint-disable-line no-underscore-dangle\n\n\t\t// Update the pointer for the last node:\n\t\tthis._last = node;\n\t}\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n});\n\n/**\n* Removes a list node from the list.\n*\n* @name remove\n* @memberof LinkedList.prototype\n* @type {Function}\n* @param {Node} node - node to remove\n* @throws {Error} must provide a node belonging to the list\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' ).push( 'beep' );\n*\n* // Determine the list length:\n* var len = list.length;\n* // returns 3\n*\n* // Get the second node:\n* var node = list.first().next;\n*\n* // Remove the second node:\n* var v = list.remove( node );\n* // returns 'bar'\n*\n* // Determine the list length:\n* len = list.length;\n* // returns 2\n*/\nsetReadOnly( LinkedList.prototype, 'remove', function remove( node ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tvar n;\n\n\t// Case: first node (equivalent to `shift()`)\n\tif ( node === this._first ) {\n\t\treturn this.shift();\n\t}\n\t// Case: last node (equivalent to `pop()`)\n\tif ( node === this._last ) {\n\t\treturn this.pop();\n\t}\n\t// Retrieve the node value:\n\tvalue = node.value;\n\n\t// Unfortunately, we need to check whether we have been provided a node belonging to our list by walking the list. If we don't, we could erroneously decrement the list length. This means our runtime goes from the theoretical O(1) to O(N).\n\tn = this._first;\n\twhile ( n !== this._last && n !== node ) {\n\t\tn = n._next;\n\t}\n\t// Check if we iterated through the entire list:\n\tif ( n === this._last ) {\n\t\tthrow new Error( 'invalid argument. The list does not contain the provided list node.' );\n\t}\n\t// Update pointers:\n\tnode._prev._next = node._next;\n\tnode._next._prev = node._prev;\n\n\t// Decrement the list length:\n\tthis._length -= 1;\n\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Removes a value from the beginning of the list.\n*\n* @name shift\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the first value:\n* var v = list.shift();\n* // returns 'foo'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the first value:\n* v = list.shift();\n* // returns 'bar'\n*/\nsetReadOnly( LinkedList.prototype, 'shift', function shift() {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tif ( this._length ) {\n\t\t// Retrieve the first value:\n\t\tvalue = this._first.value;\n\n\t\t// Check whether we have a new \"head\" or whether we have emptied the list...\n\t\tif ( this._first._next ) {\n\t\t\tthis._first = this._first._next;\n\t\t\tthis._first._prev = null;\n\t\t} else {\n\t\t\t// List is empty:\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t}\n\t\t// Decrement the list length:\n\t\tthis._length -= 1;\n\t}\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Returns an array of list values.\n*\n* @name toArray\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {Array} list values\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Get an array of list values:\n* var vals = list.toArray();\n* // returns [ 'foo', 'bar' ]\n*/\nsetReadOnly( LinkedList.prototype, 'toArray', function toArray() {\n\tvar node;\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tnode = this._first;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( node.value );\n\t\tnode = node.next;\n\t}\n\treturn out;\n});\n\n/**\n* Serializes a list as JSON.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `LinkedList` instance.\n*\n* @name toJSON\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {Object} serialized list\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Serialize to JSON:\n* var o = list.toJSON();\n* // returns { 'type': 'linked-list', 'data': [ 'foo', 'bar' ] }\n*/\nsetReadOnly( LinkedList.prototype, 'toJSON', function toJSON() {\n\tvar out = {};\n\tout.type = 'linked-list';\n\tout.data = this.toArray();\n\treturn out;\n});\n\n/**\n* Adds a value to the beginning of the list.\n*\n* @name unshift\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the beginning of the list:\n* list.unshift( 'foo' ).unshift( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'foo'\n*\n* // Add a new value to the beginning of the list:\n* list.unshift( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'bar'\n*/\nsetReadOnly( LinkedList.prototype, 'unshift', function unshift( value ) {\n\tvar node;\n\n\t// Create a new list node:\n\tnode = new Node( value );\n\n\t// Check whether the list is currently empty...\n\tif ( this._length === 0 ) {\n\t\t// This is the only list node, making it both the first and last node:\n\t\tthis._first = node;\n\t\tthis._last = node;\n\t} else {\n\t\t// Link the new node to the previous first node:\n\t\tnode._next = this._first; // eslint-disable-line no-underscore-dangle\n\n\t\t// Link the previous first node to the new node:\n\t\tthis._first._prev = node; // eslint-disable-line no-underscore-dangle\n\n\t\t// Update the pointer for the first node:\n\t\tthis._first = node;\n\t}\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n});\n\n\n// EXPORTS //\n\nmodule.exports = LinkedList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a non-enumerable read-only accessor.\n*\n* @module @stdlib/utils/define-nonenumerable-read-only-accessor\n*\n* @example\n* var setNonEnumerableReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\n*\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n// MODULES //\n\nvar setNonEnumerableReadOnlyAccessor = require( './main.js' ); // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar LinkedList = require( '@stdlib/utils/linked-list' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Finds a node in a linked list hash based on a provided value.\n*\n* @private\n* @param {LinkedList} hash - linked list hash\n* @param {*} v - value to find\n* @returns {(Node|null)} hash node or null\n*/\nfunction getNode( hash, v ) {\n\tvar node = hash.first();\n\twhile ( node ) {\n\t\t// Each node value should be a two-element array: [ value, count ]\n\t\tif ( node.value[ 0 ] === v ) {\n\t\t\treturn node;\n\t\t}\n\t\tnode = node.next;\n\t}\n\treturn null;\n}\n\n/**\n* Cleans a hash by removing nodes having counts below a provided threshold.\n*\n* @private\n* @param {LinkedList} hash - input hash\n* @param {PositiveInteger} threshold - count threshold\n* @returns {LinkedList} input hash\n*/\nfunction clean( hash, threshold ) {\n\tvar node = hash.first();\n\twhile ( node ) {\n\t\tif ( node.value[ 1 ] < threshold ) {\n\t\t\thash.remove( node );\n\t\t}\n\t\tnode = node.next;\n\t}\n\treturn hash;\n}\n\n/**\n* Finds the intersection of two or more iterators.\n*\n* @private\n* @param {Array<Iterator>} iterators - list of iterators\n* @returns {LinkedList} a linked list containing the intersection\n*/\nfunction intersection( iterators ) {\n\tvar hash;\n\tvar it;\n\tvar v;\n\tvar n;\n\tvar j;\n\n\t// Create a new linked list for storing the intersection:\n\thash = new LinkedList();\n\n\t// Find the intersection by first finding the unique values in the first iterator...\n\tit = iterators[ 0 ];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\t// Determine if we have seen this value before...\n\t\tn = getNode( hash, v.value );\n\t\tif ( n === null ) {\n\t\t\t// First time we have seen this value, so add to our unique value hash:\n\t\t\thash.push( [ v.value, 1 ] );\n\t\t}\n\t}\n\t// Check whether we found any unique values:\n\tif ( hash.length === 0 ) {\n\t\treturn hash;\n\t}\n\t// Now that we have found an initial set of unique values, we need to consume each subsequent iterator, updating the count indicating how many iterators have contained an iterated value and removing any values from our initial set which were not present in *all* iterators...\n\tfor ( j = 1; j < iterators.length; j++ ) {\n\t\tit = iterators[ j ];\n\t\twhile ( true ) {\n\t\t\tv = it.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tn = getNode( hash, v.value );\n\t\t\tif ( n && n.value[ 1 ] === j ) {\n\t\t\t\t// Only increment a value's counter the first time we see the value per iterator...\n\t\t\t\tn.value[ 1 ] += 1;\n\t\t\t}\n\t\t}\n\t\t// Upon consuming an iterator, we need to remove any hash values whose count is less than the number of iterators seen thus far:\n\t\tclean( hash, j+1 );\n\n\t\t// Check whether we still have any unique values:\n\t\tif ( hash.length === 0 ) {\n\t\t\treturn hash;\n\t\t}\n\t\t// Move on to the next iterator...\n\t}\n\treturn hash;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns the intersection of two or more iterators.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterIntersection( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterIntersection() {\n\tvar iterators;\n\tvar iterator;\n\tvar niter;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient input arguments. Must provide two or more iterators.' );\n\t}\n\titerators = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\tif ( !isIteratorLike( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\titerators.push( arguments[ i ] );\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\tFLG = false;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* ## Notes\n\t*\n\t* -   The first time `next` is called, we must consume all source values in order to find the intersection (i.e., we \"lazily\" find the intersection, thus resulting in an upfront cost which is amortized over subsequent `next` calls).\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar hash;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\t// Check if this is the first time `next` has been called...\n\t\tif ( iterator === void 0 ) {\n\t\t\thash = intersection( iterators );\n\t\t\tif ( hash.length === 0 ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn {\n\t\t\t\t\t'done': true\n\t\t\t\t};\n\t\t\t}\n\t\t\titerator = hash.iterator();\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value[ 0 ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\treturn iterIntersection.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterIntersection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns the intersection of two or more iterators.\n*\n* @module @stdlib/iter/intersection\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterIntersection = require( '@stdlib/iter/intersection' );\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterIntersection( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterIntersection = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterIntersection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar LinkedList = require( '@stdlib/utils/linked-list' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Finds a node in a linked list hash based on a provided hash.\n*\n* @private\n* @param {LinkedList} hash - linked list hash\n* @param {*} v - hash to find\n* @returns {(Node|null)} hash node or null\n*/\nfunction getNode( hash, v ) {\n\tvar node = hash.first();\n\twhile ( node ) {\n\t\t// Each node value should be a three-element array: [ hash, value, count ]\n\t\tif ( node.value[ 0 ] === v ) {\n\t\t\treturn node;\n\t\t}\n\t\tnode = node.next;\n\t}\n\treturn null;\n}\n\n/**\n* Cleans a hash by removing nodes having counts below a provided threshold.\n*\n* @private\n* @param {LinkedList} hash - input hash\n* @param {PositiveInteger} threshold - count threshold\n* @returns {LinkedList} input hash\n*/\nfunction clean( hash, threshold ) {\n\tvar node = hash.first();\n\twhile ( node ) {\n\t\tif ( node.value[ 2 ] < threshold ) {\n\t\t\thash.remove( node );\n\t\t}\n\t\tnode = node.next;\n\t}\n\treturn hash;\n}\n\n/**\n* Finds the intersection of two or more iterators according to a hash function.\n*\n* @private\n* @param {Array<Iterator>} iterators - list of iterators\n* @param {Function} hashFcn - hash function\n* @param {*} thisArg - execution context\n* @returns {LinkedList} a linked list containing the intersection\n*/\nfunction intersection( iterators, hashFcn, thisArg ) {\n\tvar hash;\n\tvar it;\n\tvar hv;\n\tvar v;\n\tvar n;\n\tvar j;\n\n\t// Create a new linked list for storing the intersection:\n\thash = new LinkedList();\n\n\t// Find the intersection by first finding the unique values in the first iterator...\n\tit = iterators[ 0 ];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\thv = hashFcn.call( thisArg, v.value );\n\n\t\t// Determine if we have seen this hash before...\n\t\tn = getNode( hash, hv );\n\t\tif ( n === null ) {\n\t\t\t// First time we have seen this hash, so add to our set of hashes:\n\t\t\thash.push( [ hv, v.value, 1 ] );\n\t\t}\n\t}\n\t// Check whether we found any unique hashes:\n\tif ( hash.length === 0 ) {\n\t\treturn hash;\n\t}\n\t// Now that we have found an initial set of unique hashes, we need to consume each subsequent iterator, updating the count indicating how many iterators have contained an iterated value mapping to a given hash and removing any hashes from our initial set which were not found in *all* iterators...\n\tfor ( j = 1; j < iterators.length; j++ ) {\n\t\tit = iterators[ j ];\n\t\twhile ( true ) {\n\t\t\tv = it.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\thv = hashFcn.call( thisArg, v.value );\n\t\t\tn = getNode( hash, hv );\n\t\t\tif ( n && n.value[ 2 ] === j ) {\n\t\t\t\t// Only increment a hash's counter the first time we see the hash per iterator...\n\t\t\t\tn.value[ 2 ] += 1;\n\t\t\t}\n\t\t}\n\t\t// Upon consuming an iterator, we need to remove any hashes whose count is less than the number of iterators seen thus far:\n\t\tclean( hash, j+1 );\n\n\t\t// Check whether we still have any unique hashes:\n\t\tif ( hash.length === 0 ) {\n\t\t\treturn hash;\n\t\t}\n\t\t// Move on to the next iterator...\n\t}\n\treturn hash;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns the intersection of two or more iterators according to a hash function.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @param {Function} hashFcn - hash function\n* @param {*} [thisArg] - execution context\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @throws {TypeError} must provide a hash function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function hashFcn( v ) {\n*     return v.toString();\n* }\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterIntersectionByHash( it1, it2, hashFcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterIntersectionByHash() {\n\tvar iterators;\n\tvar iterator;\n\tvar hashFcn;\n\tvar thisArg;\n\tvar niter;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\titerators = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\tif ( isIteratorLike( arguments[ i ] ) ) {\n\t\t\titerators.push( arguments[ i ] );\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\tniter = iterators.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient input arguments. Must provide two or more iterators.' );\n\t}\n\tif ( niter === arguments.length ) {\n\t\tthrow new Error( 'insufficient input arguments. Must provide a hash function.' );\n\t}\n\tif ( arguments.length > niter+2 ) {\n\t\t// Addresses the case: fcn( it, it, null, it, it, hashFcn )\n\t\tthrow new TypeError( 'invalid argument. Iterator arguments must be iterator protocol-compliant objects.' );\n\t}\n\thashFcn = arguments[ i ];\n\tif ( !isFunction( hashFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Hash function argument must be a function. Value: `%s`.', hashFcn ) );\n\t}\n\tthisArg = arguments[ i+1 ];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\tFLG = false;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* ## Notes\n\t*\n\t* -   The first time `next` is called, we must consume all source values in order to find the intersection (i.e., we \"lazily\" find the intersection, thus resulting in an upfront cost which is amortized over subsequent `next` calls).\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar hash;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\t// Check if this is the first time `next` has been called...\n\t\tif ( iterator === void 0 ) {\n\t\t\thash = intersection( iterators, hashFcn, thisArg );\n\t\t\tif ( hash.length === 0 ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn {\n\t\t\t\t\t'done': true\n\t\t\t\t};\n\t\t\t}\n\t\t\titerator = hash.iterator();\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value[ 1 ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\targs.push( hashFcn );\n\t\targs.push( thisArg );\n\t\treturn iterIntersectionByHash.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterIntersectionByHash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns the intersection of two or more iterators according to a hash function.\n*\n* @module @stdlib/iter/intersection-by-hash\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterIntersectionByHash = require( '@stdlib/iter/intersection-by-hash' );\n*\n* function hashFcn( v ) {\n*     return v.toString();\n* }\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterIntersectionByHash( it1, it2, hashFcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterIntersectionByHash = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterIntersectionByHash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Consumes an iterator and returns the last iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {*} last iterated value\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var v = iterLast( it );\n* // returns 1\n*/\nfunction iterLast( iterator ) {\n\tvar last;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn last;\n\t\t}\n\t\tlast = v.value;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterLast;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Consume an iterator and return the last iterated value.\n*\n* @module @stdlib/iter/last\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterLast = require( '@stdlib/iter/last' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var v = iterLast( it );\n* // returns 1\n*/\n\n// MODULES //\n\nvar iterLast = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterLast;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Consumes an iterator and returns the number of iterated values (i.e., the iterator length).\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {NonNegativeInteger} iterator length\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var v = iterLength( it );\n* // returns 5\n*/\nfunction iterLength( iterator ) {\n\tvar count;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tcount = 0;\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn count;\n\t\t}\n\t\tcount += 1;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterLength;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Consume an iterator and return the number of iterated values (i.e., the iterator length).\n*\n* @module @stdlib/iter/length\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterLength = require( '@stdlib/iter/length' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var len = iterLength( it );\n* // returns 5\n*/\n\n// MODULES //\n\nvar iterLength = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterLength;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns evenly spaced numbers over a specified interval.\n*\n* @param {number} start - starting value (inclusive)\n* @param {number} stop - stopping value (inclusive)\n* @param {NonNegativeInteger} [N=100] - number of values\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a nonnegative integer\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterLinspace( 0, 99, 100 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\nfunction iterLinspace( start, stop, N ) {\n\tvar delta;\n\tvar step;\n\tvar iter;\n\tvar FLG;\n\tvar n;\n\tvar d;\n\tvar i;\n\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( !isNumber( stop ) || isnan( stop ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', stop ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isNonNegativeInteger( N ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t\t}\n\t\tn = N;\n\t} else {\n\t\tn = 100;\n\t}\n\tdelta = stop - start;\n\td = n - 1;\n\tstep = delta / d;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* ## Notes\n\t*\n\t* -   Provides specialized support for denormalized numbers by switching the order of multiplication and division operations (see <https://github.com/numpy/numpy/issues/5437>).\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i >= n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( i === 0 ) {\n\t\t\treturn {\n\t\t\t\t'value': start,\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\tif ( i === d ) {\n\t\t\treturn {\n\t\t\t\t'value': stop,\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\t// Provide support for when the `step` has underflowed (e.g., when wanting to create linearly spaced denormalized numbers)...\n\t\tif ( step === 0.0 ) {\n\t\t\tv = ((i/d)*delta) + start;\n\t\t} else {\n\t\t\tv = (i*step) + start;\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterLinspace( start, stop, n );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterLinspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns evenly spaced numbers over a specified interval.\n*\n* @module @stdlib/iter/linspace\n*\n* @example\n* var iterLinspace = require( '@stdlib/iter/linspace' );\n*\n* var iter = iterLinspace( 0, 99, 100 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive value\n*\n* @example\n* var bool = isPositiveNumber( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive value\n*\n* @example\n* var bool = isPositiveNumber( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive number\n*\n* @example\n* var bool = isPositiveNumber( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveNumber( null );\n* // returns false\n*/\nfunction isPositiveNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive number.\n*\n* @module @stdlib/assert/is-positive-number\n*\n* @example\n* var isPositiveNumber = require( '@stdlib/assert/is-positive-number' );\n*\n* var bool = isPositiveNumber( 5.0 );\n* // returns true\n*\n* bool = isPositiveNumber( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveNumber( 3.14 );\n* // returns true\n*\n* bool = isPositiveNumber( -5.0 );\n* // returns false\n*\n* bool = isPositiveNumber( null );\n* // returns false\n*\n* @example\n* var isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\n*\n* var bool = isPositiveNumber( 3.0 );\n* // returns true\n*\n* bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isObject;\n*\n* var bool = isPositiveNumber( 3.0 );\n* // returns false\n*\n* bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isPositiveNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isPositiveNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isPositiveNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../../../base/assert/is-integer' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite numeric value is an even number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an even number\n*\n* @example\n* var bool = isEven( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isEven( -2.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( NaN );\n* // returns false\n*/\nfunction isEven( x ) {\n\treturn isInteger( x/2.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEven;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isEven = require( './../../../../base/assert/is-even' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite numeric value is an odd number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an odd number\n*\n* @example\n* var bool = isOdd( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isOdd( -2.0 );\n* // returns false\n*\n* @example\n* var bool = isOdd( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isOdd( NaN );\n* // returns false\n*/\nfunction isOdd( x ) {\n\t// Check sign to prevent overflow...\n\tif ( x > 0.0 ) {\n\t\treturn isEven( x-1.0 );\n\t}\n\treturn isEven( x+1.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isOdd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite numeric value is an odd number.\n*\n* @module @stdlib/math/base/assert/is-odd\n*\n* @example\n* var isOdd = require( '@stdlib/math/base/assert/is-odd' );\n*\n* var bool = isOdd( 5.0 );\n* // returns true\n*\n* bool = isOdd( -2.0 );\n* // returns false\n*\n* bool = isOdd( 0.0 );\n* // returns false\n*\n* bool = isOdd( NaN );\n* // returns false\n*/\n\n// MODULES //\n\nvar isOdd = require( './is_odd.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isOdd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\n\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is infinite.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is infinite\n*\n* @example\n* var bool = isInfinite( Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( -Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isInfinite( NaN );\n* // returns false\n*/\nfunction isInfinite( x ) {\n\treturn (x === PINF || x === NINF);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a double-precision floating-point numeric value is infinite.\n*\n* @module @stdlib/math/base/assert/is-infinite\n*\n* @example\n* var isInfinite = require( '@stdlib/math/base/assert/is-infinite' );\n*\n* var bool = isInfinite( Infinity );\n* // returns true\n*\n* bool = isInfinite( -Infinity );\n* // returns true\n*\n* bool = isInfinite( 5.0 );\n* // returns false\n*\n* bool = isInfinite( NaN );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInfinite = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isInfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the principal square root of a double-precision floating-point number.\n*\n* @module @stdlib/math/base/special/sqrt\n*\n* @example\n* var sqrt = require( '@stdlib/math/base/special/sqrt' );\n*\n* var v = sqrt( 4.0 );\n* // returns 2.0\n*\n* v = sqrt( 9.0 );\n* // returns 3.0\n*\n* v = sqrt( 0.0 );\n* // returns 0.0\n*\n* v = sqrt( -4.0 );\n* // returns NaN\n*\n* v = sqrt( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar sqrt = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = sqrt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Compute the principal square root of a double-precision floating-point number.\n*\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} principal square root\n*\n* @example\n* var v = sqrt( 4.0 );\n* // returns 2.0\n*\n* v = sqrt( 9.0 );\n* // returns 3.0\n*\n* v = sqrt( 0.0 );\n* // returns 0.0\n*\n* v = sqrt( -4.0 );\n* // returns NaN\n*\n* v = sqrt( NaN );\n* // returns NaN\n*/\nvar sqrt = Math.sqrt; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = sqrt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the absolute value of a double-precision floating-point number `x`.\n*\n* @param {number} x - input value\n* @returns {number} absolute value\n*\n* @example\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* @example\n* var v = abs( 2.0 );\n* // returns 2.0\n*\n* @example\n* var v = abs( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( -0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( NaN );\n* // returns NaN\n*/\nfunction abs( x ) {\n\treturn Math.abs( x ); // eslint-disable-line stdlib/no-builtin-math\n}\n\n\n// EXPORTS //\n\nmodule.exports = abs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an absolute value of a double-precision floating-point number.\n*\n* @module @stdlib/math/base/special/abs\n*\n* @example\n* var abs = require( '@stdlib/math/base/special/abs' );\n*\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* v = abs( 2.0 );\n* // returns 2.0\n*\n* v = abs( 0.0 );\n* // returns 0.0\n*\n* v = abs( -0.0 );\n* // returns 0.0\n*\n* v = abs( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar abs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = abs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint32Array = ( typeof Uint32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint32Array\n*\n* @example\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint32Array( [] );\n* // returns false\n*/\nfunction isUint32Array( value ) {\n\treturn (\n\t\t( hasUint32Array && value instanceof Uint32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint32Array === 'function' ) ? Uint32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint32Array = require( './../../is-uint32array' );\nvar UINT32_MAX = require( '@stdlib/constants/uint32/max' );\nvar GlobalUint32Array = require( './uint32array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint32Array` support\n*\n* @example\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT32_MAX+1, UINT32_MAX+2 ];\n\t\tarr = new GlobalUint32Array( arr );\n\t\tbool = (\n\t\t\tisUint32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT32_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 32-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint32\n*\n* @example\n* var ctor = require( '@stdlib/array/uint32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint32Array>\n*/\n\n// MODULES //\n\nvar hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );\nvar builtin = require( './uint32array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint32Array === 'function' ) ? Uint32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint32Array` support.\n*\n* @module @stdlib/assert/has-uint32array-support\n*\n* @example\n* var hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );\n*\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint32ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasFloat64Array = ( typeof Float64Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float64Array\n*\n* @example\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat64Array( [] );\n* // returns false\n*/\nfunction isFloat64Array( value ) {\n\treturn (\n\t\t( hasFloat64Array && value instanceof Float64Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float64Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float64Array === 'function' ) ? Float64Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFloat64Array = require( './../../is-float64array' );\nvar GlobalFloat64Array = require( './float64array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Float64Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float64Array` support\n*\n* @example\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat64ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat64Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat64Array( [ 1.0, 3.14, -3.14, NaN ] );\n\t\tbool = (\n\t\t\tisFloat64Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.14 &&\n\t\t\tarr[ 2 ] === -3.14 &&\n\t\t\tarr[ 3 ] !== arr[ 3 ]\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of double-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float64\n*\n* @example\n* var ctor = require( '@stdlib/array/float64' );\n*\n* var arr = new ctor( 10 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nvar hasFloat64ArraySupport = require( '@stdlib/assert/has-float64array-support' );\nvar builtin = require( './float64array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat64ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float64Array === 'function' ) ? Float64Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Float64Array` support.\n*\n* @module @stdlib/assert/has-float64array-support\n*\n* @example\n* var hasFloat64ArraySupport = require( '@stdlib/assert/has-float64array-support' );\n*\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasFloat64ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint8Array = ( typeof Uint8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8Array\n*\n* @example\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8Array( [] );\n* // returns false\n*/\nfunction isUint8Array( value ) {\n\treturn (\n\t\t( hasUint8Array && value instanceof Uint8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8Array === 'function' ) ? Uint8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint8Array = require( './../../is-uint8array' );\nvar UINT8_MAX = require( '@stdlib/constants/uint8/max' );\nvar GlobalUint8Array = require( './uint8array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8Array` support\n*\n* @example\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT8_MAX+1, UINT8_MAX+2 ];\n\t\tarr = new GlobalUint8Array( arr );\n\t\tbool = (\n\t\t\tisUint8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&           // truncation\n\t\t\tarr[ 2 ] === UINT8_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&           // wrap around\n\t\t\tarr[ 4 ] === 1              // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint8\n*\n* @example\n* var ctor = require( '@stdlib/array/uint8' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8Array>\n*/\n\n// MODULES //\n\nvar hasUint8ArraySupport = require( '@stdlib/assert/has-uint8array-support' );\nvar builtin = require( './uint8array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8Array === 'function' ) ? Uint8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint8Array` support.\n*\n* @module @stdlib/assert/has-uint8array-support\n*\n* @example\n* var hasUint8ArraySupport = require( '@stdlib/assert/has-uint8array-support' );\n*\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint8ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint16Array = ( typeof Uint16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint16Array\n*\n* @example\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint16Array( [] );\n* // returns false\n*/\nfunction isUint16Array( value ) {\n\treturn (\n\t\t( hasUint16Array && value instanceof Uint16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint16Array === 'function' ) ? Uint16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint16Array = require( './../../is-uint16array' );\nvar UINT16_MAX = require( '@stdlib/constants/uint16/max' );\nvar GlobalUint16Array = require( './uint16array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint16Array` support\n*\n* @example\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT16_MAX+1, UINT16_MAX+2 ];\n\t\tarr = new GlobalUint16Array( arr );\n\t\tbool = (\n\t\t\tisUint16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT16_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 16-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctors = require( './ctors.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an environment is little endian.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment is little endian\n*\n* @example\n* var bool = isLittleEndian();\n* // returns <boolean>\n*/\nfunction isLittleEndian() {\n\tvar uint16view;\n\tvar uint8view;\n\n\tuint16view = new ctors[ 'uint16' ]( 1 );\n\n\t/*\n\t* Set the uint16 view to a value having distinguishable lower and higher order words.\n\t*\n\t* 4660 => 0x1234 => 0x12 0x34 => '00010010 00110100' => (0x12,0x34) == (18,52)\n\t*/\n\tuint16view[ 0 ] = 0x1234;\n\n\t// Create a uint8 view on top of the uint16 buffer:\n\tuint8view = new ctors[ 'uint8' ]( uint16view.buffer );\n\n\t// If little endian, the least significant byte will be first...\n\treturn ( uint8view[ 0 ] === 0x34 );\n}\n\n\n// MAIN //\n\nbool = isLittleEndian();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 16-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint16\n*\n* @example\n* var ctor = require( '@stdlib/array/uint16' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint16Array>\n*/\n\n// MODULES //\n\nvar hasUint16ArraySupport = require( '@stdlib/assert/has-uint16array-support' );\nvar builtin = require( './uint16array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint16Array === 'function' ) ? Uint16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar Uint16Array = require( '@stdlib/array/uint16' );\n\n\n// MAIN //\n\nvar ctors = {\n\t'uint16': Uint16Array,\n\t'uint8': Uint8Array\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint16Array` support.\n*\n* @module @stdlib/assert/has-uint16array-support\n*\n* @example\n* var hasUint16ArraySupport = require( '@stdlib/assert/has-uint16array-support' );\n*\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint16ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n\tLOW = 0; // first index\n} else {\n\tHIGH = 0; // first index\n\tLOW = 1; // second index\n}\nindices = {\n\t'HIGH': HIGH,\n\t'LOW': LOW\n};\n\n\n// EXPORTS //\n\nmodule.exports = indices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a boolean indicating if an environment is little endian.\n*\n* @module @stdlib/assert/is-little-endian\n*\n* @example\n* var IS_LITTLE_ENDIAN = require( '@stdlib/assert/is-little-endian' );\n*\n* var bool = IS_LITTLE_ENDIAN;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar IS_LITTLE_ENDIAN = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = IS_LITTLE_ENDIAN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar indices = require( './indices.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW;\n\n\n// MAIN //\n\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( out, 3.14e201 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\nfunction toWords( out, x ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tout[ 0 ] = UINT32_VIEW[ HIGH ];\n\tout[ 1 ] = UINT32_VIEW[ LOW ];\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fcn = require( './to_words.js' );\n\n\n// MAIN //\n\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( out, 3.14e201 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\nfunction toWords( out, x ) {\n\tif ( arguments.length === 1 ) {\n\t\treturn fcn( [ 0, 0 ], out );\n\t}\n\treturn fcn( out, x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @module @stdlib/number/float64/base/to-words\n*\n* @example\n* var toWords = require( '@stdlib/number/float64/base/to-words' );\n*\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n* var toWords = require( '@stdlib/number/float64/base/to-words' );\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( out, 3.14e201 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\n\n// MODULES //\n\nvar toWords = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar LOW = require( './low.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Sets the less significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the lower order bits? If little endian, the first; if big endian, the second.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - double\n* @param {uinteger32} low - unsigned 32-bit integer to replace the lower order word of `x`\n* @returns {number} double having the same higher order word as `x`\n*\n* @example\n* var low = 5 >>> 0; // => 00000000000000000000000000000101\n*\n* var x = 3.14e201; // => 0 11010011100 01001000001011000011 10010011110010110101100010000010\n*\n* var y = setLowWord( x, low ); // => 0 11010011100 01001000001011000011 00000000000000000000000000000101\n* // returns 3.139998651394392e+201\n*\n* @example\n* var PINF = require( '@stdlib/constants/float64/pinf' );\n* var NINF = require( '@stdlib/constants/float64/ninf' );\n*\n* var low = 12345678;\n*\n* var y = setLowWord( PINF, low );\n* // returns NaN\n*\n* y = setLowWord( NINF, low );\n* // returns NaN\n*\n* y = setLowWord( NaN, low );\n* // returns NaN\n*/\nfunction setLowWord( x, low ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tUINT32_VIEW[ LOW ] = ( low >>> 0 ); // identity bit shift to ensure integer\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = setLowWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar LOW;\nif ( isLittleEndian === true ) {\n\tLOW = 0; // first index\n} else {\n\tLOW = 1; // second index\n}\n\n\n// EXPORTS //\n\nmodule.exports = LOW;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Set the less significant 32 bits of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/set-low-word\n*\n* @example\n* var setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\n*\n* var low = 5 >>> 0; // => 00000000000000000000000000000101\n*\n* var x = 3.14e201; // => 0 11010011100 01001000001011000011 10010011110010110101100010000010\n*\n* var y = setLowWord( x, low ); // => 0 11010011100 01001000001011000011 00000000000000000000000000000101\n* // returns 3.139998651394392e+201\n*\n* @example\n* var setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\n* var PINF = require( '@stdlib/constants/float64/pinf' );\n* var NINF = require( '@stdlib/constants/float64/ninf' );\n*\n* var low = 12345678;\n*\n* var y = setLowWord( PINF, low );\n* // returns NaN\n*\n* y = setLowWord( NINF, low );\n* // returns NaN\n*\n* y = setLowWord( NaN, low );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar setLowWord = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setLowWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Converts an unsigned 32-bit integer to a signed 32-bit integer.\n*\n* @param {uinteger32} x - unsigned 32-bit integer\n* @returns {integer32} signed 32-bit integer\n*\n* @example\n* var float64ToUint32 = require( '@stdlib/number/float64/base/to-uint32' );\n* var y = uint32ToInt32( float64ToUint32( 4294967295 ) );\n* // returns -1\n*\n* @example\n* var float64ToUint32 = require( '@stdlib/number/float64/base/to-uint32' );\n* var y = uint32ToInt32( float64ToUint32( 3 ) );\n* // returns 3\n*/\nfunction uint32ToInt32( x ) {\n\t// NOTE: we could also use typed-arrays to achieve the same end.\n\treturn x|0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nmodule.exports = uint32ToInt32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an unsigned 32-bit integer to a signed 32-bit integer.\n*\n* @module @stdlib/number/uint32/base/to-int32\n*\n* @example\n* var float64ToUint32 = require( '@stdlib/number/float64/base/to-uint32' );\n* var uint32ToInt32 = require( '@stdlib/number/uint32/base/to-int32' );\n*\n* var y = uint32ToInt32( float64ToUint32( 4294967295 ) );\n* // returns -1\n*\n* y = uint32ToInt32( float64ToUint32( 3 ) );\n* // returns 3\n*/\n\n// MODULES //\n\nvar uint32ToInt32 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = uint32ToInt32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar HIGH = require( './high.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Returns an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - input value\n* @returns {uinteger32} higher order word\n*\n* @example\n* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011\n* // returns 1774486211\n*/\nfunction getHighWord( x ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\treturn UINT32_VIEW[ HIGH ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = getHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar HIGH;\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n} else {\n\tHIGH = 0; // first index\n}\n\n\n// EXPORTS //\n\nmodule.exports = HIGH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n\tLOW = 0; // first index\n} else {\n\tHIGH = 0; // first index\n\tLOW = 1; // second index\n}\nindices = {\n\t'HIGH': HIGH,\n\t'LOW': LOW\n};\n\n\n// EXPORTS //\n\nmodule.exports = indices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/get-high-word\n*\n* @example\n* var getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\n*\n* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011\n* // returns 1774486211\n*/\n\n// MODULES //\n\nvar getHighWord = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = getHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar indices = require( './indices.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW;\n\n\n// MAIN //\n\n/**\n* Creates a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n*\n* In which Uint32 should we place the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {uinteger32} high - higher order word (unsigned 32-bit integer)\n* @param {uinteger32} low - lower order word (unsigned 32-bit integer)\n* @returns {number} floating-point number\n*\n* @example\n* var v = fromWords( 1774486211, 2479577218 );\n* // returns 3.14e201\n*\n* @example\n* var v = fromWords( 3221823995, 1413754136 );\n* // returns -3.141592653589793\n*\n* @example\n* var v = fromWords( 0, 0 );\n* // returns 0.0\n*\n* @example\n* var v = fromWords( 2147483648, 0 );\n* // returns -0.0\n*\n* @example\n* var v = fromWords( 2146959360, 0 );\n* // returns NaN\n*\n* @example\n* var v = fromWords( 2146435072, 0 );\n* // returns Infinity\n*\n* @example\n* var v = fromWords( 4293918720, 0 );\n* // returns -Infinity\n*/\nfunction fromWords( high, low ) {\n\tUINT32_VIEW[ HIGH ] = high;\n\tUINT32_VIEW[ LOW ] = low;\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @module @stdlib/number/float64/base/from-words\n*\n* @example\n* var fromWords = require( '@stdlib/number/float64/base/from-words' );\n*\n* var v = fromWords( 1774486211, 2479577218 );\n* // returns 3.14e201\n*\n* v = fromWords( 3221823995, 1413754136 );\n* // returns -3.141592653589793\n*\n* v = fromWords( 0, 0 );\n* // returns 0.0\n*\n* v = fromWords( 2147483648, 0 );\n* // returns -0.0\n*\n* v = fromWords( 2146959360, 0 );\n* // returns NaN\n*\n* v = fromWords( 2146435072, 0 );\n* // returns Infinity\n*\n* v = fromWords( 4293918720, 0 );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar fromWords = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = fromWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toWords = require( '@stdlib/number/float64/base/to-words' );\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar fromWords = require( '@stdlib/number/float64/base/from-words' );\n\n\n// VARIABLES //\n\n// 10000000000000000000000000000000 => 2147483648 => 0x80000000\nvar SIGN_MASK = 0x80000000>>>0; // asm type annotation\n\n// 01111111111111111111111111111111 => 2147483647 => 0x7fffffff\nvar MAGNITUDE_MASK = 0x7fffffff|0; // asm type annotation\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ];\n\n\n// MAIN //\n\n/**\n* Returns a double-precision floating-point number with the magnitude of `x` and the sign of `y`.\n*\n* @param {number} x - number from which to derive a magnitude\n* @param {number} y - number from which to derive a sign\n* @returns {number} a double-precision floating-point number\n*\n* @example\n* var z = copysign( -3.14, 10.0 );\n* // returns 3.14\n*\n* @example\n* var z = copysign( 3.14, -1.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( 1.0, -0.0 );\n* // returns -1.0\n*\n* @example\n* var z = copysign( -3.14, -0.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( -0.0, 1.0 );\n* // returns 0.0\n*/\nfunction copysign( x, y ) {\n\tvar hx;\n\tvar hy;\n\n\t// Split `x` into higher and lower order words:\n\ttoWords( WORDS, x );\n\thx = WORDS[ 0 ];\n\n\t// Turn off the sign bit of `x`:\n\thx &= MAGNITUDE_MASK;\n\n\t// Extract the higher order word from `y`:\n\thy = getHighWord( y );\n\n\t// Leave only the sign bit of `y` turned on:\n\thy &= SIGN_MASK;\n\n\t// Copy the sign bit of `y` to `x`:\n\thx |= hy;\n\n\t// Return a new value having the same magnitude as `x`, but with the sign of `y`:\n\treturn fromWords( hx, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = copysign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a double-precision floating-point number with the magnitude of `x` and the sign of `y`.\n*\n* @module @stdlib/math/base/special/copysign\n*\n* @example\n* var copysign = require( '@stdlib/math/base/special/copysign' );\n*\n* var z = copysign( -3.14, 10.0 );\n* // returns 3.14\n*\n* z = copysign( 3.14, -1.0 );\n* // returns -3.14\n*\n* z = copysign( 1.0, -0.0 );\n* // returns -1.0\n*\n* z = copysign( -3.14, -0.0 );\n* // returns -3.14\n*\n* z = copysign( -0.0, 1.0 );\n* // returns 0.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isOdd = require( './../../../../base/assert/is-odd' );\nvar copysign = require( './../../../../base/special/copysign' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\(|x| = 0\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( 0.0, 2 );\n* // returns 0.0\n*\n* @example\n* var v = pow( -0.0, -9 );\n* // returns -Infinity\n*\n* @example\n* var v = pow( 0.0, -9 );\n* // returns Infinity\n*\n* @example\n* var v = pow( -0.0, 9 );\n* // returns 0.0\n*\n* @example\n* var v = pow( 0.0, -Infinity  );\n* // returns Infinity\n*\n* @example\n* var v = pow( 0.0, Infinity );\n* // returns 0.0\n*/\nfunction pow( x, y ) {\n\tif ( y === NINF ) {\n\t\treturn PINF;\n\t}\n\tif ( y === PINF ) {\n\t\treturn 0.0;\n\t}\n\tif ( y > 0.0 ) {\n\t\tif ( isOdd( y ) ) {\n\t\t\treturn x; // handles +-0\n\t\t}\n\t\treturn 0.0;\n\t}\n\t// y < 0.0\n\tif ( isOdd( y ) ) {\n\t\treturn copysign( PINF, x ); // handles +-0\n\t}\n\treturn PINF;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\n\n\n// VARIABLES //\n\n// 0x7fffffff = 2147483647 => 0 11111111111 11111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// 0x3fefffff = 1072693247 => 0 01111111110 11111111111111111111 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_MAX_NEAR_UNITY = 0x3fefffff|0; // asm type annotation\n\nvar HUGE = 1.0e300;\nvar TINY = 1.0e-300;\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\(|y| > 2^64\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} overflow or underflow result\n*\n* @example\n* var v = pow( 9.0, 3.6893488147419103e19 );\n* // returns Infinity\n*\n* @example\n* var v = pow( -3.14, -3.6893488147419103e19 );\n* // returns 0.0\n*/\nfunction pow( x, y ) {\n\tvar ahx;\n\tvar hx;\n\n\thx = getHighWord( x );\n\tahx = (hx & ABS_MASK);\n\n\tif ( ahx <= HIGH_MAX_NEAR_UNITY ) {\n\t\tif ( y < 0 ) {\n\t\t\t// signal overflow...\n\t\t\treturn HUGE * HUGE;\n\t\t}\n\t\t// signal underflow...\n\t\treturn TINY * TINY;\n\t}\n\t// `x` has a biased exponent greater than or equal to `0`...\n\n\tif ( y > 0 ) {\n\t\t// signal overflow...\n\t\treturn HUGE * HUGE;\n\t}\n\t// signal underflow...\n\treturn TINY * TINY;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( './../../../../base/special/abs' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\( y = \\pm \\infty\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( -1.0, Infinity );\n* // returns NaN\n*\n* @example\n* var v = pow( -1.0, -Infinity  );\n* // returns NaN\n*\n* @example\n* var v = pow( 1.0, Infinity );\n* // returns 1.0\n*\n* @example\n* var v = pow( 1.0, -Infinity  );\n* // returns 1.0\n*\n* @example\n* var v = pow( 0.5, Infinity );\n* // returns 0.0\n*\n* @example\n* var v = pow( 0.5, -Infinity  );\n* // returns Infinity\n*\n* @example\n* var v = pow( 1.5, -Infinity  );\n* // returns 0.0\n*\n* @example\n* var v = pow( 1.5, Infinity );\n* // returns Infinity\n*/\nfunction pow( x, y ) {\n\tif ( x === -1.0 ) {\n\t\t// Julia (0.4.2) and Python (2.7.9) return `1.0` (WTF???). JavaScript (`Math.pow`), R, and libm return `NaN`. We choose `NaN`, as the value is indeterminate; i.e., we cannot determine whether `y` is odd, even, or somewhere in between.\n\t\treturn (x-x)/(x-x); // signal NaN\n\t}\n\tif ( x === 1.0 ) {\n\t\treturn 1.0;\n\t}\n\t// (|x| > 1 && y === NINF) || (|x| < 1 && y === PINF)\n\tif ( (abs(x) < 1.0) === (y === PINF) ) {\n\t\treturn 0.0;\n\t}\n\t// (|x| > 1 && y === PINF) || (|x| < 1 && y === NINF)\n\treturn PINF;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar HIGH = require( './high.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Sets the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - double\n* @param {uinteger32} high - unsigned 32-bit integer to replace the higher order word of `x`\n* @returns {number} double having the same lower order word as `x`\n*\n* @example\n* var high = 5 >>> 0; // => 0 00000000000 00000000000000000101\n*\n* var y = setHighWord( 3.14e201, high ); //  => 0 00000000000 0000000000000000010110010011110010110101100010000010\n* // returns 1.18350528745e-313\n*\n* @example\n* var PINF = require( '@stdlib/constants/float64/pinf' ); // => 0 11111111111 00000000000000000000 00000000000000000000000000000000\n*\n* var high = 1072693248 >>> 0; // => 0 01111111111 00000000000000000000\n*\n* // Set the higher order bits of `+infinity` to return `1`:\n* var y = setHighWord( PINF, high ); // => 0 01111111111 0000000000000000000000000000000000000000000000000000\n* // returns 1.0\n*/\nfunction setHighWord( x, high ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tUINT32_VIEW[ HIGH ] = ( high >>> 0 ); // identity bit shift to ensure integer\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = setHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar HIGH;\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n} else {\n\tHIGH = 0; // first index\n}\n\n\n// EXPORTS //\n\nmodule.exports = HIGH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.5999999999999946;\n\t}\n\treturn 0.5999999999999946 + (x * (0.4285714285785502 + (x * (0.33333332981837743 + (x * (0.272728123808534 + (x * (0.23066074577556175 + (x * 0.20697501780033842))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\nvar setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\nvar BIAS = require( '@stdlib/constants/float64/exponent-bias' );\nvar polyvalL = require( './polyval_l.js' );\n\n\n// VARIABLES //\n\n// 0x000fffff = 1048575 => 0 00000000000 11111111111111111111\nvar HIGH_SIGNIFICAND_MASK = 0x000fffff|0; // asm type annotation\n\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar HIGH_MIN_NORMAL_EXP = 0x00100000|0; // asm type annotation\n\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar HIGH_BIASED_EXP_0 = 0x3ff00000|0; // asm type annotation\n\n// 0x20000000 = 536870912 => 0 01000000000 00000000000000000000 => biased exponent: 512 = -511+1023\nvar HIGH_BIASED_EXP_NEG_512 = 0x20000000|0; // asm type annotation\n\n// 0x00080000 = 524288 => 0 00000000000 10000000000000000000\nvar HIGH_SIGNIFICAND_HALF = 0x00080000|0; // asm type annotation\n\n// TODO: consider making an external constant\nvar HIGH_NUM_SIGNIFICAND_BITS = 20|0; // asm type annotation\n\nvar TWO53 = 9007199254740992.0;\t// 0x43400000, 0x00000000\n\n// 2/(3*LN2)\nvar CP = 9.61796693925975554329e-01; // 0x3FEEC709, 0xDC3A03FD\n\n// (float)CP\nvar CP_HI = 9.61796700954437255859e-01; // 0x3FEEC709, 0xE0000000\n\n// Low: CP_HI\nvar CP_LO = -7.02846165095275826516e-09; // 0xBE3E2FE0, 0x145B01F5\n\nvar BP = [\n\t1.0,\n\t1.5\n];\nvar DP_HI = [\n\t0.0,\n\t5.84962487220764160156e-01 // 0x3FE2B803, 0x40000000\n];\nvar DP_LO = [\n\t0.0,\n\t1.35003920212974897128e-08 // 0x3E4CFDEB, 0x43CFD006\n];\n\n\n// MAIN //\n\n/**\n* Computes \\\\(\\operatorname{log2}(ax)\\\\).\n*\n* @private\n* @param {Array} out - output array\n* @param {number} ax - absolute value of `x`\n* @param {number} ahx - high word of `ax`\n* @returns {Array} output array containing a tuple comprised of high and low parts\n*\n* @example\n* var t = log2ax( [ 0.0, 0.0 ], 9.0, 1075970048 ); // => [ t1, t2 ]\n* // returns [ 3.169923782348633, 0.0000012190936795504075 ]\n*/\nfunction log2ax( out, ax, ahx ) {\n\tvar tmp;\n\tvar ss; // `hs + ls`\n\tvar s2; // `ss` squared\n\tvar hs;\n\tvar ls;\n\tvar ht;\n\tvar lt;\n\tvar bp; // `BP` constant\n\tvar dp; // `DP` constant\n\tvar hp;\n\tvar lp;\n\tvar hz;\n\tvar lz;\n\tvar t1;\n\tvar t2;\n\tvar t;\n\tvar r;\n\tvar u;\n\tvar v;\n\tvar n;\n\tvar j;\n\tvar k;\n\n\tn = 0|0; // asm type annotation\n\n\t// Check if `x` is subnormal...\n\tif ( ahx < HIGH_MIN_NORMAL_EXP ) {\n\t\tax *= TWO53;\n\t\tn -= 53|0; // asm type annotation\n\t\tahx = getHighWord( ax );\n\t}\n\t// Extract the unbiased exponent of `x`:\n\tn += ((ahx >> HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // asm type annotation\n\n\t// Isolate the significand bits of `x`:\n\tj = (ahx & HIGH_SIGNIFICAND_MASK)|0; // asm type annotation\n\n\t// Normalize `ahx` by setting the (biased) exponent to `1023`:\n\tahx = (j | HIGH_BIASED_EXP_0)|0; // asm type annotation\n\n\t// Determine the interval of `|x|` by comparing significand bits...\n\n\t// |x| < sqrt(3/2)\n\tif ( j <= 0x3988E ) { // 0 00000000000 00111001100010001110\n\t\tk = 0;\n\t}\n\t// |x| < sqrt(3)\n\telse if ( j < 0xBB67A ) { // 0 00000000000 10111011011001111010\n\t\tk = 1;\n\t}\n\t// |x| >= sqrt(3)\n\telse {\n\t\tk = 0;\n\t\tn += 1|0; // asm type annotation\n\t\tahx -= HIGH_MIN_NORMAL_EXP;\n\t}\n\t// Load the normalized high word into `|x|`:\n\tax = setHighWord( ax, ahx );\n\n\t// Compute `ss = hs + ls = (x-1)/(x+1)` or `(x-1.5)/(x+1.5)`:\n\tbp = BP[ k ]; // BP[0] = 1.0, BP[1] = 1.5\n\tu = ax - bp; // (x-1) || (x-1.5)\n\tv = 1.0 / (ax + bp); // 1/(x+1) || 1/(x+1.5)\n\tss = u * v;\n\ths = setLowWord( ss, 0 ); // set all low word (less significant significand) bits to 0s\n\n\t// Compute `ht = ax + bp` (via manipulation, i.e., bit flipping, of the high word):\n\ttmp = ((ahx>>1) | HIGH_BIASED_EXP_NEG_512) + HIGH_SIGNIFICAND_HALF;\n\ttmp += (k << 18); // `(k<<18)` can be considered the word equivalent of `1.0` or `1.5`\n\tht = setHighWord( 0.0, tmp );\n\tlt = ax - (ht - bp);\n\tls = v * ( ( u - (hs*ht) ) - ( hs*lt ) );\n\n\t// Compute `log(ax)`...\n\n\ts2 = ss * ss;\n\tr = s2 * s2 * polyvalL( s2 );\n\tr += ls * (hs + ss);\n\ts2 = hs * hs;\n\tht = 3.0 + s2 + r;\n\tht = setLowWord( ht, 0 );\n\tlt = r - ((ht-3.0) - s2);\n\n\t// u+v = ss*(1+...):\n\tu = hs * ht;\n\tv = ( ls*ht ) + ( lt*ss );\n\n\t// 2/(3LN2) * (ss+...):\n\thp = u + v;\n\thp = setLowWord( hp, 0 );\n\tlp = v - (hp - u);\n\thz = CP_HI * hp; // CP_HI+CP_LO = 2/(3*LN2)\n\tlz = ( CP_LO*hp ) + ( lp*CP ) + DP_LO[ k ];\n\n\t// log2(ax) = (ss+...)*2/(3*LN2) = n + dp + hz + lz\n\tdp = DP_HI[ k ];\n\tt = n;\n\tt1 = ((hz+lz) + dp) + t; // log2(ax)\n\tt1 = setLowWord( t1, 0 );\n\tt2 = lz - (((t1-t) - dp) - hz);\n\n\tout[ 0 ] = t1;\n\tout[ 1 ] = t2;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = log2ax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Set the more significant 32 bits of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/set-high-word\n*\n* @example\n* var setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\n*\n* var high = 5 >>> 0; // => 0 00000000000 00000000000000000101\n*\n* var y = setHighWord( 3.14e201, high ); // => 0 00000000000 0000000000000000010110010011110010110101100010000010\n* // returns 1.18350528745e-313\n*\n* @example\n* var setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\n* var PINF = require( '@stdlib/constants/float64/pinf' ); //  => 0 11111111111 00000000000000000000 00000000000000000000000000000000\n*\n* var high = 1072693248 >>> 0; // => 0 01111111111 00000000000000000000\n*\n* // Set the higher order bits of `+infinity` to return `1`:\n* var y = setHighWord( PINF, high ); => 0 01111111111 0000000000000000000000000000000000000000000000000000\n* // returns 1.0\n*/\n\n// MODULES //\n\nvar setHighWord = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.5;\n\t}\n\treturn 0.5 + (x * (-0.3333333333333333 + (x * 0.25)));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\nvar polyvalW = require( './polyval_w.js' );\n\n\n// VARIABLES //\n\n// 1/LN2\nvar INV_LN2 = 1.44269504088896338700e+00; // 0x3FF71547, 0x652B82FE\n\n// High (24 bits): 1/LN2\nvar INV_LN2_HI = 1.44269502162933349609e+00; // 0x3FF71547, 0x60000000\n\n// Low: 1/LN2\nvar INV_LN2_LO = 1.92596299112661746887e-08; // 0x3E54AE0B, 0xF85DDF44\n\n\n// MAIN //\n\n/**\n* Computes \\\\(\\operatorname{log}(x)\\\\) assuming \\\\(|1-x|\\\\) is small and using the approximation \\\\(x - x^2/2 + x^3/3 - x^4/4\\\\).\n*\n* @private\n* @param {Array} out - output array\n* @param {number} ax - absolute value of `x`\n* @returns {Array} output array containing a tuple comprised of high and low parts\n*\n* @example\n* var t = logx( [ 0.0, 0.0 ], 9.0 ); // => [ t1, t2 ]\n* // returns [ -1265.7236328125, -0.0008163940840404393 ]\n*/\nfunction logx( out, ax ) {\n\tvar t2;\n\tvar t1;\n\tvar t;\n\tvar w;\n\tvar u;\n\tvar v;\n\n\tt = ax - 1.0; // `t` has `20` trailing zeros\n\tw = t * t * polyvalW( t );\n\tu = INV_LN2_HI * t; // `INV_LN2_HI` has `21` significant bits\n\tv = ( t*INV_LN2_LO ) - ( w*INV_LN2 );\n\tt1 = u + v;\n\tt1 = setLowWord( t1, 0 );\n\tt2 = v - (t1 - u);\n\n\tout[ 0 ] = t1;\n\tout[ 1 ] = t2;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = logx;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar FLOAT64_SMALLEST_NORMAL = require( '@stdlib/constants/float64/smallest-normal' );\nvar isInfinite = require( '@stdlib/math/base/assert/is-infinite' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// VARIABLES //\n\n// (1<<52)\nvar SCALAR = 4503599627370496;\n\n\n// MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = normalize( [ 0.0, 0 ], 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], 0.0 );\n* // returns [ 0.0, 0 ];\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], Infinity );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], -Infinity );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], NaN );\n* // returns [ NaN, 0 ]\n*/\nfunction normalize( out, x ) {\n\tif ( isnan( x ) || isInfinite( x ) ) {\n\t\tout[ 0 ] = x;\n\t\tout[ 1 ] = 0;\n\t\treturn out;\n\t}\n\tif ( x !== 0.0 && abs( x ) < FLOAT64_SMALLEST_NORMAL ) {\n\t\tout[ 0 ] = x * SCALAR;\n\t\tout[ 1 ] = -52;\n\t\treturn out;\n\t}\n\tout[ 0 ] = x;\n\tout[ 1 ] = 0;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fcn = require( './normalize.js' );\n\n\n// MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = normalize( [ 0.0, 0 ], 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = new Float64Array( 2 );\n*\n* var v = normalize( out, 3.14e-319 );\n* // returns <Float64Array>[ 1.4141234400356668e-303, -52 ]\n*\n* var bool = ( v === out );\n* // returns true\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], 0.0 );\n* // returns [ 0.0, 0 ]\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], Infinity );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], -Infinity );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( [ 0.0, 0 ], NaN );\n* // returns [ NaN, 0 ]\n*/\nfunction normalize( out, x ) {\n\tif ( arguments.length === 1 ) {\n\t\treturn fcn( [ 0.0, 0 ], out );\n\t}\n\treturn fcn( out, x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Smallest positive double-precision floating-point normal number.\n*\n* @module @stdlib/constants/float64/smallest-normal\n* @type {number}\n*\n* @example\n* var FLOAT64_SMALLEST_NORMAL = require( '@stdlib/constants/float64/smallest-normal' );\n* // returns 2.2250738585072014e-308\n*/\n\n\n// MAIN //\n\n/**\n* The smallest positive double-precision floating-point normal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{1023-1}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000000001 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default 2.2250738585072014e-308\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_SMALLEST_NORMAL = 2.2250738585072014e-308;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_SMALLEST_NORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( './../../../../float64/base/get-high-word' );\nvar EXP_MASK = require( '@stdlib/constants/float64/high-word-exponent-mask' );\nvar BIAS = require( '@stdlib/constants/float64/exponent-bias' );\n\n\n// MAIN //\n\n/**\n* Returns an integer corresponding to the unbiased exponent of a double-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {integer32} unbiased exponent\n*\n* @example\n* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307\n* // returns -1019\n*\n* @example\n* var exp = exponent( -3.14 );\n* // returns 1\n*\n* @example\n* var exp = exponent( 0.0 );\n* // returns -1023\n*\n* @example\n* var exp = exponent( NaN );\n* // returns 1024\n*/\nfunction exponent( x ) {\n\t// Extract from the input value a higher order word (unsigned 32-bit integer) which contains the exponent:\n\tvar high = getHighWord( x );\n\n\t// Apply a mask to isolate only the exponent bits and then shift off all bits which are part of the fraction:\n\thigh = ( high & EXP_MASK ) >>> 20;\n\n\t// Remove the bias and return:\n\treturn (high - BIAS)|0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nmodule.exports = exponent;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-exponent-mask\n* @type {uinteger32}\n*\n* @example\n* var FLOAT64_HIGH_WORD_EXPONENT_MASK = require( '@stdlib/constants/float64/high-word-exponent-mask' );\n* // returns 2146435072\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the exponent of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2146435072 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x7ff00000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_EXPONENT_MASK = 0x7ff00000;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_HIGH_WORD_EXPONENT_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The bias of a double-precision floating-point number's exponent.\n*\n* @module @stdlib/constants/float64/exponent-bias\n* @type {integer32}\n*\n* @example\n* var FLOAT64_EXPONENT_BIAS = require( '@stdlib/constants/float64/exponent-bias' );\n* // returns 1023\n*/\n\n\n// MAIN //\n\n/**\n* Bias of a double-precision floating-point number's exponent.\n*\n* ## Notes\n*\n* The bias can be computed via\n*\n* ```tex\n* \\mathrm{bias} = 2^{k-1} - 1\n* ```\n*\n* where \\\\(k\\\\) is the number of bits in the exponent; here, \\\\(k = 11\\\\).\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_EXPONENT_BIAS = 1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_EXPONENT_BIAS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// NOTES //\n\n/*\n* => ldexp: load exponent (see [The Open Group]{@link http://pubs.opengroup.org/onlinepubs/9699919799/functions/ldexp.html} and [cppreference]{@link http://en.cppreference.com/w/c/numeric/math/ldexp}).\n*/\n\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar BIAS = require( '@stdlib/constants/float64/exponent-bias' );\nvar MAX_EXPONENT = require( '@stdlib/constants/float64/max-base2-exponent' );\nvar MAX_SUBNORMAL_EXPONENT = require( '@stdlib/constants/float64/max-base2-exponent-subnormal' );\nvar MIN_SUBNORMAL_EXPONENT = require( '@stdlib/constants/float64/min-base2-exponent-subnormal' );\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar isInfinite = require( './../../../../base/assert/is-infinite' );\nvar copysign = require( './../../../../base/special/copysign' );\nvar normalize = require( '@stdlib/number/float64/base/normalize' );\nvar floatExp = require( '@stdlib/number/float64/base/exponent' );\nvar toWords = require( '@stdlib/number/float64/base/to-words' );\nvar fromWords = require( '@stdlib/number/float64/base/from-words' );\n\n\n// VARIABLES //\n\n// 1/(1<<52) = 1/(2**52) = 1/4503599627370496\nvar TWO52_INV = 2.220446049250313e-16;\n\n// Exponent all 0s: 1 00000000000 11111111111111111111 => 2148532223\nvar CLEAR_EXP_MASK = 0x800fffff>>>0; // asm type annotation\n\n// Normalization workspace:\nvar FRAC = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Multiplies a double-precision floating-point number by an integer power of two.\n*\n* @param {number} frac - fraction\n* @param {integer} exp - exponent\n* @returns {number} double-precision floating-point number\n*\n* @example\n* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* @example\n* var x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* @example\n* var x = ldexp( 0.0, 20 );\n* // returns 0.0\n*\n* @example\n* var x = ldexp( -0.0, 39 );\n* // returns -0.0\n*\n* @example\n* var x = ldexp( NaN, -101 );\n* // returns NaN\n*\n* @example\n* var x = ldexp( Infinity, 11 );\n* // returns Infinity\n*\n* @example\n* var x = ldexp( -Infinity, -118 );\n* // returns -Infinity\n*/\nfunction ldexp( frac, exp ) {\n\tvar high;\n\tvar m;\n\tif (\n\t\texp === 0 ||\n\t\tfrac === 0.0 || // handles +-0\n\t\tisnan( frac ) ||\n\t\tisInfinite( frac )\n\t) {\n\t\treturn frac;\n\t}\n\t// Normalize the input fraction:\n\tnormalize( FRAC, frac );\n\tfrac = FRAC[ 0 ];\n\texp += FRAC[ 1 ];\n\n\t// Extract the exponent from `frac` and add it to `exp`:\n\texp += floatExp( frac );\n\n\t// Check for underflow/overflow...\n\tif ( exp < MIN_SUBNORMAL_EXPONENT ) {\n\t\treturn copysign( 0.0, frac );\n\t}\n\tif ( exp > MAX_EXPONENT ) {\n\t\tif ( frac < 0.0 ) {\n\t\t\treturn NINF;\n\t\t}\n\t\treturn PINF;\n\t}\n\t// Check for a subnormal and scale accordingly to retain precision...\n\tif ( exp <= MAX_SUBNORMAL_EXPONENT ) {\n\t\texp += 52;\n\t\tm = TWO52_INV;\n\t} else {\n\t\tm = 1.0;\n\t}\n\t// Split the fraction into higher and lower order words:\n\ttoWords( WORDS, frac );\n\thigh = WORDS[ 0 ];\n\n\t// Clear the exponent bits within the higher order word:\n\thigh &= CLEAR_EXP_MASK;\n\n\t// Set the exponent bits to the new exponent:\n\thigh |= ((exp+BIAS) << 20);\n\n\t// Create a new floating-point number:\n\treturn m * fromWords( high, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ldexp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an integer corresponding to the unbiased exponent of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/exponent\n*\n* @example\n* var exponent = require( '@stdlib/number/float64/base/exponent' );\n*\n* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307\n* // returns -1019\n*\n* exp = exponent( -3.14 );\n* // returns 1\n*\n* exp = exponent( 0.0 );\n* // returns -1023\n*\n* exp = exponent( NaN );\n* // returns 1024\n*/\n\n// MODULES //\n\nvar exponent = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = exponent;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/min-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/constants/float64/min-base2-exponent-subnormal' );\n* // returns -1074\n*/\n\n\n// MAIN //\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* -(BIAS+(52-1)) = -(1023+51) = -1074\n* ```\n*\n* where `BIAS = 1023` and `52` is the number of digits in the significand.\n*\n* @constant\n* @type {integer32}\n* @default -1074\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = -1074|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max-base2-exponent\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MAX_BASE2_EXPONENT = require( '@stdlib/constants/float64/max-base2-exponent' );\n* // returns 1023\n*/\n\n\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* ```text\n* 11111111110 => 2046 - BIAS = 1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE2_EXPONENT = 1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_BASE2_EXPONENT;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/constants/float64/max-base2-exponent-subnormal' );\n* // returns -1023\n*/\n\n\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* 00000000000 => 0 - BIAS = -1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default -1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = -1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.16666666666666602;\n\t}\n\treturn 0.16666666666666602 + (x * (-0.0027777777777015593 + (x * (0.00006613756321437934 + (x * (-0.0000016533902205465252 + (x * 4.1381367970572385e-8))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\nvar setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\nvar uint32ToInt32 = require( '@stdlib/number/uint32/base/to-int32' );\nvar ldexp = require( './../../../../base/special/ldexp' );\nvar LN2 = require( '@stdlib/constants/float64/ln-two' );\nvar BIAS = require( '@stdlib/constants/float64/exponent-bias' );\nvar polyvalP = require( './polyval_p.js' );\n\n\n// VARIABLES //\n\n// 0x7fffffff = 2147483647 => 0 11111111111 11111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// 0x000fffff = 1048575 => 0 00000000000 11111111111111111111\nvar HIGH_SIGNIFICAND_MASK = 0x000fffff|0; // asm type annotation\n\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar HIGH_MIN_NORMAL_EXP = 0x00100000|0; // asm type annotation\n\n// 0x3fe00000 = 1071644672 => 0 01111111110 00000000000000000000 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_BIASED_EXP_NEG_1 = 0x3fe00000|0; // asm type annotation\n\n// TODO: consider making into an external constant\nvar HIGH_NUM_SIGNIFICAND_BITS = 20|0; // asm type annotation\n\n// High: LN2\nvar LN2_HI = 6.93147182464599609375e-01; // 0x3FE62E43, 0x00000000\n\n// Low: LN2\nvar LN2_LO = -1.90465429995776804525e-09; // 0xBE205C61, 0x0CA86C39\n\n\n// MAIN //\n\n/**\n* Computes \\\\(2^{\\mathrm{hp} + \\mathrm{lp}\\\\).\n*\n* @private\n* @param {number} j - high word of `hp + lp`\n* @param {number} hp - first power summand\n* @param {number} lp - second power summand\n* @returns {number} function value\n*\n* @example\n* var z = pow2( 1065961648, -0.3398475646972656, -0.000002438187359100815 );\n* // returns ~0.79\n*/\nfunction pow2( j, hp, lp ) {\n\tvar tmp;\n\tvar t1;\n\tvar t;\n\tvar r;\n\tvar u;\n\tvar v;\n\tvar w;\n\tvar z;\n\tvar n;\n\tvar i;\n\tvar k;\n\n\ti = (j & ABS_MASK)|0; // asm type annotation\n\tk = ((i>>HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // asm type annotation\n\tn = 0;\n\n\t// `|z| > 0.5`, set `n = z+0.5`\n\tif ( i > HIGH_BIASED_EXP_NEG_1 ) {\n\t\tn = (j + (HIGH_MIN_NORMAL_EXP>>(k+1)))>>>0; // asm type annotation\n\t\tk = (((n & ABS_MASK)>>HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // new k for n\n\t\ttmp = ((n & ~(HIGH_SIGNIFICAND_MASK >> k)))>>>0; // asm type annotation\n\t\tt = setHighWord( 0.0, tmp );\n\t\tn = (((n & HIGH_SIGNIFICAND_MASK)|HIGH_MIN_NORMAL_EXP) >> (HIGH_NUM_SIGNIFICAND_BITS-k))>>>0; // eslint-disable-line max-len\n\t\tif ( j < 0 ) {\n\t\t\tn = -n;\n\t\t}\n\t\thp -= t;\n\t}\n\tt = lp + hp;\n\tt = setLowWord( t, 0 );\n\tu = t * LN2_HI;\n\tv = ( (lp - (t-hp))*LN2 ) + ( t*LN2_LO );\n\tz = u + v;\n\tw = v - (z - u);\n\tt = z * z;\n\tt1 = z - ( t*polyvalP( t ) );\n\tr = ( (z*t1) / (t1-2.0) ) - ( w + (z*w) );\n\tz = 1.0 - (r - z);\n\tj = getHighWord( z );\n\tj = uint32ToInt32( j );\n\tj += (n << HIGH_NUM_SIGNIFICAND_BITS)>>>0; // asm type annotation\n\n\t// Check for subnormal output...\n\tif ( (j>>HIGH_NUM_SIGNIFICAND_BITS) <= 0 ) {\n\t\tz = ldexp( z, n );\n\t} else {\n\t\tz = setHighWord( z, j );\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Multiply a double-precision floating-point number by an integer power of two.\n*\n* @module @stdlib/math/base/special/ldexp\n*\n* @example\n* var ldexp = require( '@stdlib/math/base/special/ldexp' );\n*\n* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* x = ldexp( 0.0, 20 );\n* // returns 0.0\n*\n* x = ldexp( -0.0, 39 );\n* // returns -0.0\n*\n* x = ldexp( NaN, -101 );\n* // returns NaN\n*\n* x = ldexp( Infinity, 11 );\n* // returns Infinity\n*\n* x = ldexp( -Infinity, -118 );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of `2`.\n*\n* @module @stdlib/constants/float64/ln-two\n* @type {number}\n*\n* @example\n* var LN2 = require( '@stdlib/constants/float64/ln-two' );\n* // returns 0.6931471805599453\n*/\n\n\n// MAIN //\n\n/**\n* Natural logarithm of `2`.\n*\n* ```tex\n* \\ln 2\n* ```\n*\n* @constant\n* @type {number}\n* @default 0.6931471805599453\n*/\nvar LN2 = 6.93147180559945309417232121458176568075500134360255254120680009493393621969694715605863326996418687542001481021e-01; // eslint-disable-line max-len\n\n\n// EXPORTS //\n\nmodule.exports = LN2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( './../../../../base/assert/is-nan' );\nvar isOdd = require( './../../../../base/assert/is-odd' );\nvar isInfinite = require( './../../../../base/assert/is-infinite' );\nvar isInteger = require( './../../../../base/assert/is-integer' );\nvar sqrt = require( './../../../../base/special/sqrt' );\nvar abs = require( './../../../../base/special/abs' );\nvar toWords = require( '@stdlib/number/float64/base/to-words' );\nvar setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\nvar uint32ToInt32 = require( '@stdlib/number/uint32/base/to-int32' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar xIsZero = require( './x_is_zero.js' );\nvar yIsHuge = require( './y_is_huge.js' );\nvar yIsInfinite = require( './y_is_infinite.js' );\nvar log2ax = require( './log2ax.js' );\nvar logx = require( './logx.js' );\nvar pow2 = require( './pow2.js' );\n\n\n// VARIABLES //\n\n// 0x7fffffff = 2147483647 => 0 11111111111 11111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// 0x3fefffff = 1072693247 => 0 01111111110 11111111111111111111 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_MAX_NEAR_UNITY = 0x3fefffff|0; // asm type annotation\n\n// 0x41e00000 = 1105199104 => 0 10000011110 00000000000000000000 => biased exponent: 1054 = 31+1023 => 2^31\nvar HIGH_BIASED_EXP_31 = 0x41e00000|0; // asm type annotation\n\n// 0x43f00000 = 1139802112 => 0 10000111111 00000000000000000000 => biased exponent: 1087 = 64+1023 => 2^64\nvar HIGH_BIASED_EXP_64 = 0x43f00000|0; // asm type annotation\n\n// 0x40900000 = 1083179008 => 0 10000001001 00000000000000000000 => biased exponent: 1033 = 10+1023 => 2^10 = 1024\nvar HIGH_BIASED_EXP_10 = 0x40900000|0; // asm type annotation\n\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar HIGH_BIASED_EXP_0 = 0x3ff00000|0; // asm type annotation\n\n// 0x4090cc00 = 1083231232 => 0 10000001001 00001100110000000000\nvar HIGH_1075 = 0x4090cc00|0; // asm type annotation\n\n// 0xc090cc00 = 3230714880 => 1 10000001001 00001100110000000000\nvar HIGH_NEG_1075 = 0xc090cc00>>>0; // asm type annotation\n\nvar HIGH_NUM_NONSIGN_BITS = 31|0; // asm type annotation\n\nvar HUGE = 1.0e300;\nvar TINY = 1.0e-300;\n\n// -(1024-log2(ovfl+.5ulp))\nvar OVT = 8.0085662595372944372e-17;\n\n// High/low words workspace:\nvar WORDS = [ 0|0, 0|0 ]; // WARNING: not thread safe\n\n// Log workspace:\nvar LOG_WORKSPACE = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function.\n*\n* ## Method\n*\n* 1.  Let \\\\(x = 2^n (1+f)\\\\).\n*\n* 2.  Compute \\\\(\\operatorname{log2}(x)\\\\) as\n*\n*     ```tex\n*     \\operatorname{log2}(x) = w_1 + w_2\n*     ```\n*\n*     where \\\\(w_1\\\\) has \\\\(53 - 24 = 29\\\\) bit trailing zeros.\n*\n* 3.  Compute\n*\n*     ```tex\n*     y \\cdot \\operatorname{log2}(x) = n + y^\\prime\n*     ```\n*\n*     by simulating multi-precision arithmetic, where \\\\(|y^\\prime| \\leq 0.5\\\\).\n*\n* 4.  Return\n*\n*     ```tex\n*     x^y = 2^n e^{y^\\prime \\cdot \\mathrm{log2}}\n*     ```\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* x^{\\mathrm{NaN}} &= \\mathrm{NaN} & \\\\\n* (\\mathrm{NaN})^y &= \\mathrm{NaN} & \\\\\n* 1^y &= 1 & \\\\\n* x^0 &= 1 & \\\\\n* x^1 &= x & \\\\\n* (\\pm 0)^\\infty &= +0 & \\\\\n* (\\pm 0)^{-\\infty} &= +\\infty & \\\\\n* (+0)^y &= +0 & \\mathrm{if}\\ y > 0 \\\\\n* (+0)^y &= +\\infty & \\mathrm{if}\\ y < 0 \\\\\n* (-0)^y &= -\\infty & \\mathrm{if}\\ y\\ \\mathrm{is\\ an\\ odd\\ integer\\ and}\\ y < 0 \\\\\n* (-0)^y &= +\\infty & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ an\\ odd\\ integer\\ and}\\ y < 0 \\\\\n* (-0)^y &= -0 & \\mathrm{if}\\ y\\ \\mathrm{is\\ an\\ odd\\ integer\\ and}\\ y > 0 \\\\\n* (-0)^y &= +0 & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ an\\ odd\\ integer\\ and}\\ y > 0 \\\\\n* (-1)^{\\pm\\infty} &= \\mathrm{NaN} & \\\\\n* x^{\\infty} &= +\\infty & |x| > 1 \\\\\n* x^{\\infty} &= +0 & |x| < 1 \\\\\n* x^{-\\infty} &= +0 & |x| > 1 \\\\\n* x^{-\\infty} &= +\\infty & |x| < 1 \\\\\n* (-\\infty)^y &= (-0)^y & \\\\\n* \\infty^y &= +0 & y < 0 \\\\\n* \\infty^y &= +\\infty & y > 0 \\\\\n* x^y &= \\mathrm{NaN} & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ a\\ finite\\ integer\\ and}\\ x < 0\n* \\end{align*}\n* ```\n*\n* ## Notes\n*\n* -   \\\\(\\operatorname{pow}(x,y)\\\\) returns \\\\(x^y\\\\) nearly rounded. In particular, \\\\(\\operatorname{pow}(<\\mathrm{integer}>,<\\mathrm{integer}>)\\\\) **always** returns the correct integer, provided the value is representable.\n* -   The hexadecimal values shown in the source code are the intended values for used constants. Decimal values may be used, provided the compiler will accurately convert decimal to binary in order to produce the hexadecimal values.\n*\n*\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( 2.0, 3.0 );\n* // returns 8.0\n*\n* @example\n* var v = pow( 4.0, 0.5 );\n* // returns 2.0\n*\n* @example\n* var v = pow( 100.0, 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = pow( 3.141592653589793, 5.0 );\n* // returns ~306.0197\n*\n* @example\n* var v = pow( 3.141592653589793, -0.2 );\n* // returns ~0.7954\n*\n* @example\n* var v = pow( NaN, 3.0 );\n* // returns NaN\n*\n* @example\n* var v = pow( 5.0, NaN );\n* // returns NaN\n*\n* @example\n* var v = pow( NaN, NaN );\n* // returns NaN\n*/\nfunction pow( x, y ) {\n\tvar ahx; // absolute value high word `x`\n\tvar ahy; // absolute value high word `y`\n\tvar ax;  // absolute value `x`\n\tvar hx;  // high word `x`\n\tvar lx;  // low word `x`\n\tvar hy;  // high word `y`\n\tvar ly;  // low word `y`\n\tvar sx;  // sign `x`\n\tvar sy;  // sign `y`\n\tvar y1;\n\tvar hp;\n\tvar lp;\n\tvar t;\n\tvar z;   // y prime\n\tvar j;\n\tvar i;\n\tif ( isnan( x ) || isnan( y ) ) {\n\t\treturn NaN;\n\t}\n\t// Split `y` into high and low words:\n\ttoWords( WORDS, y );\n\thy = WORDS[ 0 ];\n\tly = WORDS[ 1 ];\n\n\t// Special cases `y`...\n\tif ( ly === 0 ) {\n\t\tif ( y === 0.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif ( y === 1.0 ) {\n\t\t\treturn x;\n\t\t}\n\t\tif ( y === -1.0 ) {\n\t\t\treturn 1.0 / x;\n\t\t}\n\t\tif ( y === 0.5 ) {\n\t\t\treturn sqrt( x );\n\t\t}\n\t\tif ( y === -0.5 ) {\n\t\t\treturn 1.0 / sqrt( x );\n\t\t}\n\t\tif ( y === 2.0 ) {\n\t\t\treturn x * x;\n\t\t}\n\t\tif ( y === 3.0 ) {\n\t\t\treturn x * x * x;\n\t\t}\n\t\tif ( y === 4.0 ) {\n\t\t\tx *= x;\n\t\t\treturn x * x;\n\t\t}\n\t\tif ( isInfinite( y ) ) {\n\t\t\treturn yIsInfinite( x, y );\n\t\t}\n\t}\n\t// Split `x` into high and low words:\n\ttoWords( WORDS, x );\n\thx = WORDS[ 0 ];\n\tlx = WORDS[ 1 ];\n\n\t// Special cases `x`...\n\tif ( lx === 0 ) {\n\t\tif ( hx === 0 ) {\n\t\t\treturn xIsZero( x, y );\n\t\t}\n\t\tif ( x === 1.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif (\n\t\t\tx === -1.0 &&\n\t\t\tisOdd( y )\n\t\t) {\n\t\t\treturn -1.0;\n\t\t}\n\t\tif ( isInfinite( x ) ) {\n\t\t\tif ( x === NINF ) {\n\t\t\t\t// `pow( 1/x, -y )`\n\t\t\t\treturn pow( -0.0, -y );\n\t\t\t}\n\t\t\tif ( y < 0.0 ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\treturn PINF;\n\t\t}\n\t}\n\tif (\n\t\tx < 0.0 &&\n\t\tisInteger( y ) === false\n\t) {\n\t\t// Signal NaN...\n\t\treturn (x-x)/(x-x);\n\t}\n\tax = abs( x );\n\n\t// Remove the sign bits (i.e., get absolute values):\n\tahx = (hx & ABS_MASK)|0; // asm type annotation\n\tahy = (hy & ABS_MASK)|0; // asm type annotation\n\n\t// Extract the sign bits:\n\tsx = (hx >>> HIGH_NUM_NONSIGN_BITS)|0; // asm type annotation\n\tsy = (hy >>> HIGH_NUM_NONSIGN_BITS)|0; // asm type annotation\n\n\t// Determine the sign of the result...\n\tif ( sx && isOdd( y ) ) {\n\t\tsx = -1.0;\n\t} else {\n\t\tsx = 1.0;\n\t}\n\t// Case 1: `|y|` is huge...\n\n\t// |y| > 2^31\n\tif ( ahy > HIGH_BIASED_EXP_31 ) {\n\t\t// `|y| > 2^64`, then must over- or underflow...\n\t\tif ( ahy > HIGH_BIASED_EXP_64 ) {\n\t\t\treturn yIsHuge( x, y );\n\t\t}\n\t\t// Over- or underflow if `x` is not close to unity...\n\n\t\tif ( ahx < HIGH_MAX_NEAR_UNITY ) {\n\t\t\t// y < 0\n\t\t\tif ( sy === 1 ) {\n\t\t\t\t// Signal overflow...\n\t\t\t\treturn sx * HUGE * HUGE;\n\t\t\t}\n\t\t\t// Signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\tif ( ahx > HIGH_BIASED_EXP_0 ) {\n\t\t\t// y > 0\n\t\t\tif ( sy === 0 ) {\n\t\t\t\t// Signal overflow...\n\t\t\t\treturn sx * HUGE * HUGE;\n\t\t\t}\n\t\t\t// Signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\t// At this point, `|1-x|` is tiny (`<= 2^-20`). Suffice to compute `log(x)` by `x - x^2/2 + x^3/3 - x^4/4`.\n\t\tt = logx( LOG_WORKSPACE, ax );\n\t}\n\t// Case 2: `|y|` is not huge...\n\telse {\n\t\tt = log2ax( LOG_WORKSPACE, ax, ahx );\n\t}\n\t// Split `y` into `y1 + y2` and compute `(y1+y2) * (t1+t2)`...\n\ty1 = setLowWord( y, 0 );\n\tlp = ( (y-y1)*t[0] ) + ( y*t[1] );\n\thp = y1 * t[0];\n\tz = lp + hp;\n\n\t// Note: *can* be more performant to use `getHighWord` and `getLowWord` directly, but using `toWords` looks cleaner.\n\ttoWords( WORDS, z );\n\tj = uint32ToInt32( WORDS[0] );\n\ti = uint32ToInt32( WORDS[1] );\n\n\t// z >= 1024\n\tif ( j >= HIGH_BIASED_EXP_10 ) {\n\t\t// z > 1024\n\t\tif ( ((j-HIGH_BIASED_EXP_10)|i) !== 0 ) {\n\t\t\t// Signal overflow...\n\t\t\treturn sx * HUGE * HUGE;\n\t\t}\n\t\tif ( (lp+OVT) > (z-hp) ) {\n\t\t\t// Signal overflow...\n\t\t\treturn sx * HUGE * HUGE;\n\t\t}\n\t}\n\t// z <= -1075\n\telse if ( (j&ABS_MASK) >= HIGH_1075 ) {\n\t\t// z < -1075\n\t\tif ( ((j-HIGH_NEG_1075)|i) !== 0 ) {\n\t\t\t// signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\tif ( lp <= (z-hp) ) {\n\t\t\t// signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t}\n\t// Compute `2^(hp+lp)`...\n\tz = pow2( j, hp, lp );\n\n\treturn sx * z;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// VARIABLES //\n\nvar DEFAULT_BASE = 10;\nvar DEFAULT_LEN = 100;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns evenly spaced numbers on a log scale.\n*\n* @param {number} start - exponent of starting value (inclusive)\n* @param {number} stop - exponent of stopping value (inclusive)\n* @param {NonNegativeInteger} [N=100] - number of values\n* @param {Options} [options] - function options\n* @param {PositiveNumber} [options.base=10] - base of log space\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} `N` argument must be a nonnegative integer\n* @throws {TypeError} `options` argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterLogspace( 0, 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 10\n*\n* v = iter.next().value;\n* // returns 100\n*\n* // ...\n*/\nfunction iterLogspace( start, stop, N, options ) {\n\tvar step;\n\tvar iter;\n\tvar FLG;\n\tvar b;\n\tvar n;\n\tvar d;\n\tvar i;\n\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( !isNumber( stop ) || isnan( stop ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', stop ) );\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( isNonNegativeInteger( N ) ) {\n\t\t\tn = N;\n\t\t\tb = DEFAULT_BASE;\n\t\t} else if ( isPlainObject( N ) ) {\n\t\t\tn = DEFAULT_LEN;\n\t\t\tif ( hasOwnProp( N, 'base' ) ) {\n\t\t\t\tif ( !isPositiveNumber( N.base ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'base', N.base ) );\n\t\t\t\t}\n\t\t\t\tb = N.base;\n\t\t\t} else {\n\t\t\t\tb = DEFAULT_BASE;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either a nonnegative integer or an object. Value: `%s`.', N ) );\n\t\t}\n\t} else if ( arguments.length >= 4 ) {\n\t\tif ( !isNonNegativeInteger( N ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t\t}\n\t\tn = N;\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'base' ) ) {\n\t\t\tif ( !isPositiveNumber( options.base ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'base', options.base ) );\n\t\t\t}\n\t\t\tb = options.base;\n\t\t} else {\n\t\t\tb = DEFAULT_BASE;\n\t\t}\n\t} else {\n\t\tn = DEFAULT_LEN;\n\t\tb = DEFAULT_BASE;\n\t}\n\td = n - 1;\n\tstep = (stop-start) / d;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( i === 0 ) {\n\t\t\treturn {\n\t\t\t\t'value': pow( b, start ),\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\tif ( i === d ) {\n\t\t\treturn {\n\t\t\t\t'value': pow( b, stop ),\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': pow( b, (i*step)+start ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterLogspace( start, stop, n, {\n\t\t\t'base': b\n\t\t});\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterLogspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the exponential function.\n*\n* @module @stdlib/math/base/special/pow\n*\n* @example\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var v = pow( 2.0, 3.0 );\n* // returns 8.0\n*\n* v = pow( 4.0, 0.5 );\n* // returns 2.0\n*\n* v = pow( 100.0, 0.0 );\n* // returns 1.0\n*\n* v = pow( 3.141592653589793, 5.0 );\n* // returns ~306.0197\n*\n* v = pow( 3.141592653589793, -0.2 );\n* // returns ~0.7954\n*\n* v = pow( NaN, 3.0 );\n* // returns NaN\n*\n* v = pow( 5.0, NaN );\n* // returns NaN\n*\n* v = pow( NaN, NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar pow = require( './pow.js' );\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns evenly spaced numbers on a log scale.\n*\n* @module @stdlib/iter/logspace\n*\n* @example\n* var iterLogspace = require( '@stdlib/iter/logspace' );\n*\n* var iter = iterLogspace( 0, 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 10\n*\n* v = iter.next().value;\n* // returns 100\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which invokes a function for each iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n*\n* function transform( v ) {\n*     return v * 10.0;\n* }\n*\n* var iter = iterMap( randu(), transform );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterMap( iterator, fcn, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\ti += 1;\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, v.value, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterMap( iterator[ iteratorSymbol ](), fcn, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which invokes a function for each iterated value.\n*\n* @module @stdlib/iter/map\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterMap = require( '@stdlib/iter/map' );\n*\n* function transform( v ) {\n*     return v * 10.0;\n* }\n*\n* var iter = iterMap( randu(), transform );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterMap = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which transforms iterated values from two or more iterators by applying the iterated values as arguments to a provided function.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @throws {TypeError} callback argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function transform( x, y ) {\n*     return x + y;\n* }\n*\n* var it1 = array2iterator( [ 1.0, 2.0 ] );\n* var it2 = array2iterator( [ 3.0, 4.0 ] );\n*\n* var iter = iterMapN( it1, it2, transform );\n*\n* var v = iter.next().value;\n* // returns 4.0\n*\n* v = iter.next().value;\n* // returns 6.0\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterMapN() {\n\tvar iterators;\n\tvar thisArg;\n\tvar niter;\n\tvar clbk;\n\tvar iter;\n\tvar FLG;\n\tvar idx;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( !isFunction( arguments[ niter-1 ] ) ) {\n\t\tniter -= 1;\n\t\tthisArg = arguments[ niter ];\n\t}\n\tniter -= 1;\n\tclbk = arguments[ niter ];\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', clbk ) );\n\t}\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient input arguments. Must provide two or more iterators.' );\n\t}\n\titerators = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\tif ( !isIteratorLike( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\titerators.push( arguments[ i ] );\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\tFLG = false;\n\tidx = -1;\n\ti = 0;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar args;\n\t\tvar v;\n\t\tvar i;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\targs = [];\n\t\tidx += 1;\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tv = iterators[ i ].next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\targs.push( v.value );\n\t\t}\n\t\targs.push( idx );\n\t\treturn {\n\t\t\t'value': clbk.apply( thisArg, args ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\targs.push( clbk );\n\t\targs.push( thisArg );\n\t\treturn iterMapN.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterMapN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which transforms iterated values from two or more iterators by applying the iterated values as arguments to a provided function.\n*\n* @module @stdlib/iter/mapn\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterMapN = require( '@stdlib/iter/mapn' );\n*\n* function transform( x, y ) {\n*     return x + y;\n* }\n*\n* var it1 = array2iterator( [ 1.0, 2.0 ] );\n* var it2 = array2iterator( [ 3.0, 4.0 ] );\n*\n* var iter = iterMapN( it1, it2, transform );\n*\n* var v = iter.next().value;\n* // returns 4.0\n*\n* v = iter.next().value;\n* // returns 6.0\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterMapN = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterMapN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether all iterated values are falsy.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {boolean} boolean indicating whether all iterated values are falsy\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterNone( it );\n* // returns false\n*/\nfunction iterNone( iterator ) {\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( v.value ) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterNone;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all iterated values are falsy.\n*\n* @module @stdlib/iter/none\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterNone = require( '@stdlib/iter/none' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterNone( it );\n* // returns false\n*/\n\n// MODULES //\n\nvar iterNone = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterNone;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether every iterated value fails a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether every iterated value fails a test implemented by a predicate function\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function predicate( v ) {\n*     return ( v <= 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 1 ] );\n*\n* var bool = iterNoneBy( it, predicate );\n* // returns true\n*/\nfunction iterNoneBy( iterator, predicate, thisArg ) {\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( predicate.call( thisArg, v.value, i ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterNoneBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether every iterated value fails a test implemented by a predicate function.\n*\n* @module @stdlib/iter/none-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterNoneBy = require( '@stdlib/iter/none-by' );\n*\n* function predicate( v ) {\n*     return ( v <= 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 1 ] );\n*\n* var bool = iterNoneBy( it, predicate );\n* // returns true\n*/\n\n// MODULES //\n\nvar iterNoneBy = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterNoneBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns the nth iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - iteration number\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {*} nth iterated value\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 0, 0, 1, 0, 0 ] );\n*\n* var v = iterNth( it, 3 );\n* // returns 1\n*/\nfunction iterNth( iterator, n ) {\n\tvar i;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\ti = 0;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( i === n ) {\n\t\t\treturn v.value;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterNth;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the nth iterated value.\n*\n* @module @stdlib/iter/nth\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterNth = require( '@stdlib/iter/nth' );\n*\n* var it = array2iterator( [ 0, 0, 1, 0, 0 ] );\n*\n* var v = iterNth( it, 3 );\n* // returns 1\n*/\n\n// MODULES //\n\nvar iterNth = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterNth;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is an array-like object\n*\n* @example\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( { 'length':10 } );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( 'beep' );\n* // returns false\n*/\nfunction isArrayLikeObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLikeObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isArrayLike = require( '@stdlib/assert/is-array-like-object' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator pipeline.\n*\n* @param {(Function|FunctionArray)} iterFcn0 - iterator function or an array of iterator functions\n* @param {...Function} [iterFcn] - iterator function(s)\n* @throws {TypeError} must provide functions\n* @throws {Error} must provide at least one iterator function\n* @returns {Function} iterator pipeline\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterSomeBy = require( '@stdlib/iter/some-by' );\n* var iterHead = require( '@stdlib/iter/head' );\n* var iterThunk = require( '@stdlib/iter/pipeline-thunk' );\n*\n* function threshold( r ) {\n*     return ( r > 0.95 );\n* }\n*\n* var it1 = iterThunk( iterHead, 100 );\n* var it2 = iterThunk( iterSomeBy, 5, threshold );\n*\n* var p = iterPipeline( it1, it2 );\n*\n* var bool = p( randu() );\n* // returns <boolean>\n*/\nfunction iterPipeline() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\n\tnFuncs = arguments.length;\n\tif ( nFuncs === 1 && isArrayLike( arguments[ 0 ] ) ) {\n\t\tf = arguments[ 0 ].slice();\n\t\tnFuncs = f.length;\n\t} else {\n\t\tf = [];\n\t\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\t\tf.push( arguments[ i ] );\n\t\t}\n\t}\n\tif ( nFuncs === 0 ) {\n\t\tthrow new Error( 'insufficient input arguments. Must provide at least one iterator function.' );\n\t}\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide functions. Value: `%s`.', f[ i ] ) );\n\t\t}\n\t}\n\treturn pipeline;\n\n\t/**\n\t* Pipeline function.\n\t*\n\t* @private\n\t* @param {Iterator} iterator - source iterator\n\t* @throws {TypeError} must provide an iterator\n\t* @throws {TypeError} each iterator function, except the last iterator function, within an iterator pipeline must return an iterator\n\t* @returns {(Iterator|*)} an iterator or pipeline result\n\t*/\n\tfunction pipeline( iterator ) {\n\t\tvar iter;\n\t\tif ( !isIteratorLike( iterator ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t\t}\n\t\titer = iterator;\n\t\tfor ( i = 0; i < nFuncs-1; i++ ) {\n\t\t\titer = f[ i ]( iter );\n\t\t\tif ( !isIteratorLike( iter ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Each iterator function, except the last iterator function, within an iterator pipeline must return an iterator. Value: `%s`.', iter ) );\n\t\t\t}\n\t\t}\n\t\treturn f[ nFuncs-1 ]( iter );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterPipeline;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a generic array.\n*\n* @module @stdlib/constants/array/max-array-length\n*\n* @example\n* var MAX_ARRAY_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n* // returns 4294967295\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a generic array.\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar MAX_ARRAY_LENGTH = 4294967295>>>0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = MAX_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator pipeline.\n*\n* @module @stdlib/iter/pipeline\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterSomeBy = require( '@stdlib/iter/some-by' );\n* var iterHead = require( '@stdlib/iter/head' );\n* var iterThunk = require( '@stdlib/iter/pipeline-thunk' );\n* var iterPipeline = require( '@stdlib/iter/pipeline' );\n*\n* function threshold( r ) {\n*     return ( r > 0.95 );\n* }\n*\n* var it1 = iterThunk( iterHead, 100 );\n* var it2 = iterThunk( iterSomeBy, 5, threshold );\n*\n* var p = iterPipeline( it1, it2 );\n*\n* var bool = p( randu() );\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar iterPipeline = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterPipeline;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator \"thunk\".\n*\n* @param {Function} iterFcn - iterator function\n* @param {...*} [args] - function arguments\n* @throws {TypeError} first argument must be a function\n* @returns {Function} iterator \"thunk\"\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterSome = require( '@stdlib/iter/some' );\n*\n* var it = array2iterator( [ 0, 0, 1, 1, 1 ] );\n*\n* var thunk = iterThunk( iterSome, 3 );\n*\n* var bool = thunk( it );\n* // returns true\n*/\nfunction iterThunk( iterFcn ) {\n\tvar pargs;\n\tvar nargs;\n\tvar i;\n\tif ( !isFunction( iterFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', iterFcn ) );\n\t}\n\tnargs = arguments.length;\n\tpargs = [];\n\tfor ( i = 1; i < nargs; i++ ) {\n\t\tpargs.push( arguments[ i ] );\n\t}\n\treturn thunk;\n\n\t/**\n\t* Invokes an iterator function with a provided iterator and previously provided iterator function arguments.\n\t*\n\t* @private\n\t* @param {Iterator} iter - input iterator\n\t* @throws {TypeError} must provide an iterator\n\t* @returns {*} iterator function result\n\t*/\n\tfunction thunk( iter ) {\n\t\tvar args;\n\t\tvar i;\n\t\tif ( !isIteratorLike( iter ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an an iterator. Value: `%s`.', iter ) );\n\t\t}\n\t\targs = [ iter ];\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\targs.push( pargs[ i ] );\n\t\t}\n\t\treturn iterFcn.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterThunk;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an iterator \"thunk\".\n*\n* @module @stdlib/iter/pipeline-thunk\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterSome = require( '@stdlib/iter/some' );\n* var iterThunk = require( '@stdlib/iter/pipeline-thunk' );\n*\n* var it = array2iterator( [ 0, 0, 1, 1, 1 ] );\n*\n* var thunk = iterThunk( iterSome, 3 );\n*\n* var bool = thunk( it );\n* // returns true\n*/\n\n// MODULES //\n\nvar iterThunk = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterThunk;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar noop = require( '@stdlib/utils/noop' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which skips the last value of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} [clbk] - callback to invoke with the skipped value\n* @param {*} [thisArg] - callback execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = iterPop( array2iterator( [ 1, 2 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterPop( iterator, clbk, thisArg ) {\n\tvar last;\n\tvar iter;\n\tvar FLG;\n\tvar cb;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tcb = clbk;\n\t} else {\n\t\tcb = noop;\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar out;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( i === 0 ) {\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tlast = v.value;\n\t\t\treturn next();\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\tcb.call( thisArg, last );\n\t\t\treturn v;\n\t\t}\n\t\tout = {\n\t\t\t'value': last,\n\t\t\t'done': false\n\t\t};\n\t\tlast = v.value;\n\t\treturn out;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterPop( iterator[ iteratorSymbol ](), cb, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterPop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which skips the last value of a provided iterator.\n*\n* @module @stdlib/iter/pop\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterPop = require( '@stdlib/iter/pop' );\n*\n* var iter = iterPop( array2iterator( [ 1, 2 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterPop = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterPop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which appends additional values to the end of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {*} items - values to append\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = iterPush( array2iterator( [ 1, 2 ] ), 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterPush( iterator ) {\n\tvar items;\n\tvar iter;\n\tvar ret;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\titems = [];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\titems.push( arguments[ i ] );\n\t}\n\tFLG = 0;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG === 2 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( FLG === 1 ) {\n\t\t\ti += 1;\n\t\t\tif ( i >= items.length ) {\n\t\t\t\tFLG = 2;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'value': items[ i ],\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = 1;\n\t\t\ti += 1;\n\t\t\tif ( i >= items.length ) {\n\t\t\t\tFLG = 2;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tret = v;\n\t\t\treturn {\n\t\t\t\t'value': items[ i ],\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = 2;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [ iterator[ iteratorSymbol ]() ];\n\t\tfor ( i = 0; i < items.length; i++ ) {\n\t\t\targs.push( items[ i ] );\n\t\t}\n\t\treturn iterPush.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterPush;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which appends additional values to the end of a provided iterator.\n*\n* @module @stdlib/iter/push\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterPush = require( '@stdlib/iter/push' );\n*\n* var iter = iterPush( array2iterator( [ 1, 2 ] ), 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterPush = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterPush;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which rejects a provided iterator's values according to a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function predicate( v ) {\n*     return ( v > 2 );\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterReject( src, predicate );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterReject( iterator, predicate, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tif ( !predicate.call( thisArg, v.value, i ) ) {\n\t\t\t\treturn {\n\t\t\t\t\t'value': v.value,\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterReject( iterator[ iteratorSymbol ](), predicate, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterReject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which rejects a provided iterator's values according to a predicate function.\n*\n* @module @stdlib/iter/reject\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterReject = require( '@stdlib/iter/reject' );\n*\n* function predicate( v ) {\n*     return ( v > 2 );\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterReject( src, predicate );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterReject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterReject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which replicates each iterated value a specified number of times.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - number of times to replicate\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var src = array2iterator( [ 1, 2, 3, 4 ] );\n* var iter = iterReplicate( src, 2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\nfunction iterReplicate( iterator, n ) {\n\tvar value;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\ti = n - 1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += 1;\n\t\tif ( i === n ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\ti = 0; // reset the counter\n\t\t\tvalue = v.value; // cache value\n\t\t}\n\t\treturn {\n\t\t\t'value': value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterReplicate( iterator[ iteratorSymbol ](), n );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterReplicate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which replicates each iterated value a specified number of times.\n*\n* @module @stdlib/iter/replicate\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterReplicate = require( '@stdlib/iter/replicate' );\n*\n* var src = array2iterator( [ 1, 2, 3, 4 ] );\n* var iter = iterReplicate( src, 2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterReplicate = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterReplicate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which replicates each iterated value according to a provided function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - function which specifies how many times to replicate an iterated value\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function fcn( v, i ) {\n*     return i + 1;\n* }\n*\n* var src = array2iterator( [ 1, 2, 3, 4 ] );\n* var iter = iterReplicateBy( src, fcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 3\n*/\nfunction iterReplicateBy( iterator, fcn, thisArg ) {\n\tvar value;\n\tvar iter;\n\tvar FLG;\n\tvar t;\n\tvar n;\n\tvar i;\n\tvar j;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tt = -1; // total iteration index\n\ti = -1; // replicate counter\n\tj = -1; // source iteration index\n\tn = 0;  // number of replicates\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @throws {TypeError} callback function must return an integer\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tt += 1;\n\t\t\ti += 1;\n\t\t\tif ( i >= n ) {\n\t\t\t\tv = iterator.next();\n\t\t\t\tif ( v.done ) {\n\t\t\t\t\tFLG = true;\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\tvalue = v.value; // cache value\n\t\t\t\tj += 1;\n\t\t\t\tn = fcn.call( thisArg, value, j, t );\n\t\t\t\tif ( !isInteger( n ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid return value. Callback function must return an integer. Value: `%s`.', n ) );\n\t\t\t\t}\n\t\t\t\ti = 0; // reset the counter\n\t\t\t\tif ( n > 0 ) {\n\t\t\t\t\t// Return the newly cached value...\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Return the cached value...\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterReplicateBy( iterator[ iteratorSymbol ](), fcn, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterReplicateBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which replicates each iterated value according to a provided function.\n*\n* @module @stdlib/iter/replicate-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterReplicateBy = require( '@stdlib/iter/replicate-by' );\n*\n* function fcn( v, i ) {\n*     return i + 1;\n* }\n*\n* var src = array2iterator( [ 1, 2, 3, 4 ] );\n* var iter = iterReplicateBy( src, fcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterReplicateBy = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterReplicateBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\nvar noop = require( '@stdlib/utils/noop' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which skips the first value of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} [clbk] - callback to invoke with the skipped value\n* @param {*} [thisArg] - callback execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = iterShift( array2iterator( [ 1, 2 ] ) );\n*\n* var v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterShift( iterator, clbk, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar cb;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tcb = clbk;\n\t} else {\n\t\tcb = noop;\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( i === 0 ) {\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tcb.call( thisArg, v.value );\n\t\t\treturn next();\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterShift( iterator[ iteratorSymbol ](), cb, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterShift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which skips the first value of a provided iterator.\n*\n* @module @stdlib/iter/shift\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterShift = require( '@stdlib/iter/shift' );\n*\n* var iter = iterShift( array2iterator( [ 1, 2 ] ) );\n*\n* var v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterShift = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterShift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar format = require( '@stdlib/string/format' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\n\n\n// VARIABLES //\n\nvar BEGIN = 0;\nvar END = 1e308;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns a subsequence of iterated values from a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {NonNegativeInteger} [begin=0] - start iteration index (inclusive)\n* @param {NonNegativeInteger} [end=1e308] - end iteration index (non-inclusive)\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a nonnegative integer\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n*\n* var iter = iterSlice( randu(), 10, 20 );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterSlice( iterator, begin, end ) {\n\tvar iter;\n\tvar FLG;\n\tvar N;\n\tvar M;\n\tvar n;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tN = begin;\n\t\tif ( arguments.length > 2 ) {\n\t\t\tif ( !isNonNegativeInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tM = end;\n\t\t} else {\n\t\t\tM = END;\n\t\t}\n\t} else {\n\t\tN = BEGIN;\n\t\tM = END;\n\t}\n\tn = M - N;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', finish );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += 1;\n\t\tif ( n > 0 && i < N ) {\n\t\t\t// Lazily consume the first `N` values from the provided iterator...\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tv = iterator.next();\n\t\t\t}\n\t\t}\n\t\tif ( v && v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tn -= 1;\n\t\tif ( n < 0 ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t}\n\t\treturn v;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction finish( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterSlice( iterator[ iteratorSymbol ](), N, M );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterSlice;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns a subsequence of iterated values from a provided iterator.\n*\n* @module @stdlib/iter/slice\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterSlice = require( '@stdlib/iter/slice' );\n*\n* var iter = iterSlice( randu(), 10, 20 );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterSlice = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterSlice;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether at least `n` iterated values are truthy.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - minimum number of truthy elements\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {boolean} boolean indicating whether at least `n` iterated values are truthy\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 0, 0, 1, 1, 1 ] );\n*\n* var bool = iterSome( it, 3 );\n* // returns true\n*/\nfunction iterSome( iterator, n ) {\n\tvar count;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tcount = 0;\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( v.value ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterSome;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least `n` iterated values are truthy.\n*\n* @module @stdlib/iter/some\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterSome = require( '@stdlib/iter/some' );\n*\n* var it = array2iterator( [ 0, 0, 1, 1, 1 ] );\n*\n* var bool = iterSome( it, 3 );\n* // returns true\n*/\n\n// MODULES //\n\nvar iterSome = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterSome;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether at least `n` iterated values pass a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - number of successful values\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a function\n* @returns {boolean} boolean indicating whether at least `n` iterated values pass a test implemented by a predicate function\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function predicate( v ) {\n*     return ( v > 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 0, 0, 1 ] );\n*\n* var bool = iterSomeBy( it, 3, predicate );\n* // returns true\n*/\nfunction iterSomeBy( iterator, n, predicate, thisArg ) {\n\tvar count;\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tcount = 0;\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( predicate.call( thisArg, v.value, i ) ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterSomeBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least `n` iterated values pass a test implemented by a predicate function.\n*\n* @module @stdlib/iter/some-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterSomeBy = require( '@stdlib/iter/some-by' );\n*\n* function predicate( v ) {\n*     return ( v > 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 0, 0, 1 ] );\n*\n* var bool = iterSomeBy( it, 3, predicate );\n* // returns true\n*/\n\n// MODULES //\n\nvar iterSomeBy = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterSomeBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar DEFAULT_LENGTH = 1e308;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns a sequence of numbers according to a specified increment.\n*\n* @param {number} start - starting value (inclusive)\n* @param {number} increment - increment\n* @param {number} [N=1e308] - number of values\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a nonnegative integer\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterStep( 0, 2, 10 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* // ...\n*/\nfunction iterStep( start, increment, N ) {\n\tvar iter;\n\tvar FLG;\n\tvar n;\n\tvar i;\n\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( !isNumber( increment ) || isnan( increment ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', increment ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isNonNegativeInteger( N ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t\t}\n\t\tn = N;\n\t} else {\n\t\tn = DEFAULT_LENGTH;\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': start + (i*increment),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterStep( start, increment, n );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterStep;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns a sequence of numbers according to a specified increment.\n*\n* @module @stdlib/iter/step\n*\n* @example\n* var iterStep = require( '@stdlib/iter/step' );\n*\n* var iter = iterStep( 0, 2, 10 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar DEFAULT_OFFSET = 0;\nvar DEFAULT_EAGER = false;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which steps by a specified amount.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} stride - stride\n* @param {NonNegativeInteger} [offset=0] - offset\n* @param {boolean} [eager=false] - boolean indicating whether to eagerly advance the input iterator when provided a non-zero offset\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a nonnegative integer\n* @throws {TypeError} fourth argument must be a boolean\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var arr = array2iterator( [ 0, 1, 2, 3, 4, 5, 6, 7 ] );\n*\n* var iter = iterStrided( arr, 2, 1 );\n*\n* var r = iter.next().value;\n* // returns 1\n*\n* r = iter.next().value;\n* // returns 3\n*\n* r = iter.next().value;\n* // returns 5\n*\n* // ...\n*/\nfunction iterStrided( iterator, stride, offset, eager ) {\n\tvar iter;\n\tvar bool;\n\tvar FLG;\n\tvar idx;\n\tvar ret;\n\tvar o;\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( stride ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', stride ) );\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tbool = DEFAULT_EAGER;\n\t} else if ( arguments.length > 3 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tif ( !isBoolean( eager ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a boolean. Value: `%s`.', eager ) );\n\t\t}\n\t\tbool = eager;\n\t} else {\n\t\tidx = DEFAULT_OFFSET;\n\t\tbool = DEFAULT_EAGER;\n\t}\n\tif ( bool ) {\n\t\tfor ( i = 0; i < idx; i++ ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\tret = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// NOTE: if we've successfully advanced the input iterator, `i` is currently equal to `idx` (i.e., the offset)\n\t\ti -= 1;\n\t} else {\n\t\ti = -1;\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\to = idx;\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\tif ( ret ) {\n\t\t\t\tv = ret;\n\t\t\t\tret = null;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += 1;\n\t\twhile ( i < idx ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\ti += 1;\n\t\t}\n\t\tidx += stride;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t}\n\t\treturn v;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterStrided( iterator[ iteratorSymbol ](), stride, o, bool );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterStrided;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which steps by a specified amount.\n*\n* @module @stdlib/iter/strided\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterStrided = require( '@stdlib/iter/strided' );\n*\n* var arr = array2iterator( [ 0, 1, 2, 3, 4, 5, 6, 7 ] );\n*\n* var iter = iterStrided( arr, 2, 1 );\n*\n* var r = iter.next().value;\n* // returns 1\n*\n* r = iter.next().value;\n* // returns 3\n*\n* r = iter.next().value;\n* // returns 5\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterStrided = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterStrided;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar DEFAULT_OFFSET = 0;\nvar DEFAULT_EAGER = false;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which steps according to a provided callback function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - stride function\n* @param {NonNegativeInteger} [offset=0] - offset\n* @param {boolean} [eager=false] - boolean indicating whether to eagerly advance the input iterator when provided a non-zero offset\n* @param {*} [thisArg] - stride function execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a nonnegative integer\n* @throws {TypeError} fourth argument must be a boolean\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var arr = array2iterator( [ 0, 1, 2, 3, 4, 5, 6, 7 ] );\n*\n* function stride( v, i ) {\n*     return (i % 10)+1;\n* }\n*\n* var iter = iterStridedBy( arr, stride );\n*\n* var r = iter.next().value;\n* // returns 0\n*\n* r = iter.next().value;\n* // returns 1\n*\n* r = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction iterStridedBy( iterator, fcn, offset, eager, thisArg ) {\n\tvar stride;\n\tvar iter;\n\tvar bool;\n\tvar FLG;\n\tvar idx;\n\tvar ctx;\n\tvar ret;\n\tvar o;\n\tvar v;\n\tvar i;\n\tvar s;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( isNonNegativeInteger( offset ) ) {\n\t\t\tidx = offset;\n\t\t} else {\n\t\t\tidx = DEFAULT_OFFSET;\n\t\t\tctx = offset;\n\t\t}\n\t\tbool = DEFAULT_EAGER;\n\t} else if ( arguments.length === 4 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tif ( isBoolean( eager ) ) {\n\t\t\tbool = eager;\n\t\t} else {\n\t\t\tbool = DEFAULT_EAGER;\n\t\t\tctx = eager;\n\t\t}\n\t} else if ( arguments.length > 4 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tif ( !isBoolean( eager ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a boolean. Value: `%s`.', eager ) );\n\t\t}\n\t\tbool = eager;\n\t\tctx = thisArg;\n\t} else {\n\t\tidx = DEFAULT_OFFSET;\n\t\tbool = DEFAULT_EAGER;\n\t}\n\tif ( bool ) {\n\t\tfor ( i = 0; i < idx; i++ ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\tret = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// NOTE: if we've successfully advanced the input iterator, `i` is currently equal to `idx` (i.e., the offset)\n\t\ti -= 1;\n\t} else {\n\t\ti = -1;\n\t}\n\ts = -1;\n\tstride = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\to = idx;\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @throws {TypeError} callback function must return a positive integer\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\tif ( ret ) {\n\t\t\t\tv = ret;\n\t\t\t\tret = null;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += 1;\n\t\twhile ( i < idx ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn {\n\t\t\t\t\t'done': true\n\t\t\t\t};\n\t\t\t}\n\t\t\ti += 1;\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\ts += 1;\n\t\tstride = fcn.call( ctx, v.value, i, s, stride );\n\t\tif ( !isPositiveInteger( stride ) ) {\n\t\t\tthrow new TypeError( format( 'invalid return value. Callback function must return a positive integer. Value: `%s`.', stride ) );\n\t\t}\n\t\tidx += stride;\n\t\treturn v;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterStridedBy( iterator[ iteratorSymbol ](), fcn, o, bool, ctx );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterStridedBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which steps according to a provided callback function.\n*\n* @module @stdlib/iter/strided-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterStridedBy = require( '@stdlib/iter/strided-by' );\n*\n* var arr = array2iterator( [ 0, 1, 2, 3, 4, 5, 6, 7 ] );\n*\n* function stride( v, i ) {\n*     return (i % 10)+1;\n* }\n*\n* var iter = iterStridedBy( arr, stride );\n*\n* var r = iter.next().value;\n* // returns 0\n*\n* r = iter.next().value;\n* // returns 1\n*\n* r = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterStridedBy = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterStridedBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets an array element using an accessor method.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx.set( value, idx );\n}\n\n\n// EXPORTS //\n\nmodule.exports = setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getIndexed = require( './getter.js' );\nvar getAccessor = require( './getter.accessor.js' );\nvar setIndexed = require( './setter.js' );\nvar setAccessor = require( './setter.accessor.js' );\n\n\n// MAIN //\n\n/**\n* Converts an array-like to an object likely to have the same \"shape\".\n*\n* ## Notes\n*\n* -   This function is intended as a potential performance optimization. In V8, for example, even if two objects share common properties, if those properties were added in different orders or if one object has additional properties not shared by the other object, then those objects will have different \"hidden\" classes. If a function is provided many objects having different \"shapes\", some JavaScript VMs (e.g., V8) will consider the function \"megamorphic\" and fail to perform various runtime optimizations. Accordingly, the intent of this function is to standardize the \"shape\" of the object holding array meta data to ensure that internal functions operating on arrays are provided consistent argument \"shapes\".\n*\n* -   The returned object has the following properties:\n*\n*     -   **data**: data buffer.\n*     -   **accessors**: `boolean` indicating whether the data buffer uses accessors for getting and setting elements.\n*     -   **getter**: accessor for retrieving a data buffer element.\n*     -   **setter**: accessor for setting a data buffer element.\n*\n* @param {Collection} x - array-like object\n* @returns {Object} object containing array meta data\n*\n* @example\n* var obj = arraylike2object( [ 1, 2, 3, 4 ] );\n* // returns {...}\n*/\nfunction arraylike2object( x ) {\n\tvar bool = Boolean( x.get && x.set ); // Note: intentional weak check, as we don't explicitly check for functions for (perhaps marginally) better performance.\n\treturn {\n\t\t'data': x,\n\t\t'accessors': bool,\n\t\t'getter': ( bool ) ? getAccessor : getIndexed,\n\t\t'setter': ( bool ) ? setAccessor : setIndexed\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = arraylike2object;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element\n*/\nfunction getter( x, idx ) {\n\treturn x[ idx ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array element using an accessor method.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element\n*/\nfunction getter( x, idx ) {\n\treturn x.get( idx );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets an array element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx[ idx ] = value;\n}\n\n\n// EXPORTS //\n\nmodule.exports = setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar arraylike2object = require( '@stdlib/array/base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Fills an array-like object view with values returned from an iterator.\n*\n* @param {Iterator} iterator - source iterator\n* @param {Collection} out - output array\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end=out.length] - ending index (non-inclusive)\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be an array-like object\n* @throws {TypeError} third argument must be an integer (starting index) or a callback function\n* @throws {TypeError} fourth argument must be an integer (ending index) or a callback function\n* @throws {TypeError} fifth argument must be a function\n* @returns {Collection} output array\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2arrayview( iter, new Float64Array( 20 ), 5 );\n* // returns <Float64Array>\n*/\nfunction iterator2arrayview( iterator, out ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar begin;\n\tvar end;\n\tvar fcn;\n\tvar set;\n\tvar i;\n\tvar v;\n\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isCollection( out ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', out ) );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs === 2 ) {\n\t\tbegin = 0;\n\t\tend = out.length;\n\t} else if ( nargs === 3 ) {\n\t\tif ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tfcn = arguments[ 2 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 2 ];\n\t\t}\n\t\tend = out.length;\n\t} else if ( nargs === 4 ) {\n\t\tif ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 2 ];\n\t\t\tthisArg = arguments[ 3 ];\n\t\t} else if ( isFunction( arguments[ 3 ] ) ) {\n\t\t\tbegin = arguments[ 2 ];\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 3 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 2 ];\n\t\t\tend = arguments[ 3 ];\n\t\t}\n\t} else if ( nargs === 5 ) {\n\t\tbegin = arguments[ 2 ];\n\t\tif ( isFunction( arguments[ 3 ] ) ) {\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 3 ];\n\t\t\tthisArg = arguments[ 4 ];\n\t\t} else {\n\t\t\tend = arguments[ 3 ];\n\t\t\tfcn = arguments[ 4 ];\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a callback function. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t}\n\t} else { // nargs > 5\n\t\tbegin = arguments[ 2 ];\n\t\tend = arguments[ 3 ];\n\t\tfcn = arguments[ 4 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a callback function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 5 ];\n\t}\n\tif ( !isInteger( begin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either an integer (starting index) or a callback function. Value: `%s`.', begin ) );\n\t}\n\tif ( !isInteger( end ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be either an integer (ending index) or a callback function. Value: `%s`.', end ) );\n\t}\n\tif ( end < 0 ) {\n\t\tend = out.length + end;\n\t\tif ( end < 0 ) {\n\t\t\tend = 0;\n\t\t}\n\t} else if ( end > out.length ) {\n\t\tend = out.length;\n\t}\n\tif ( begin < 0 ) {\n\t\tbegin = out.length + begin;\n\t\tif ( begin < 0 ) {\n\t\t\tbegin = 0;\n\t\t}\n\t}\n\tset = arraylike2object( out ).setter;\n\ti = begin - 1;\n\tif ( fcn ) {\n\t\twhile ( i < end-1 ) {\n\t\t\ti += 1;\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tset( out, i, fcn.call( thisArg, v.value, i, i-begin ) );\n\t\t}\n\t\treturn out;\n\t}\n\twhile ( i < end-1 ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tset( out, i, v.value );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterator2arrayview;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an array-like object to an object likely to have the same \"shape\".\n*\n* @module @stdlib/array/base/arraylike2object\n*\n* @example\n* var arraylike2object = require( '@stdlib/array/base/arraylike2object' );\n*\n* var obj = arraylike2object( [ 1, 2, 3, 4 ] );\n* // returns {...}\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Fill an array-like object view with values returned from an iterator.\n*\n* @module @stdlib/iter/to-array-view\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var Float64Array = require( '@stdlib/array/float64' );\n* var iterator2arrayview = require( '@stdlib/iter/to-array-view' );\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2arrayview( iter, new Float64Array( 20 ), 5 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar arraylike2object = require( '@stdlib/array/base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Fills an array-like object view from right to left with values returned from an iterator.\n*\n* @param {Iterator} iterator - source iterator\n* @param {Collection} out - output array\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end=out.length] - ending index (non-inclusive)\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be an array-like object\n* @throws {TypeError} third argument must be an integer (starting index) or a callback function\n* @throws {TypeError} fourth argument must be an integer (ending index) or a callback function\n* @throws {TypeError} fifth argument must be a function\n* @returns {Collection} output array\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2arrayviewRight( iter, new Float64Array( 20 ), 5 );\n* // returns <Float64Array>\n*/\nfunction iterator2arrayviewRight( iterator, out ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar begin;\n\tvar end;\n\tvar fcn;\n\tvar set;\n\tvar i;\n\tvar v;\n\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isCollection( out ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', out ) );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs === 2 ) {\n\t\tbegin = 0;\n\t\tend = out.length;\n\t} else if ( nargs === 3 ) {\n\t\tif ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tfcn = arguments[ 2 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 2 ];\n\t\t}\n\t\tend = out.length;\n\t} else if ( nargs === 4 ) {\n\t\tif ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 2 ];\n\t\t\tthisArg = arguments[ 3 ];\n\t\t} else if ( isFunction( arguments[ 3 ] ) ) {\n\t\t\tbegin = arguments[ 2 ];\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 3 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 2 ];\n\t\t\tend = arguments[ 3 ];\n\t\t}\n\t} else if ( nargs === 5 ) {\n\t\tbegin = arguments[ 2 ];\n\t\tif ( isFunction( arguments[ 3 ] ) ) {\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 3 ];\n\t\t\tthisArg = arguments[ 4 ];\n\t\t} else {\n\t\t\tend = arguments[ 3 ];\n\t\t\tfcn = arguments[ 4 ];\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a callback function. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t}\n\t} else { // nargs > 5\n\t\tbegin = arguments[ 2 ];\n\t\tend = arguments[ 3 ];\n\t\tfcn = arguments[ 4 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a callback function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 5 ];\n\t}\n\tif ( !isInteger( begin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either an integer (starting index) or a callback function. Value: `%s`.', begin ) );\n\t}\n\tif ( !isInteger( end ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be either an integer (ending index) or a callback function. Value: `%s`.', end ) );\n\t}\n\tif ( end < 0 ) {\n\t\tend = out.length + end;\n\t\tif ( end < 0 ) {\n\t\t\tend = 0;\n\t\t}\n\t} else if ( end > out.length ) {\n\t\tend = out.length;\n\t}\n\tif ( begin < 0 ) {\n\t\tbegin = out.length + begin;\n\t\tif ( begin < 0 ) {\n\t\t\tbegin = 0;\n\t\t}\n\t}\n\tset = arraylike2object( out ).setter;\n\ti = end;\n\tif ( fcn ) {\n\t\twhile ( i > begin ) {\n\t\t\ti -= 1;\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tset( out, i, fcn.call( thisArg, v.value, i, end-i-1 ) );\n\t\t}\n\t\treturn out;\n\t}\n\twhile ( i > begin ) {\n\t\ti -= 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tset( out, i, v.value );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterator2arrayviewRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Fill an array-like object view from right to left with values returned from an iterator.\n*\n* @module @stdlib/iter/to-array-view-right\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var Float64Array = require( '@stdlib/array/float64' );\n* var iterator2arrayviewRight = require( '@stdlib/iter/to-array-view-right' );\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2arrayviewRight( iter, new Float64Array( 20 ), 5 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an array contains a provided value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {*} v - test value\n* @returns {boolean} boolean indicating whether an array contains a provided value\n*\n* @example\n* var bool = contains( [ 1, 2, 3 ], 1 );\n* // returns true\n*\n* bool = contains( [ 1, 2, 3 ], 4 );\n* // returns false\n*/\nfunction contains( arr, v ) {\n\tvar len;\n\tvar i;\n\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns the union of two or more iterators.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterUnion( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 5\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUnion() {\n\tvar iterators;\n\tvar iterator;\n\tvar niter;\n\tvar iter;\n\tvar hash;\n\tvar FLG;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient input arguments. Must provide two or more iterators.' );\n\t}\n\titerators = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\tif ( !isIteratorLike( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\titerators.push( arguments[ i ] );\n\t}\n\thash = [];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\titerator = iterators[ 0 ];\n\tFLG = false;\n\ti = 0;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\ti += 1;\n\t\t\t\tif ( i === niter ) {\n\t\t\t\t\tFLG = true;\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\titerator = iterators[ i ];\n\t\t\t} else {\n\t\t\t\tv = v.value;\n\t\t\t\tif ( contains( hash, v ) === false ) {\n\t\t\t\t\thash.push( v );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\treturn iterUnion.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterUnion;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns the union of two or more iterators.\n*\n* @module @stdlib/iter/union\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterUnion = require( '@stdlib/iter/union' );\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterUnion( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 5\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterUnion = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterUnion;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an array contains a provided value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {*} v - test value\n* @returns {boolean} boolean indicating whether an array contains a provided value\n*\n* @example\n* var bool = contains( [ 1, 2, 3 ], 1 );\n* // returns true\n*\n* bool = contains( [ 1, 2, 3 ], 4 );\n* // returns false\n*/\nfunction contains( arr, v ) {\n\tvar len;\n\tvar i;\n\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns unique values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = iterUnique( array2iterator( [ 1, 2, 1, 2, 4 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUnique( iterator ) {\n\tvar iter;\n\tvar hash;\n\tvar FLG;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\thash = [];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tv = v.value;\n\t\t\tif ( contains( hash, v ) === false ) {\n\t\t\t\thash.push( v );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterUnique( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterUnique;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns unique values.\n*\n* @module @stdlib/iter/unique\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterUnique = require( '@stdlib/iter/unique' );\n*\n* var iter = iterUnique( array2iterator( [ 1, 2, 1, 2, 4 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterUnique = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterUnique;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is unique according to a predicate function when compared to a list of values.\n*\n* @private\n* @param {Array} arr - input array\n* @param {*} v - test value\n* @param {Function} predicate - predicate function\n* @param {*} thisArg - evaluation context\n* @returns {boolean} boolean indicating whether a value is \"unique\"\n*\n* @example\n* function predicate( a, b ) {\n*     return ( a !== b );\n* }\n*\n* var bool = isUnique( [ 1, 2, 3 ], 1, predicate, null );\n* // returns false\n*\n* bool = isUnique( [ 1, 2, 3 ], 4, predicate, null );\n* // returns true\n*/\nfunction isUnique( arr, v, predicate, thisArg ) {\n\tvar len;\n\tvar i;\n\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( !predicate.call( thisArg, arr[ i ], v ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns unique values according to a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - evaluation context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function predicate( a, b ) {\n*     return ( a !== b );\n* }\n*\n* var iter = iterUniqueBy( array2iterator( [ 1, 2, 1, 2, 4 ] ), predicate );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUniqueBy( iterator, predicate, thisArg ) {\n\tvar iter;\n\tvar hash;\n\tvar FLG;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\thash = [];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tv = v.value;\n\t\t\tif ( isUnique( hash, v, predicate, thisArg ) ) {\n\t\t\t\thash.push( v );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterUniqueBy( iterator[ iteratorSymbol ](), predicate, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterUniqueBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns unique values according to a predicate function.\n*\n* @module @stdlib/iter/unique-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterUniqueBy = require( '@stdlib/iter/unique-by' );\n*\n* function predicate( a, b ) {\n*     return ( a !== b );\n* }\n*\n* var iter = iterUniqueBy( array2iterator( [ 1, 2, 1, 2, 4 ] ), predicate );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterUniqueBy = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterUniqueBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an array contains a provided value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {*} v - test value\n* @returns {boolean} boolean indicating whether an array contains a provided value\n*\n* @example\n* var bool = contains( [ 1, 2, 3 ], 1 );\n* // returns true\n*\n* bool = contains( [ 1, 2, 3 ], 4 );\n* // returns false\n*/\nfunction contains( arr, v ) {\n\tvar len;\n\tvar i;\n\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns unique values according to a hash function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} hashFcn - hash function\n* @param {*} [thisArg] - evaluation context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function hashFcn( v ) {\n*     return v.toString();\n* }\n*\n* var iter = iterUniqueByHash( array2iterator( [ 1, 2, 1, 2, 4 ] ), hashFcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUniqueByHash( iterator, hashFcn, thisArg ) {\n\tvar iter;\n\tvar hash;\n\tvar FLG;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( hashFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', hashFcn ) );\n\t}\n\thash = [];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar hv;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\thv = hashFcn.call( thisArg, v.value );\n\t\t\tif ( contains( hash, hv ) === false ) {\n\t\t\t\thash.push( hv );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterUniqueByHash( iterator[ iteratorSymbol ](), hashFcn, thisArg ); // eslint-disable-line max-len\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterUniqueByHash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns unique values according to a hash function.\n*\n* @module @stdlib/iter/unique-by-hash\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterUniqueByHash = require( '@stdlib/iter/unique-by-hash' );\n*\n* function hashFcn( v ) {\n*     return v.toString();\n* }\n*\n* var iter = iterUniqueByHash( array2iterator( [ 1, 2, 1, 2, 4 ] ), hashFcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterUniqueByHash = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterUniqueByHash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns numbers incremented by `1`.\n*\n* @param {number} start - starting value (inclusive)\n* @param {number} [stop=+infinity] - stopping value\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterUnitspace( 0, 99 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\nfunction iterUnitspace( start, stop ) {\n\tvar STOP;\n\tvar iter;\n\tvar curr;\n\tvar FLG;\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( stop ) || isnan( stop ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', stop ) );\n\t\t}\n\t\tSTOP = stop;\n\t} else {\n\t\tSTOP = PINF;\n\t}\n\tcurr = start - 1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tcurr += 1;\n\t\tif ( curr > STOP ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': curr,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterUnitspace( start, STOP );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterUnitspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns numbers incremented by `1`.\n*\n* @module @stdlib/iter/unitspace\n*\n* @example\n* var iterUnitspace = require( '@stdlib/iter/unitspace' );\n*\n* var iter = iterUnitspace( 0, 99 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which prepends values to the beginning of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {*} items - values to prepend\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = iterUnshift( array2iterator( [ 1, 2 ] ), 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUnshift( iterator ) {\n\tvar items;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\titems = [];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\titems.push( arguments[ i ] );\n\t}\n\tFLG = 0;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG === 2 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( FLG === 1 ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = 2;\n\t\t\t}\n\t\t\treturn v;\n\t\t}\n\t\ti += 1;\n\t\tif ( i >= items.length ) {\n\t\t\tFLG = 1;\n\t\t\treturn next();\n\t\t}\n\t\treturn {\n\t\t\t'value': items[ i ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = 2;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [ iterator[ iteratorSymbol ]() ];\n\t\tfor ( i = 0; i < items.length; i++ ) {\n\t\t\targs.push( items[ i ] );\n\t\t}\n\t\treturn iterUnshift.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterUnshift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which prepends values to the beginning of a provided iterator.\n*\n* @module @stdlib/iter/unshift\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterUnshift = require( '@stdlib/iter/unshift' );\n*\n* var iter = iterUnshift( array2iterator( [ 1, 2 ] ), 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterUnshift = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterUnshift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name iterAdvance\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/advance}\n*/\nsetReadOnly( ns, 'iterAdvance', require( './../advance' ) );\n\n/**\n* @name iterAny\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/any}\n*/\nsetReadOnly( ns, 'iterAny', require( './../any' ) );\n\n/**\n* @name iterAnyBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/any-by}\n*/\nsetReadOnly( ns, 'iterAnyBy', require( './../any-by' ) );\n\n/**\n* @name iterConcat\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/concat}\n*/\nsetReadOnly( ns, 'iterConcat', require( './../concat' ) );\n\n/**\n* @name iterConstant\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/constant}\n*/\nsetReadOnly( ns, 'iterConstant', require( './../constant' ) );\n\n/**\n* @name iterCounter\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/counter}\n*/\nsetReadOnly( ns, 'iterCounter', require( './../counter' ) );\n\n/**\n* @name iterDatespace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/datespace}\n*/\nsetReadOnly( ns, 'iterDatespace', require( './../datespace' ) );\n\n/**\n* @name iterDedupe\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/dedupe}\n*/\nsetReadOnly( ns, 'iterDedupe', require( './../dedupe' ) );\n\n/**\n* @name iterDedupeBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/dedupe-by}\n*/\nsetReadOnly( ns, 'iterDedupeBy', require( './../dedupe-by' ) );\n\n/**\n* @name iterEmpty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/empty}\n*/\nsetReadOnly( ns, 'iterEmpty', require( './../empty' ) );\n\n/**\n* @name iterEvery\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/every}\n*/\nsetReadOnly( ns, 'iterEvery', require( './../every' ) );\n\n/**\n* @name iterEveryBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/every-by}\n*/\nsetReadOnly( ns, 'iterEveryBy', require( './../every-by' ) );\n\n/**\n* @name iterFill\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/fill}\n*/\nsetReadOnly( ns, 'iterFill', require( './../fill' ) );\n\n/**\n* @name iterFilter\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/filter}\n*/\nsetReadOnly( ns, 'iterFilter', require( './../filter' ) );\n\n/**\n* @name iterFilterMap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/filter-map}\n*/\nsetReadOnly( ns, 'iterFilterMap', require( './../filter-map' ) );\n\n/**\n* @name iterFirst\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/first}\n*/\nsetReadOnly( ns, 'iterFirst', require( './../first' ) );\n\n/**\n* @name iterFlow\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/flow}\n*/\nsetReadOnly( ns, 'iterFlow', require( './../flow' ) );\n\n/**\n* @name iterForEach\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/for-each}\n*/\nsetReadOnly( ns, 'iterForEach', require( './../for-each' ) );\n\n/**\n* @name iterHead\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/head}\n*/\nsetReadOnly( ns, 'iterHead', require( './../head' ) );\n\n/**\n* @name iterIncrspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/incrspace}\n*/\nsetReadOnly( ns, 'iterIncrspace', require( './../incrspace' ) );\n\n/**\n* @name iterIntersection\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/intersection}\n*/\nsetReadOnly( ns, 'iterIntersection', require( './../intersection' ) );\n\n/**\n* @name iterIntersectionByHash\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/intersection-by-hash}\n*/\nsetReadOnly( ns, 'iterIntersectionByHash', require( './../intersection-by-hash' ) );\n\n/**\n* @name iterLast\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/last}\n*/\nsetReadOnly( ns, 'iterLast', require( './../last' ) );\n\n/**\n* @name iterLength\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/length}\n*/\nsetReadOnly( ns, 'iterLength', require( './../length' ) );\n\n/**\n* @name iterLinspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/linspace}\n*/\nsetReadOnly( ns, 'iterLinspace', require( './../linspace' ) );\n\n/**\n* @name iterLogspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/logspace}\n*/\nsetReadOnly( ns, 'iterLogspace', require( './../logspace' ) );\n\n/**\n* @name iterMap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/map}\n*/\nsetReadOnly( ns, 'iterMap', require( './../map' ) );\n\n/**\n* @name iterMapN\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/mapn}\n*/\nsetReadOnly( ns, 'iterMapN', require( './../mapn' ) );\n\n/**\n* @name iterNone\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/none}\n*/\nsetReadOnly( ns, 'iterNone', require( './../none' ) );\n\n/**\n* @name iterNoneBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/none-by}\n*/\nsetReadOnly( ns, 'iterNoneBy', require( './../none-by' ) );\n\n/**\n* @name iterNth\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/nth}\n*/\nsetReadOnly( ns, 'iterNth', require( './../nth' ) );\n\n/**\n* @name iterPipeline\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/pipeline}\n*/\nsetReadOnly( ns, 'iterPipeline', require( './../pipeline' ) );\n\n/**\n* @name iterThunk\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/pipeline-thunk}\n*/\nsetReadOnly( ns, 'iterThunk', require( './../pipeline-thunk' ) );\n\n/**\n* @name iterPop\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/pop}\n*/\nsetReadOnly( ns, 'iterPop', require( './../pop' ) );\n\n/**\n* @name iterPush\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/push}\n*/\nsetReadOnly( ns, 'iterPush', require( './../push' ) );\n\n/**\n* @name iterReject\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/reject}\n*/\nsetReadOnly( ns, 'iterReject', require( './../reject' ) );\n\n/**\n* @name iterReplicate\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/replicate}\n*/\nsetReadOnly( ns, 'iterReplicate', require( './../replicate' ) );\n\n/**\n* @name iterReplicateBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/replicate-by}\n*/\nsetReadOnly( ns, 'iterReplicateBy', require( './../replicate-by' ) );\n\n/**\n* @name iterShift\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/shift}\n*/\nsetReadOnly( ns, 'iterShift', require( './../shift' ) );\n\n/**\n* @name iterSlice\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/slice}\n*/\nsetReadOnly( ns, 'iterSlice', require( './../slice' ) );\n\n/**\n* @name iterSome\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/some}\n*/\nsetReadOnly( ns, 'iterSome', require( './../some' ) );\n\n/**\n* @name iterSomeBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/some-by}\n*/\nsetReadOnly( ns, 'iterSomeBy', require( './../some-by' ) );\n\n/**\n* @name iterStep\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/step}\n*/\nsetReadOnly( ns, 'iterStep', require( './../step' ) );\n\n/**\n* @name iterStrided\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/strided}\n*/\nsetReadOnly( ns, 'iterStrided', require( './../strided' ) );\n\n/**\n* @name iterStridedBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/strided-by}\n*/\nsetReadOnly( ns, 'iterStridedBy', require( './../strided-by' ) );\n\n/**\n* @name iterator2arrayview\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/to-array-view}\n*/\nsetReadOnly( ns, 'iterator2arrayview', require( './../to-array-view' ) );\n\n/**\n* @name iterator2arrayviewRight\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/to-array-view-right}\n*/\nsetReadOnly( ns, 'iterator2arrayviewRight', require( './../to-array-view-right' ) );\n\n/**\n* @name iterUnion\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/union}\n*/\nsetReadOnly( ns, 'iterUnion', require( './../union' ) );\n\n/**\n* @name iterUnique\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unique}\n*/\nsetReadOnly( ns, 'iterUnique', require( './../unique' ) );\n\n/**\n* @name iterUniqueBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unique-by}\n*/\nsetReadOnly( ns, 'iterUniqueBy', require( './../unique-by' ) );\n\n/**\n* @name iterUniqueByHash\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unique-by-hash}\n*/\nsetReadOnly( ns, 'iterUniqueByHash', require( './../unique-by-hash' ) );\n\n/**\n* @name iterUnitspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unitspace}\n*/\nsetReadOnly( ns, 'iterUnitspace', require( './../unitspace' ) );\n\n/**\n* @name iterUnshift\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unshift}\n*/\nsetReadOnly( ns, 'iterUnshift', require( './../unshift' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n"],"names":["defineProperty","Object","has_define_property_support","err","builtin","is_number","value","zeros","n","i","out","zero_pad","str","width","right","negative","pad","length","startsWithMinus","substr","isNumber","require$$0","zeroPad","require$$1","lowercase","String","prototype","toLowerCase","uppercase","toUpperCase","format_integer","token","base","specifier","arg","parseInt","isFinite","Error","toString","precision","padRight","sign","alternate","call","charAt","abs","Math","replace","RE_EXP_POS_DIGITS","RE_EXP_NEG_DIGITS","RE_ONLY_DIGITS","RE_DIGITS_BEFORE_EXP","RE_TRAILING_PERIOD_ZERO","RE_PERIOD_ZERO_EXP","RE_ZERO_BEFORE_EXP","format_double","digits","f","parseFloat","toExponential","toFixed","toPrecision","RE","parse","match","mapping","flags","hasPeriod","spaces","formatInteger","formatDouble","tokenize","content","tokens","prev","exec","slice","lastIndex","push","spacePad","require$$4","isString","fromCharCode","isnan","isNaN","main","format","flag","num","pos","j","TypeError","padZeros","indexOf","arguments","maxWidth","substring","lib","objectProtoype","toStr","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","polyfill","obj","prop","descriptor","hasValue","hasGet","hasSet","__proto__","get","set","require$$2","configurable","enumerable","writable","re","primitive","FLG","Symbol","hasSymbols","toStringTag","tostring","native_class","v","has","hasOwnProperty","property","toStrTag","hasOwnProp","isOwn","tag","Boolean","nativeClass","test","object","isPrimitive","isObject","setReadOnly","isBoolean","require$$3","self","window","getThis","Function","Self","Win","Global","codegen","root","nodeList","document","childNodes","typedarray","Int8Array","check_1","reFunctionName","Array","isArray","isObjectLike","predicate","len","arrayfun","REGEXP","isBuffer","_isBuffer","constructor","name","ctor","ctorName","typeOf","type","isFunction","t","next","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","floor","x","PINF","NINF","isInt","integer","valueOf","isInteger","isNonNegativeInteger","isIteratorLike","iterator","N","done","thisArg","iteratorSymbol","require$$5","iterConcat","iterators","niter","iter","end","factory","args","apply","getProto","getPrototypeOf","proto","objectPrototype","isPrototypeOf","key","ownProps","isPlainObject","iterConstant","options","opts","iterCounter","isNan","isCollection","val","searchValue","position","ceil","round","getDay","Date","isDateObject","contains","require$$6","convert","getTime","ROUNDING_MODES","ROUNDING_FCNS","require$$7","require$$8","require$$9","iterDatespace","start","stop","step","rfcn","t1","t2","d","isPositiveInteger","iterDedupe","limit","count","NaN","iterDedupeBy","clbk","sprev","dprev","acc","fcn","iterEmpty","END","iterFill","begin","M","finish","iterFilter","iterFilterMap","keys","has_arguments_bug","has_builtin","isArguments","bool","detect_1","detect","native","propertyIsEnumerable","isEnum","hasStringEnumBug","isEnumerableProperty","builtin_wrapper","has_enumerable_prototype_bug","has_non_enumerable_properties_bug","is_constructor_prototype","w","arr","searchElement","fromIndex","isConstructorPrototype","EXCLUDED_KEYS","win","k","check","hasAutomationEqualityBug","HAS_WINDOW","HAS_ENUM_PROTO_BUG","HAS_NON_ENUM_PROPS_BUG","error","NON_ENUMERABLE","wrapper","skipConstructor","skipPrototype","isFcn","p","setNonEnumerableReadOnly","setNonEnumerable","objectKeys","methods","FluentIterator","this","createMethod","iterFcn","_source","_done","iterForEach","iterHead","iterIncrspace","increment","incr","getter","setReadOnlyAccessor","Node","_next","LinkedList","_length","_first","_last","node","_prev","values","toArray","shift","pop","data","getNode","hash","first","clean","threshold","remove","intersection","it","iterIntersection","hashFcn","hv","iterIntersectionByHash","last","iterLinspace","delta","isPositiveNumber","isEven","sqrt","hasUint32Array","Uint32Array","isUint32Array","GlobalUint32Array","UINT32_MAX","hasFloat64Array","Float64Array","isFloat64Array","GlobalFloat64Array","hasUint8Array","Uint8Array","isUint8Array","GlobalUint8Array","UINT8_MAX","hasUint16Array","Uint16Array","isUint16Array","GlobalUint16Array","UINT16_MAX","uint16view","ctors","uint16","uint8","HIGH","LOW","buffer","indices","FLOAT64_VIEW","UINT32_VIEW","low","high","toWords","getHighWord","fromWords","WORDS","y","hx","hy","isOdd","copysign","x_is_zero","y_is_huge","HUGE","TINY","y_is_infinite","setLowWord","setHighWord","polyvalL","BP","DP_HI","DP_LO","polyvalW","isInfinite","normalize","floatExp","require$$11","require$$12","FRAC","frac","exp","m","uint32ToInt32","ldexp","polyvalP","pow2_1","hp","lp","tmp","u","z","require$$10","xIsZero","yIsHuge","yIsInfinite","require$$13","log2ax","ax","ahx","ss","s2","hs","ls","ht","bp","dp","hz","lz","r","logx","pow2","require$$16","LOG_WORKSPACE","pow_1","pow","ahy","sx","sy","y1","iterLogspace","b","iterMap","iterMapN","idx","isArrayLike","nFuncs","pipeline","pargs","nargs","thunk","noop","iterPop","cb","iterPush","items","ret","iterReject","iterReplicate","iterReplicateBy","iterShift","iterSlice","DEFAULT_LENGTH","iterStep","iterStrided","stride","offset","eager","o","iterStridedBy","ctx","s","getIndexed","getAccessor","setIndexed","setAccessor","accessors","setter","arraylike2object","iterUnion","iterUnique","isUnique","iterUniqueBy","iterUniqueByHash","iterUnitspace","STOP","curr","iterUnshift","ns","require$$14","require$$15","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","require$$38","require$$39","require$$40","require$$41","require$$42","require$$43","require$$44","require$$45","require$$46","require$$47","require$$48","require$$49","require$$50","require$$51","require$$52","require$$53"],"mappings":"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"}
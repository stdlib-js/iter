{"version":3,"file":"mod.js","sources":["../node_modules/@stdlib/utils/define-property/lib/define_property.js","../node_modules/@stdlib/utils/define-property/lib/builtin.js","../node_modules/@stdlib/string/base/format-interpolate/lib/is_number.js","../node_modules/@stdlib/string/base/format-interpolate/lib/zero_pad.js","../node_modules/@stdlib/string/base/format-interpolate/lib/format_integer.js","../node_modules/@stdlib/string/base/format-interpolate/lib/is_string.js","../node_modules/@stdlib/string/base/format-interpolate/lib/format_double.js","../node_modules/@stdlib/string/base/format-interpolate/lib/space_pad.js","../node_modules/@stdlib/string/base/format-interpolate/lib/main.js","../node_modules/@stdlib/string/base/format-tokenize/lib/main.js","../node_modules/@stdlib/string/format/lib/is_string.js","../node_modules/@stdlib/string/format/lib/main.js","../node_modules/@stdlib/utils/define-property/lib/polyfill.js","../node_modules/@stdlib/utils/define-property/lib/index.js","../node_modules/@stdlib/utils/define-property/lib/has_define_property_support.js","../node_modules/@stdlib/utils/define-read-only-property/lib/main.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/re.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/main.js","../node_modules/@stdlib/assert/is-boolean/lib/primitive.js","../node_modules/@stdlib/assert/has-tostringtag-support/lib/main.js","../node_modules/@stdlib/assert/has-symbol-support/lib/main.js","../node_modules/@stdlib/utils/native-class/lib/tostring.js","../node_modules/@stdlib/assert/has-own-property/lib/main.js","../node_modules/@stdlib/symbol/ctor/lib/main.js","../node_modules/@stdlib/utils/native-class/lib/tostringtag.js","../node_modules/@stdlib/utils/native-class/lib/index.js","../node_modules/@stdlib/utils/native-class/lib/polyfill.js","../node_modules/@stdlib/utils/native-class/lib/main.js","../node_modules/@stdlib/boolean/ctor/lib/main.js","../node_modules/@stdlib/assert/is-boolean/lib/tostring.js","../node_modules/@stdlib/assert/is-boolean/lib/object.js","../node_modules/@stdlib/assert/is-boolean/lib/try2serialize.js","../node_modules/@stdlib/assert/is-boolean/lib/main.js","../node_modules/@stdlib/utils/global/lib/codegen.js","../node_modules/@stdlib/assert/is-boolean/lib/index.js","../node_modules/@stdlib/utils/global/lib/self.js","../node_modules/@stdlib/utils/global/lib/window.js","../node_modules/@stdlib/utils/global/lib/global.js","../node_modules/@stdlib/utils/global/lib/global_this.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/nodelist.js","../node_modules/@stdlib/utils/global/lib/main.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/typedarray.js","../node_modules/@stdlib/regexp/function-name/lib/main.js","../node_modules/@stdlib/regexp/function-name/lib/regexp.js","../node_modules/@stdlib/regexp/function-name/lib/index.js","../node_modules/@stdlib/assert/is-array/lib/main.js","../node_modules/@stdlib/assert/is-object-like/lib/main.js","../node_modules/@stdlib/assert/is-buffer/lib/main.js","../node_modules/@stdlib/utils/constructor-name/lib/main.js","../node_modules/@stdlib/assert/is-object-like/lib/index.js","../node_modules/@stdlib/assert/tools/array-function/lib/main.js","../node_modules/@stdlib/utils/type-of/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/check.js","../node_modules/@stdlib/utils/type-of/lib/polyfill.js","../node_modules/@stdlib/utils/type-of/lib/main.js","../node_modules/@stdlib/assert/is-function/lib/main.js","../node_modules/@stdlib/assert/is-iterator-like/lib/main.js","../node_modules/@stdlib/assert/is-number/lib/primitive.js","../node_modules/@stdlib/number/ctor/lib/main.js","../node_modules/@stdlib/assert/is-number/lib/tostring.js","../node_modules/@stdlib/assert/is-number/lib/object.js","../node_modules/@stdlib/assert/is-number/lib/try2serialize.js","../node_modules/@stdlib/assert/is-number/lib/main.js","../node_modules/@stdlib/assert/is-number/lib/index.js","../node_modules/@stdlib/constants/float64/pinf/lib/index.js","../node_modules/@stdlib/constants/float64/ninf/lib/index.js","../node_modules/@stdlib/math/base/special/floor/lib/main.js","../node_modules/@stdlib/math/base/assert/is-integer/lib/main.js","../node_modules/@stdlib/assert/is-integer/lib/integer.js","../node_modules/@stdlib/assert/is-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-integer/lib/object.js","../node_modules/@stdlib/assert/is-integer/lib/main.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/object.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/main.js","../advance/lib/main.js","../any/lib/main.js","../any-by/lib/main.js","../node_modules/@stdlib/assert/has-iterator-symbol-support/lib/main.js","../node_modules/@stdlib/assert/is-integer/lib/index.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/index.js","../node_modules/@stdlib/symbol/iterator/lib/main.js","../concat/lib/main.js","../node_modules/@stdlib/assert/is-object/lib/main.js","../node_modules/@stdlib/object/ctor/lib/main.js","../node_modules/@stdlib/utils/get-prototype-of/lib/detect.js","../node_modules/@stdlib/utils/get-prototype-of/lib/native.js","../node_modules/@stdlib/utils/get-prototype-of/lib/polyfill.js","../node_modules/@stdlib/utils/get-prototype-of/lib/proto.js","../node_modules/@stdlib/assert/is-plain-object/lib/main.js","../node_modules/@stdlib/utils/get-prototype-of/lib/main.js","../constant/lib/main.js","../counter/lib/main.js","../node_modules/@stdlib/assert/is-collection/lib/main.js","../node_modules/@stdlib/constants/array/max-typed-array-length/lib/index.js","../node_modules/@stdlib/assert/is-string/lib/primitive.js","../node_modules/@stdlib/assert/is-string/lib/valueof.js","../node_modules/@stdlib/assert/is-string/lib/object.js","../node_modules/@stdlib/assert/is-string/lib/try2valueof.js","../node_modules/@stdlib/assert/is-string/lib/main.js","../node_modules/@stdlib/math/base/assert/is-nan/lib/main.js","../node_modules/@stdlib/assert/is-nan/lib/primitive.js","../node_modules/@stdlib/assert/is-nan/lib/object.js","../node_modules/@stdlib/assert/is-nan/lib/main.js","../node_modules/@stdlib/assert/contains/lib/main.js","../node_modules/@stdlib/assert/is-string/lib/index.js","../node_modules/@stdlib/assert/is-nan/lib/index.js","../node_modules/@stdlib/math/base/special/ceil/lib/main.js","../node_modules/@stdlib/math/base/special/round/lib/main.js","../node_modules/@stdlib/assert/is-date-object/lib/getday.js","../node_modules/@stdlib/assert/is-date-object/lib/main.js","../node_modules/@stdlib/assert/is-date-object/lib/try2getday.js","../datespace/lib/convert.js","../datespace/lib/main.js","../node_modules/@stdlib/assert/is-positive-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-positive-integer/lib/object.js","../node_modules/@stdlib/assert/is-positive-integer/lib/main.js","../dedupe/lib/main.js","../dedupe-by/lib/main.js","../empty/lib/main.js","../every/lib/main.js","../every-by/lib/main.js","../node_modules/@stdlib/assert/is-positive-integer/lib/index.js","../fill/lib/main.js","../filter/lib/main.js","../filter-map/lib/main.js","../first/lib/main.js","../node_modules/@stdlib/utils/keys/lib/builtin.js","../node_modules/@stdlib/utils/keys/lib/has_builtin.js","../node_modules/@stdlib/assert/is-arguments/lib/main.js","../node_modules/@stdlib/assert/is-arguments/lib/detect.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/native.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/has_string_enumerability_bug.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/main.js","../node_modules/@stdlib/assert/is-arguments/lib/index.js","../node_modules/@stdlib/assert/is-arguments/lib/polyfill.js","../node_modules/@stdlib/constants/uint32/max/lib/index.js","../node_modules/@stdlib/utils/keys/lib/builtin_wrapper.js","../node_modules/@stdlib/utils/noop/lib/main.js","../node_modules/@stdlib/utils/keys/lib/has_enumerable_prototype_bug.js","../node_modules/@stdlib/utils/keys/lib/has_non_enumerable_properties_bug.js","../node_modules/@stdlib/utils/index-of/lib/main.js","../node_modules/@stdlib/utils/keys/lib/is_constructor_prototype.js","../node_modules/@stdlib/utils/keys/lib/window.js","../node_modules/@stdlib/utils/keys/lib/has_automation_equality_bug.js","../node_modules/@stdlib/utils/keys/lib/has_window.js","../node_modules/@stdlib/utils/keys/lib/main.js","../node_modules/@stdlib/utils/keys/lib/has_arguments_bug.js","../node_modules/@stdlib/utils/keys/lib/polyfill.js","../node_modules/@stdlib/utils/keys/lib/is_constructor_prototype_wrapper.js","../flow/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-property/lib/main.js","../for-each/lib/main.js","../head/lib/main.js","../incrspace/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-accessor/lib/main.js","../node_modules/@stdlib/utils/linked-list/lib/node.js","../node_modules/@stdlib/utils/linked-list/lib/main.js","../intersection/lib/main.js","../intersection-by-hash/lib/main.js","../last/lib/main.js","../length/lib/main.js","../linspace/lib/main.js","../node_modules/@stdlib/assert/is-positive-number/lib/primitive.js","../node_modules/@stdlib/assert/is-positive-number/lib/object.js","../node_modules/@stdlib/assert/is-positive-number/lib/main.js","../node_modules/@stdlib/math/base/assert/is-even/lib/main.js","../node_modules/@stdlib/math/base/assert/is-odd/lib/main.js","../node_modules/@stdlib/math/base/assert/is-infinite/lib/main.js","../node_modules/@stdlib/assert/is-positive-number/lib/index.js","../node_modules/@stdlib/math/base/special/sqrt/lib/main.js","../node_modules/@stdlib/math/base/special/abs/lib/main.js","../node_modules/@stdlib/assert/is-uint32array/lib/main.js","../node_modules/@stdlib/assert/has-uint32array-support/lib/uint32array.js","../node_modules/@stdlib/array/uint32/lib/main.js","../node_modules/@stdlib/array/uint32/lib/index.js","../node_modules/@stdlib/assert/has-uint32array-support/lib/main.js","../node_modules/@stdlib/array/uint32/lib/polyfill.js","../node_modules/@stdlib/assert/is-float64array/lib/main.js","../node_modules/@stdlib/assert/has-float64array-support/lib/float64array.js","../node_modules/@stdlib/array/float64/lib/main.js","../node_modules/@stdlib/array/float64/lib/index.js","../node_modules/@stdlib/assert/has-float64array-support/lib/main.js","../node_modules/@stdlib/array/float64/lib/polyfill.js","../node_modules/@stdlib/assert/is-uint8array/lib/main.js","../node_modules/@stdlib/constants/uint8/max/lib/index.js","../node_modules/@stdlib/assert/has-uint8array-support/lib/uint8array.js","../node_modules/@stdlib/array/uint8/lib/main.js","../node_modules/@stdlib/array/uint8/lib/index.js","../node_modules/@stdlib/assert/has-uint8array-support/lib/main.js","../node_modules/@stdlib/array/uint8/lib/polyfill.js","../node_modules/@stdlib/assert/is-uint16array/lib/main.js","../node_modules/@stdlib/constants/uint16/max/lib/index.js","../node_modules/@stdlib/assert/has-uint16array-support/lib/uint16array.js","../node_modules/@stdlib/array/uint16/lib/main.js","../node_modules/@stdlib/array/uint16/lib/index.js","../node_modules/@stdlib/assert/has-uint16array-support/lib/main.js","../node_modules/@stdlib/array/uint16/lib/polyfill.js","../node_modules/@stdlib/assert/is-little-endian/lib/main.js","../node_modules/@stdlib/assert/is-little-endian/lib/ctors.js","../node_modules/@stdlib/number/float64/base/to-words/lib/indices.js","../node_modules/@stdlib/number/float64/base/to-words/lib/assign.js","../node_modules/@stdlib/number/float64/base/to-words/lib/main.js","../node_modules/@stdlib/number/float64/base/to-words/lib/index.js","../node_modules/@stdlib/number/float64/base/set-low-word/lib/low.js","../node_modules/@stdlib/number/float64/base/set-low-word/lib/main.js","../node_modules/@stdlib/number/uint32/base/to-int32/lib/main.js","../node_modules/@stdlib/constants/float64/high-word-abs-mask/lib/index.js","../node_modules/@stdlib/number/float64/base/from-words/lib/indices.js","../node_modules/@stdlib/number/float64/base/get-high-word/lib/high.js","../node_modules/@stdlib/number/float64/base/get-high-word/lib/main.js","../node_modules/@stdlib/number/float64/base/from-words/lib/main.js","../node_modules/@stdlib/math/base/special/copysign/lib/main.js","../node_modules/@stdlib/constants/float64/high-word-sign-mask/lib/index.js","../node_modules/@stdlib/number/float64/base/set-high-word/lib/high.js","../node_modules/@stdlib/number/float64/base/set-high-word/lib/main.js","../node_modules/@stdlib/math/base/special/pow/lib/log2ax.js","../node_modules/@stdlib/number/float64/base/normalize/lib/assign.js","../node_modules/@stdlib/constants/float64/smallest-normal/lib/index.js","../node_modules/@stdlib/number/float64/base/normalize/lib/index.js","../node_modules/@stdlib/number/float64/base/normalize/lib/main.js","../node_modules/@stdlib/math/base/special/ldexp/lib/main.js","../node_modules/@stdlib/number/float64/base/exponent/lib/main.js","../node_modules/@stdlib/constants/float64/high-word-exponent-mask/lib/index.js","../node_modules/@stdlib/constants/float64/exponent-bias/lib/index.js","../node_modules/@stdlib/constants/float64/min-base2-exponent-subnormal/lib/index.js","../node_modules/@stdlib/constants/float64/max-base2-exponent/lib/index.js","../node_modules/@stdlib/constants/float64/max-base2-exponent-subnormal/lib/index.js","../node_modules/@stdlib/math/base/special/pow/lib/main.js","../node_modules/@stdlib/math/base/special/pow/lib/y_is_infinite.js","../node_modules/@stdlib/math/base/special/pow/lib/x_is_zero.js","../node_modules/@stdlib/math/base/special/pow/lib/y_is_huge.js","../node_modules/@stdlib/math/base/special/pow/lib/logx.js","../node_modules/@stdlib/math/base/special/pow/lib/polyval_w.js","../node_modules/@stdlib/math/base/special/pow/lib/polyval_l.js","../node_modules/@stdlib/math/base/special/pow/lib/pow2.js","../node_modules/@stdlib/math/base/special/pow/lib/polyval_p.js","../node_modules/@stdlib/constants/float64/high-word-significand-mask/lib/index.js","../node_modules/@stdlib/constants/float64/ln-two/lib/index.js","../logspace/lib/main.js","../map/lib/main.js","../mapn/lib/main.js","../none/lib/main.js","../none-by/lib/main.js","../nth/lib/main.js","../node_modules/@stdlib/assert/is-array-like-object/lib/main.js","../node_modules/@stdlib/constants/array/max-array-length/lib/index.js","../pipeline/lib/main.js","../pipeline-thunk/lib/main.js","../pop/lib/main.js","../push/lib/main.js","../reject/lib/main.js","../replicate/lib/main.js","../replicate-by/lib/main.js","../shift/lib/main.js","../slice/lib/main.js","../some/lib/main.js","../some-by/lib/main.js","../step/lib/main.js","../strided/lib/main.js","../strided-by/lib/main.js","../node_modules/@stdlib/array/base/assert/is-accessor-array/lib/main.js","../node_modules/@stdlib/array/base/accessor-setter/lib/main.js","../node_modules/@stdlib/array/base/setter/lib/main.js","../node_modules/@stdlib/array/dtype/lib/ctor2dtype.js","../node_modules/@stdlib/assert/is-float32array/lib/main.js","../node_modules/@stdlib/assert/has-float32array-support/lib/float32array.js","../node_modules/@stdlib/array/float32/lib/main.js","../node_modules/@stdlib/array/float32/lib/index.js","../node_modules/@stdlib/assert/has-float32array-support/lib/main.js","../node_modules/@stdlib/array/float32/lib/polyfill.js","../node_modules/@stdlib/assert/is-int32array/lib/main.js","../node_modules/@stdlib/constants/int32/max/lib/index.js","../node_modules/@stdlib/assert/has-int32array-support/lib/int32array.js","../node_modules/@stdlib/array/int32/lib/main.js","../node_modules/@stdlib/array/int32/lib/index.js","../node_modules/@stdlib/assert/has-int32array-support/lib/main.js","../node_modules/@stdlib/constants/int32/min/lib/index.js","../node_modules/@stdlib/array/int32/lib/polyfill.js","../node_modules/@stdlib/assert/is-int16array/lib/main.js","../node_modules/@stdlib/constants/int16/max/lib/index.js","../node_modules/@stdlib/assert/has-int16array-support/lib/int16array.js","../node_modules/@stdlib/array/int16/lib/main.js","../node_modules/@stdlib/array/int16/lib/index.js","../node_modules/@stdlib/assert/has-int16array-support/lib/main.js","../node_modules/@stdlib/constants/int16/min/lib/index.js","../node_modules/@stdlib/array/int16/lib/polyfill.js","../node_modules/@stdlib/assert/is-uint8clampedarray/lib/main.js","../node_modules/@stdlib/assert/has-uint8clampedarray-support/lib/uint8clampedarray.js","../node_modules/@stdlib/array/uint8c/lib/main.js","../node_modules/@stdlib/array/uint8c/lib/index.js","../node_modules/@stdlib/assert/has-uint8clampedarray-support/lib/main.js","../node_modules/@stdlib/array/uint8c/lib/polyfill.js","../node_modules/@stdlib/assert/is-int8array/lib/main.js","../node_modules/@stdlib/constants/int8/max/lib/index.js","../node_modules/@stdlib/assert/has-int8array-support/lib/int8array.js","../node_modules/@stdlib/array/int8/lib/main.js","../node_modules/@stdlib/array/int8/lib/index.js","../node_modules/@stdlib/assert/has-int8array-support/lib/main.js","../node_modules/@stdlib/constants/int8/min/lib/index.js","../node_modules/@stdlib/array/int8/lib/polyfill.js","../node_modules/@stdlib/assert/is-arraybuffer/lib/main.js","../node_modules/@stdlib/complex/float64/lib/main.js","../node_modules/@stdlib/complex/float64/lib/tostring.js","../node_modules/@stdlib/complex/float64/lib/tojson.js","../node_modules/@stdlib/number/float64/base/to-float32/lib/main.js","../node_modules/@stdlib/number/float64/base/to-float32/lib/polyfill.js","../node_modules/@stdlib/number/float64/base/to-float32/lib/index.js","../node_modules/@stdlib/complex/float32/lib/main.js","../node_modules/@stdlib/assert/is-complex-like/lib/main.js","../node_modules/@stdlib/complex/realf/lib/main.js","../node_modules/@stdlib/complex/imagf/lib/main.js","../node_modules/@stdlib/strided/base/reinterpret-complex64/lib/main.js","../node_modules/@stdlib/strided/base/reinterpret-complex128/lib/main.js","../node_modules/@stdlib/complex/float32/lib/tostring.js","../node_modules/@stdlib/complex/float32/lib/tojson.js","../node_modules/@stdlib/array/base/getter/lib/main.js","../node_modules/@stdlib/array/base/accessor-getter/lib/main.js","../node_modules/@stdlib/array/complex64/lib/from_iterator.js","../node_modules/@stdlib/array/complex64/lib/from_iterator_map.js","../node_modules/@stdlib/array/complex64/lib/from_array.js","../node_modules/@stdlib/array/complex64/lib/main.js","../node_modules/@stdlib/complex/real/lib/main.js","../node_modules/@stdlib/complex/imag/lib/main.js","../node_modules/@stdlib/array/complex128/lib/from_iterator.js","../node_modules/@stdlib/array/complex128/lib/from_iterator_map.js","../node_modules/@stdlib/array/complex128/lib/from_array.js","../node_modules/@stdlib/array/complex128/lib/main.js","../node_modules/@stdlib/array/dtype/lib/ctors.js","../node_modules/@stdlib/array/dtype/lib/dtypes.js","../node_modules/@stdlib/array/dtype/lib/main.js","../to-array-view/lib/main.js","../to-array-view-right/lib/main.js","../union/lib/main.js","../unique/lib/main.js","../unique-by/lib/main.js","../unique-by-hash/lib/main.js","../unitspace/lib/main.js","../unshift/lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/\nfunction startsWithMinus( str ) {\n\treturn str[ 0 ] === '-';\n}\n\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/\nfunction zeros( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += '0';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction zeroPad( str, width, right ) {\n\tvar negative = false;\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tif ( startsWithMinus( str ) ) {\n\t\tnegative = true;\n\t\tstr = str.substr( 1 );\n\t}\n\tstr = ( right ) ?\n\t\tstr + zeros( pad ) :\n\t\tzeros( pad ) + str;\n\tif ( negative ) {\n\t\tstr = '-' + str;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default zeroPad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js';\nimport zeroPad from './zero_pad.js';\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/\nfunction formatInteger( token ) {\n\tvar base;\n\tvar out;\n\tvar i;\n\n\tswitch ( token.specifier ) {\n\tcase 'b':\n\t\t// Case: %b (binary)\n\t\tbase = 2;\n\t\tbreak;\n\tcase 'o':\n\t\t// Case: %o (octal)\n\t\tbase = 8;\n\t\tbreak;\n\tcase 'x':\n\tcase 'X':\n\t\t// Case: %x, %X (hexadecimal)\n\t\tbase = 16;\n\t\tbreak;\n\tcase 'd':\n\tcase 'i':\n\tcase 'u':\n\tdefault:\n\t\t// Case: %d, %i, %u (decimal)\n\t\tbase = 10;\n\t\tbreak;\n\t}\n\tout = token.arg;\n\ti = parseInt( out, 10 );\n\tif ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( out ) ) {\n\t\t\tthrow new Error( 'invalid integer. Value: ' + out );\n\t\t}\n\t\ti = 0;\n\t}\n\tif ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {\n\t\ti = 0xffffffff + i + 1;\n\t}\n\tif ( i < 0 ) {\n\t\tout = ( -i ).toString( base );\n\t\tif ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tout = '-' + out;\n\t} else {\n\t\tout = i.toString( base );\n\t\tif ( !i && !token.precision ) {\n\t\t\tout = '';\n\t\t} else if ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tif ( token.sign ) {\n\t\t\tout = token.sign + out;\n\t\t}\n\t}\n\tif ( base === 16 ) {\n\t\tif ( token.alternate ) {\n\t\t\tout = '0x' + out;\n\t\t}\n\t\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\t\tuppercase.call( out ) :\n\t\t\tlowercase.call( out );\n\t}\n\tif ( base === 8 ) {\n\t\tif ( token.alternate && out.charAt( 0 ) !== '0' ) {\n\t\t\tout = '0' + out;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js';\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\nvar replace = String.prototype.replace;\n\n\n// VARIABLES //\n\nvar RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar RE_ONLY_DIGITS = /^(\\d+)$/;\nvar RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/\nfunction formatDouble( token ) {\n\tvar digits;\n\tvar out;\n\tvar f = parseFloat( token.arg );\n\tif ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( token.arg ) ) {\n\t\t\tthrow new Error( 'invalid floating-point number. Value: ' + out );\n\t\t}\n\t\t// Case: NaN, Infinity, or -Infinity\n\t\tf = token.arg;\n\t}\n\tswitch ( token.specifier ) {\n\tcase 'e':\n\tcase 'E':\n\t\tout = f.toExponential( token.precision );\n\t\tbreak;\n\tcase 'f':\n\tcase 'F':\n\t\tout = f.toFixed( token.precision );\n\t\tbreak;\n\tcase 'g':\n\tcase 'G':\n\t\tif ( abs( f ) < 0.0001 ) {\n\t\t\tdigits = token.precision;\n\t\t\tif ( digits > 0 ) {\n\t\t\t\tdigits -= 1;\n\t\t\t}\n\t\t\tout = f.toExponential( digits );\n\t\t} else {\n\t\t\tout = f.toPrecision( token.precision );\n\t\t}\n\t\tif ( !token.alternate ) {\n\t\t\tout = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );\n\t\t\tout = replace.call( out, RE_PERIOD_ZERO_EXP, 'e');\n\t\t\tout = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'invalid double notation. Value: ' + token.specifier );\n\t}\n\tout = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );\n\tout = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );\n\tif ( token.alternate ) {\n\t\tout = replace.call( out, RE_ONLY_DIGITS, '$1.' );\n\t\tout = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );\n\t}\n\tif ( f >= 0 && token.sign ) {\n\t\tout = token.sign + out;\n\t}\n\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\tuppercase.call( out ) :\n\t\tlowercase.call( out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatDouble;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/\nfunction spaces( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += ' ';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction spacePad( str, width, right ) {\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tstr = ( right ) ?\n\t\tstr + spaces( pad ) :\n\t\tspaces( pad ) + str;\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default spacePad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport formatInteger from './format_integer.js';\nimport isString from './is_string.js';\nimport formatDouble from './format_double.js';\nimport spacePad from './space_pad.js';\nimport zeroPad from './zero_pad.js';\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\nvar isnan = isNaN; // NOTE: We use the global `isNaN` function here instead of `@stdlib/math/base/assert/is-nan` to avoid circular dependencies.\nvar isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.\n\n\n// FUNCTIONS //\n\n/**\n* Initializes token object with properties of supplied format identifier object or default values if not present.\n*\n* @private\n* @param {Object} token - format identifier object\n* @returns {Object} token object\n*/\nfunction initialize( token ) {\n\tvar out = {};\n\tout.specifier = token.specifier;\n\tout.precision = ( token.precision === void 0 ) ? 1 : token.precision;\n\tout.width = token.width;\n\tout.flags = token.flags || '';\n\tout.mapping = token.mapping;\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates string from a token array by interpolating values.\n*\n* @param {Array} tokens - string parts and format identifier objects\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be an array\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var tokens = [ 'beep ', { 'specifier': 's' } ];\n* var out = formatInterpolate( tokens, 'boop' );\n* // returns 'beep boop'\n*/\nfunction formatInterpolate( tokens ) {\n\tvar hasPeriod;\n\tvar flags;\n\tvar token;\n\tvar flag;\n\tvar num;\n\tvar out;\n\tvar pos;\n\tvar i;\n\tvar j;\n\n\tif ( !isArray( tokens ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );\n\t}\n\tout = '';\n\tpos = 1;\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isString( token ) ) {\n\t\t\tout += token;\n\t\t} else {\n\t\t\thasPeriod = token.precision !== void 0;\n\t\t\ttoken = initialize( token );\n\t\t\tif ( !token.specifier ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );\n\t\t\t}\n\t\t\tif ( token.mapping ) {\n\t\t\t\tpos = token.mapping;\n\t\t\t}\n\t\t\tflags = token.flags;\n\t\t\tfor ( j = 0; j < flags.length; j++ ) {\n\t\t\t\tflag = flags.charAt( j );\n\t\t\t\tswitch ( flag ) {\n\t\t\t\tcase ' ':\n\t\t\t\t\ttoken.sign = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+':\n\t\t\t\t\ttoken.sign = '+';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '0':\n\t\t\t\t\ttoken.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n\t\t\t\t\tbreak;\n\t\t\t\tcase '#':\n\t\t\t\t\ttoken.alternate = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'invalid flag: ' + flag );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.width === '*' ) {\n\t\t\t\ttoken.width = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.width ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.width < 0 ) {\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.width = -token.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasPeriod ) {\n\t\t\t\tif ( token.precision === '*' ) {\n\t\t\t\t\ttoken.precision = parseInt( arguments[ pos ], 10 );\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tif ( isnan( token.precision ) ) {\n\t\t\t\t\t\tthrow new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( token.precision < 0 ) {\n\t\t\t\t\t\ttoken.precision = 1;\n\t\t\t\t\t\thasPeriod = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoken.arg = arguments[ pos ];\n\t\t\tswitch ( token.specifier ) {\n\t\t\tcase 'b':\n\t\t\tcase 'o':\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\t// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n\t\t\t\tif ( hasPeriod ) {\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatInteger( token );\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\t// Case: %s (string)\n\t\t\t\ttoken.maxWidth = ( hasPeriod ) ? token.precision : -1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t// Case: %c (character)\n\t\t\t\tif ( !isnan( token.arg ) ) {\n\t\t\t\t\tnum = parseInt( token.arg, 10 );\n\t\t\t\t\tif ( num < 0 || num > 127 ) {\n\t\t\t\t\t\tthrow new Error( 'invalid character code. Value: ' + token.arg );\n\t\t\t\t\t}\n\t\t\t\t\ttoken.arg = ( isnan( num ) ) ?\n\t\t\t\t\t\tString( token.arg ) :\n\t\t\t\t\t\tfromCharCode( num );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'E':\n\t\t\tcase 'f':\n\t\t\tcase 'F':\n\t\t\tcase 'g':\n\t\t\tcase 'G':\n\t\t\t\t// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n\t\t\t\tif ( !hasPeriod ) {\n\t\t\t\t\ttoken.precision = 6;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatDouble( token );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'invalid specifier: ' + token.specifier );\n\t\t\t}\n\t\t\t// Fit argument into field width...\n\t\t\tif ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {\n\t\t\t\ttoken.arg = token.arg.substring( 0, token.maxWidth );\n\t\t\t}\n\t\t\tif ( token.padZeros ) {\n\t\t\t\ttoken.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len\n\t\t\t} else if ( token.width ) {\n\t\t\t\ttoken.arg = spacePad( token.arg, token.width, token.padRight );\n\t\t\t}\n\t\t\tout += token.arg || '';\n\t\t\tpos += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInterpolate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\tvar token = {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n\tif ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {\n\t\ttoken.precision = '1';\n\t}\n\treturn token;\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\nfunction formatTokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\ttokens.push( parse( match ) );\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nexport default formatTokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport interpolate from './../../base/format-interpolate';\nimport tokenize from './../../base/format-tokenize';\nimport isString from './is_string.js';\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar args;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\targs = [ tokenize( str ) ];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn interpolate.apply( null, args );\n}\n\n\n// EXPORTS //\n\nexport default format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils/define-property\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nimport hasDefinePropertySupport from './has_define_property_support.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './define_property.js';\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar RE = /./;\n\n\n// EXPORTS //\n\nexport default RE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a boolean primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean primitive\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns false\n*/\nfunction isBoolean( value ) {\n\treturn ( typeof value === 'boolean' );\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasSymbols from './../../has-symbol-support';\n\n\n// VARIABLES //\n\nvar FLG = hasSymbols();\n\n\n// MAIN //\n\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\nfunction hasToStringTagSupport() {\n\treturn ( FLG && typeof Symbol.toStringTag === 'symbol' );\n}\n\n\n// EXPORTS //\n\nexport default hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default hasSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStr = Object.prototype.toString;\n\n\n// EXPORTS //\n\nexport default toStr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nexport default hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar Sym = ( typeof Symbol === 'function' ) ? Symbol : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Sym;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Symbol from '@stdlib/symbol/ctor';\n\n\n// MAIN //\n\nvar toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';\n\n\n// EXPORTS //\n\nexport default toStrTag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils/native-class\n*\n* @example\n* import nativeClass from '@stdlib/utils/native-class';\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n// MODULES //\n\nimport hasToStringTag from '@stdlib/assert/has-tostringtag-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( hasToStringTag() ) {\n\tmain = polyfill;\n} else {\n\tmain = builtin;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport toStringTag from './tostringtag.js';\nimport toStr from './tostring.js';\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\tvar isOwn;\n\tvar tag;\n\tvar out;\n\n\tif ( v === null || v === void 0 ) {\n\t\treturn toStr.call( v );\n\t}\n\ttag = v[ toStringTag ];\n\tisOwn = hasOwnProp( v, toStringTag );\n\n\t// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\ttry {\n\t\tv[ toStringTag ] = void 0;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn toStr.call( v );\n\t}\n\tout = toStr.call( v );\n\n\tif ( isOwn ) {\n\t\tv[ toStringTag ] = tag;\n\t} else {\n\t\tdelete v[ toStringTag ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toStr from './tostring.js';\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\treturn toStr.call( v );\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a boolean.\n*\n* @name Boolean\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {(boolean|Boolean)} boolean\n*\n* @example\n* var b = Boolean( null );\n* // returns false\n*\n* b = Boolean( [] );\n* // returns true\n*\n* b = Boolean( {} );\n* // returns true\n*\n* @example\n* var b = new Boolean( false );\n* // returns <Boolean>\n*/\nvar Bool = Boolean; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Boolean.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support';\nimport nativeClass from '@stdlib/utils/native-class';\nimport Boolean from '@stdlib/boolean/ctor';\nimport test from './try2serialize.js';\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean object\n*\n* @example\n* var bool = isBoolean( true );\n* // returns false\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Boolean ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Boolean]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toString from './tostring.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a boolean\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the global object using code generation.\n*\n* @private\n* @returns {Object} global object\n*/\nfunction getGlobal() {\n\treturn new Function( 'return this;' )(); // eslint-disable-line no-new-func, stdlib/require-globals\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a boolean.\n*\n* @module @stdlib/assert/is-boolean\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n* import isBoolean from '@stdlib/assert/is-boolean';\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n* import { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( true ) );\n* // returns false\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n* import { isObject as isBoolean } from '@stdlib/assert/is-boolean';\n*\n* var bool = isBoolean( true );\n* // returns false\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof self === 'object' ) ? self : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof window === 'object' ) ? window : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof global === 'object' ) ? global : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof globalThis === 'object' ) ? globalThis : null; // eslint-disable-line no-undef\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getGlobal from './../../../global';\n\n\n// MAIN //\n\nvar root = getGlobal();\nvar nodeList = root.document && root.document.childNodes;\n\n\n// EXPORTS //\n\nexport default nodeList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport format from '@stdlib/string/format';\nimport getThis from './codegen.js';\nimport Self from './self.js';\nimport Win from './window.js';\nimport Global from './global.js';\nimport GlobalThis from './global_this.js';\n\n\n// MAIN //\n\n/**\n* Returns the global object.\n*\n* ## Notes\n*\n* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.\n*\n* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object\n* @throws {TypeError} must provide a boolean\n* @throws {Error} unable to resolve global object\n* @returns {Object} global object\n*\n* @example\n* var g = getGlobal();\n* // returns {...}\n*/\nfunction getGlobal( codegen ) {\n\tif ( arguments.length ) {\n\t\tif ( !isBoolean( codegen ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a boolean. Value: `%s`.', codegen ) );\n\t\t}\n\t\tif ( codegen ) {\n\t\t\treturn getThis();\n\t\t}\n\t\t// Fall through...\n\t}\n\t// Case: 2020 revision of ECMAScript standard\n\tif ( GlobalThis ) {\n\t\treturn GlobalThis;\n\t}\n\t// Case: browsers and web workers\n\tif ( Self ) {\n\t\treturn Self;\n\t}\n\t// Case: browsers\n\tif ( Win ) {\n\t\treturn Win;\n\t}\n\t// Case: Node.js\n\tif ( Global ) {\n\t\treturn Global;\n\t}\n\t// Case: unknown\n\tthrow new Error( 'unexpected error. Unable to resolve global object.' );\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar typedarray = Int8Array; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\nfunction reFunctionName() {\n\treturn /^\\s*function\\s*([^(]*)/i;\n}\n\n\n// EXPORTS //\n\nexport default reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reFunctionName from './main.js';\n\n\n// MAIN //\n\n/**\n* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* Regular expression: `/^\\s*function\\s*([^(]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `\\s*`\n*     -   Match zero or more spaces after the word `function`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^\\s*function\\s*([^(]*)/i\n*/\nvar RE_FUNCTION_NAME = reFunctionName();\n\n\n// EXPORTS //\n\nexport default RE_FUNCTION_NAME;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @module @stdlib/regexp/function-name\n*\n* @example\n* import reFunctionName from '@stdlib/regexp/function-name';\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport REGEXP from './regexp.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar f;\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is an array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array\n*\n* @example\n* var bool = isArray( [] );\n* // returns true\n*\n* @example\n* var bool = isArray( {} );\n* // returns false\n*/\nfunction isArray( value ) {\n\treturn ( nativeClass( value ) === '[object Array]' );\n}\n\n\n// MAIN //\n\nif ( Array.isArray ) {\n\tf = Array.isArray;\n} else {\n\tf = isArray;\n}\n\n\n// EXPORTS //\n\nexport default f;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is object-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is object-like\n*\n* @example\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( [] );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( null );\n* // returns false\n*/\nfunction isObjectLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from './../../is-object-like';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Buffer instance.\n*\n* @param {*} value - value to validate\n* @returns {boolean} boolean indicating if a value is a Buffer instance\n*\n* @example\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( new Buffer( [1,2,3,4] ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( {} );\n* // returns false\n*\n* @example\n* var v = isBuffer( [] );\n* // returns false\n*/\nfunction isBuffer( value ) {\n\treturn (\n\t\tisObjectLike( value ) &&\n\t\t(\n\t\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t\tvalue._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n\t\t\t(\n\t\t\t\tvalue.constructor &&\n\n\t\t\t\t// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions\n\t\t\t\ttypeof value.constructor.isBuffer === 'function' &&\n\t\t\t\tvalue.constructor.isBuffer( value )\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from './../../native-class';\nimport { REGEXP as RE } from '@stdlib/regexp/function-name';\nimport isBuffer from '@stdlib/assert/is-buffer';\n\n\n// MAIN //\n\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/\nfunction constructorName( v ) {\n\tvar match;\n\tvar name;\n\tvar ctor;\n\tname = nativeClass( v ).slice( 8, -1 );\n\tif ( (name === 'Object' || name === 'Error') && v.constructor ) {\n\t\tctor = v.constructor;\n\t\tif ( typeof ctor.name === 'string' ) {\n\t\t\treturn ctor.name;\n\t\t}\n\t\tmatch = RE.exec( ctor.toString() );\n\t\tif ( match ) {\n\t\t\treturn match[ 1 ];\n\t\t}\n\t}\n\tif ( isBuffer( v ) ) {\n\t\treturn 'Buffer';\n\t}\n\treturn name;\n}\n\n\n// EXPORTS //\n\nexport default constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is object-like.\n*\n* @module @stdlib/assert/is-object-like\n*\n* @example\n* import isObjectLike from '@stdlib/assert/is-object-like';\n*\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* bool = isObjectLike( [] );\n* // returns true\n*\n* bool = isObjectLike( null );\n* // returns false\n*\n* @example\n* import { isObjectLikeArray as isObjectLike } from '@stdlib/assert/is-object-like';\n*\n* var bool = isObjectLike( [ {}, [] ] );\n* // returns true\n*\n* bool = isObjectLike( [ {}, '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport arrayfun from './../../tools/array-function';\nimport main from './main.js';\n\n\n// VARIABLES //\n\nvar isObjectLikeArray = arrayfun( main );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isObjectLikeArray', isObjectLikeArray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from './../../../is-array';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array function\n*\n* @example\n* import isOdd from '@stdlib/assert/is-odd';\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arrayfcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArray( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine a value's type.\n*\n* @module @stdlib/utils/type-of\n*\n* @example\n* import typeOf from '@stdlib/utils/type-of';\n*\n* var str = typeOf( 'a' );\n* // returns 'string'\n*\n* str = typeOf( 5 );\n* // returns 'number'\n*/\n\n// MODULES //\n\nimport usePolyfill from './check.js';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main = ( usePolyfill() ) ? polyfill : builtin;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport RE from './fixtures/re.js';\nimport nodeList from './fixtures/nodelist.js';\nimport typedarray from './fixtures/typedarray.js';\n\n\n// MAIN //\n\n/**\n* Checks whether a polyfill is needed when using the `typeof` operator.\n*\n* @private\n* @returns {boolean} boolean indicating whether a polyfill is needed\n*/\nfunction check() {\n\tif (\n\t\t// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):\n\t\ttypeof RE === 'function' ||\n\n\t\t// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):\n\t\ttypeof typedarray === 'object' ||\n\n\t\t// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):\n\t\ttypeof nodeList === 'function'\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from './../../constructor-name';\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\treturn ctorName( v ).toLowerCase();\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from './../../constructor-name';\n\n\n// NOTES //\n\n/*\n* Built-in `typeof` operator behavior:\n*\n* ```text\n* typeof null => 'object'\n* typeof undefined => 'undefined'\n* typeof 'a' => 'string'\n* typeof 5 => 'number'\n* typeof NaN => 'number'\n* typeof true => 'boolean'\n* typeof false => 'boolean'\n* typeof {} => 'object'\n* typeof [] => 'object'\n* typeof function foo(){} => 'function'\n* typeof function* foo(){} => 'object'\n* typeof Symbol() => 'symbol'\n* ```\n*\n*/\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\tvar type;\n\n\t// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):\n\tif ( v === null ) {\n\t\treturn 'null';\n\t}\n\ttype = typeof v;\n\n\t// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.\n\tif ( type === 'object' ) {\n\t\treturn ctorName( v ).toLowerCase();\n\t}\n\treturn type;\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport typeOf from '@stdlib/utils/type-of';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a function\n*\n* @example\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\nfunction isFunction( value ) {\n\t// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.\n\treturn ( typeOf( value ) === 'function' );\n}\n\n\n// EXPORTS //\n\nexport default isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from './../../is-function';\n\n\n// MAIN //\n\n/**\n* Tests if a value is iterator-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is iterator-like\n*\n* @example\n* var it = {\n*     'next': function noop() {}\n* };\n* var bool = isIteratorLike( it );\n* // returns true\n*\n* @example\n* var bool = isIteratorLike( {} );\n* // returns false\n*\n* @example\n* var bool = isIteratorLike( null );\n* // returns false\n*/\nfunction isIteratorLike( value ) {\n\tvar t = typeof value;\n\treturn (\n\t\tvalue !== null &&\n\t\t( t === 'object' || t === 'function' ) &&\n\t\tisFunction( value.next )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isIteratorLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default Number; // eslint-disable-line stdlib/require-globals\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Number from '@stdlib/number/ctor';\n\n\n// MAIN //\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Number.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support';\nimport nativeClass from '@stdlib/utils/native-class';\nimport Number from '@stdlib/number/ctor';\nimport test from './try2serialize.js';\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\nfunction isNumber( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Number ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Number]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toString from './tostring.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a number\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( null );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a number.\n*\n* @module @stdlib/assert/is-number\n*\n* @example\n* import isNumber from '@stdlib/assert/is-number';\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isNumber } from '@stdlib/assert/is-number';\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*\n* @example\n* import { isObject as isNumber } from '@stdlib/assert/is-number';\n*\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* @module @stdlib/constants/float64/pinf\n* @type {number}\n*\n* @example\n* import FLOAT64_PINF from '@stdlib/constants/float64/pinf';\n* // returns Infinity\n*/\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.POSITIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default FLOAT64_PINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* @module @stdlib/constants/float64/ninf\n* @type {number}\n*\n* @example\n* import FLOAT64_NINF from '@stdlib/constants/float64/ninf';\n* // returns -Infinity\n*/\n\n// MODULES //\n\nimport Number from '@stdlib/number/ctor';\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.NEGATIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_NINF = Number.NEGATIVE_INFINITY;\n\n\n// EXPORTS //\n\nexport default FLOAT64_NINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward negative infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* @example\n* var v = floor( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = floor( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = floor( NaN );\n* // returns NaN\n*/\nvar floor = Math.floor; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default floor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport floor from './../../../../base/special/floor';\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is an integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an integer\n*\n* @example\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( 3.14 );\n* // returns false\n*/\nfunction isInteger( x ) {\n\treturn (floor(x) === x);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport isInt from '@stdlib/math/base/assert/is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a number primitive is an integer value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a number primitive is an integer value\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tvalue < PINF &&\n\t\tvalue > NINF &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from './../../is-number';\nimport isInt from './integer.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having an integer value\n*\n* @example\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isNumber } from './../../is-number';\nimport isInt from './integer.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having an integer value\n*\n* @example\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is an integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an integer\n*\n* @example\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isInteger( null );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from './../../is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isInteger } from './../../is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( null );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Advances an iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {NonNegativeInteger} [n=1e308] - number of iterations\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {Iterator} input iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var it1 = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var it2 = iterAdvance( it1, 4 );\n*\n* var v = it2.next().value;\n* // returns 1\n*\n* var bool = it2.next().done;\n* // returns true\n*/\nfunction iterAdvance( iterator, n ) {\n\tvar N;\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', n ) );\n\t\t}\n\t\tN = n;\n\t} else {\n\t\tN = 1e308;\n\t}\n\ti = 0;\n\twhile ( i < N ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t}\n\treturn iterator;\n}\n\n\n// EXPORTS //\n\nexport default iterAdvance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one iterated value is truthy.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {boolean} boolean indicating whether at least one iterated value is truthy\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterAny( it );\n* // returns true\n*/\nfunction iterAny( iterator ) {\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( v.value ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default iterAny;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one iterated value passes a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether at least one iterated value passes a test implemented by a predicate function\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* function predicate( v ) {\n*     return ( v === 1 );\n* }\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterAnyBy( it, predicate );\n* // returns true\n*/\nfunction iterAnyBy( iterator, predicate, thisArg ) {\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( predicate.call( thisArg, v.value, i ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default iterAnyBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from './../../has-own-property';\nimport Symbol from '@stdlib/symbol/ctor';\n\n\n// MAIN //\n\n/**\n* Tests for native `Symbol.iterator` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol.iterator` support\n*\n* @example\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasIteratorSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol' &&\n\t\thasOwnProp( Symbol, 'iterator' ) &&\n\t\ttypeof Symbol.iterator === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default hasIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an integer.\n*\n* @module @stdlib/assert/is-integer\n*\n* @example\n* import isInteger from '@stdlib/assert/is-integer';\n*\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isInteger( -3.14 );\n* // returns false\n*\n* bool = isInteger( null );\n* // returns false\n*\n* @example\n* // Use interface to check for integer primitives...\n* import { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\n*\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for integer objects...\n* import { isObject as isInteger } from '@stdlib/assert/is-integer';\n*\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative integer.\n*\n* @module @stdlib/assert/is-nonnegative-integer\n*\n* @example\n* import isNonNegativeInteger from '@stdlib/assert/is-nonnegative-integer';\n*\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* bool = isNonNegativeInteger( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* import { isObject as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasIteratorSymbolSupport from '@stdlib/assert/has-iterator-symbol-support';\n\n\n// MAIN //\n\n/**\n* Iterator symbol.\n*\n* @name IteratorSymbol\n* @constant\n* @type {(symbol|null)}\n*\n* @example\n* function iterator() {\n*     var it;\n*     var i;\n*\n*     i = -1;\n*\n*     it = {};\n*     it.next = next;\n*     it.return = done;\n*\n*     if ( IteratorSymbol ) {\n*         it[ IteratorSymbol ] = iterator;\n*     }\n*     return it;\n*\n*     function next() {\n*         i += 1;\n*         return {\n*             'value': i,\n*             'done': false\n*         };\n*     }\n*\n*     function done( value ) {\n*         if ( arguments.length === 0 ) {\n*             return {\n*                 'done': true\n*             };\n*         }\n*         return {\n*             'value': value,\n*             'done': true\n*         };\n*     }\n* }\n*\n* var obj = iterator();\n*/\nvar IteratorSymbol = ( hasIteratorSymbolSupport() ) ? Symbol.iterator : null;\n\n\n// EXPORTS //\n\nexport default IteratorSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over the values of two or more iterators.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var it1 = array2iterator( [ 1, 2 ] );\n* var it2 = array2iterator( [ 3, 4 ] );\n*\n* var iter = iterConcat( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterConcat() {\n\tvar iterators;\n\tvar iterator;\n\tvar niter;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide two or more iterators.' );\n\t}\n\titerators = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\tif ( !isIteratorLike( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\titerators.push( arguments[ i ] );\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\titerator = iterators[ 0 ];\n\tFLG = false;\n\ti = 0;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\t// Note: if provided non-empty iterators, this loop executes at most twice...\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\ti += 1;\n\t\t\t\tif ( i === niter ) {\n\t\t\t\t\tFLG = true;\n\t\t\t\t\tif ( hasOwnProp( v, 'value' ) ) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'value': v.value,\n\t\t\t\t\t\t\t'done': true\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'done': true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\titerator = iterators[ i ];\n\n\t\t\t\t// Note: we ignore iterator return values except for the final iterator...\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\treturn iterConcat.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterConcat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from './../../is-array';\n\n\n// MAIN //\n\n/**\n* Tests if a value is an object; e.g., `{}`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an object\n*\n* @example\n* var bool = isObject( {} );\n* // returns true\n*\n* @example\n* var bool = isObject( null );\n* // returns false\n*/\nfunction isObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t!isArray( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object.\n*\n* @name Object\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {Object} object\n*\n* @example\n* var o = new Object( null );\n* // returns {}\n*\n* @example\n* var o = new Object( 5.0 );\n* // returns <Number>\n*\n* @example\n* var o = new Object( 'beep' );\n* // returns <String>\n*\n* @example\n* var o1 = {};\n*\n* var o2 = new Object( o1 );\n* // returns {}\n*\n* var bool = ( o1 === o2 );\n* // returns true\n*/\nvar Obj = Object; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport builtin from './native.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar getProto;\nif ( isFunction( Object.getPrototypeOf ) ) {\n\tgetProto = builtin;\n} else {\n\tgetProto = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar getProto = Object.getPrototypeOf;\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from './../../native-class';\nimport getProto from './proto.js';\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {(Object|null)} prototype\n*/\nfunction getPrototypeOf( obj ) {\n\tvar proto = getProto( obj );\n\tif ( proto || proto === null ) {\n\t\treturn proto;\n\t}\n\tif ( nativeClass( obj.constructor ) === '[object Function]' ) {\n\t\t// May break if the constructor has been tampered with...\n\t\treturn obj.constructor.prototype;\n\t}\n\tif ( obj instanceof Object ) {\n\t\treturn Object.prototype;\n\t}\n\t// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the value of the `__proto__` property.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {*} value of `__proto__` property\n*/\nfunction getProto( obj ) {\n\t// eslint-disable-next-line no-proto\n\treturn obj.__proto__;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from './../../is-object';\nimport isFunction from './../../is-function';\nimport getPrototypeOf from '@stdlib/utils/get-prototype-of';\nimport hasOwnProp from './../../has-own-property';\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar objectPrototype = Object.prototype;\n\n\n// FUNCTIONS //\n\n/**\n* Tests that an object only has own properties.\n*\n* @private\n* @param {Object} obj - value to test\n* @returns {boolean} boolean indicating if an object only has own properties\n*/\nfunction ownProps( obj ) {\n\tvar key;\n\n\t// NOTE: possibility of perf boost if key enumeration order is known (see http://stackoverflow.com/questions/18531624/isplainobject-thing).\n\tfor ( key in obj ) {\n\t\tif ( !hasOwnProp( obj, key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests if a value is a plain object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a plain object\n*\n* @example\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* @example\n* var bool = isPlainObject( null );\n* // returns false\n*/\nfunction isPlainObject( value ) {\n\tvar proto;\n\n\t// Screen for obvious non-objects...\n\tif ( !isObject( value ) ) {\n\t\treturn false;\n\t}\n\t// Objects with no prototype (e.g., `Object.create( null )`) are plain...\n\tproto = getPrototypeOf( value );\n\tif ( !proto ) {\n\t\treturn true;\n\t}\n\t// Objects having a prototype are plain if and only if they are constructed with a global `Object` function and the prototype points to the prototype of a plain object...\n\treturn (\n\t\t// Cannot have own `constructor` property:\n\t\t!hasOwnProp( value, 'constructor' ) &&\n\n\t\t// Prototype `constructor` property must be a function (see also https://bugs.jquery.com/ticket/9897 and http://stackoverflow.com/questions/18531624/isplainobject-thing):\n\t\thasOwnProp( proto, 'constructor' ) &&\n\t\tisFunction( proto.constructor ) &&\n\t\tnativeClass( proto.constructor ) === '[object Function]' &&\n\n\t\t// Test for object-specific method:\n\t\thasOwnProp( proto, 'isPrototypeOf' ) &&\n\t\tisFunction( proto.isPrototypeOf ) &&\n\n\t\t(\n\t\t\t// Test if the prototype matches the global `Object` prototype (same realm):\n\t\t\tproto === objectPrototype ||\n\n\t\t\t// Test that all properties are own properties (cross-realm; *most* likely a plain object):\n\t\t\townProps( value )\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor';\nimport getProto from './detect.js';\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @param {*} value - input value\n* @returns {(Object|null)} prototype\n*\n* @example\n* var proto = getPrototypeOf( {} );\n* // returns {}\n*/\nfunction getPrototypeOf( value ) {\n\tif (\n\t\tvalue === null ||\n\t\tvalue === void 0\n\t) {\n\t\treturn null;\n\t}\n\t// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:\n\tvalue = Object( value );\n\n\treturn getProto( value );\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isPlainObject from '@stdlib/assert/is-plain-object';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which always returns the same value.\n*\n* @param {*} value - value to return\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterConstant( 3.14 );\n*\n* var v = iter.next().value;\n* // returns 3.14\n*\n* v = iter.next().value;\n* // returns 3.14\n*\n* v = iter.next().value;\n* // returns 3.14\n*\n* // ...\n*/\nfunction iterConstant( value ) {\n\tvar options;\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\topts = {\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length > 1 ) {\n\t\toptions = arguments[ 1 ];\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\t\topts.iter = options.iter;\n\t\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t\t}\n\t\t}\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value, // Note: can be different than the iterator constant\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterConstant( value, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterConstant;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes the number of iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @returns {Iterator} iterator\n*\n* @example\n* import randu from '@stdlib/random/iter/randu';\n*\n* var iter = iterCounter( randu() );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction iterCounter( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\ti += 1;\n\t\treturn {\n\t\t\t'value': i,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterCounter( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterCounter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport MAX_LENGTH from '@stdlib/constants/array/max-typed-array-length';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a collection.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a collection\n*\n* @example\n* var bool = isCollection( [] );\n* // returns true\n*\n* @example\n* var bool = isCollection( {} );\n* // returns false\n*/\nfunction isCollection( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a typed array.\n*\n* @module @stdlib/constants/array/max-typed-array-length\n*\n* @example\n* import MAX_TYPED_ARRAY_LENGTH from '@stdlib/constants/array/max-typed-array-length';\n* // returns 9007199254740991\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a typed array.\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n*/\nvar MAX_TYPED_ARRAY_LENGTH = 9007199254740991;\n\n\n// EXPORTS //\n\nexport default MAX_TYPED_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' );\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar valueOf = String.prototype.valueOf; // non-generic\n\n\n// EXPORTS //\n\nexport default valueOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support';\nimport nativeClass from '@stdlib/utils/native-class';\nimport test from './try2valueof.js';\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string object\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns false\n*/\nfunction isString( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof String ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object String]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport valueOf from './valueof.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to extract a string value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a string can be extracted\n*/\nfunction test( value ) {\n\ttry {\n\t\tvalueOf.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a string\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*/\nfunction isString( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 7.0 );\n* // returns false\n*/\nfunction isnan( x ) {\n\treturn ( x !== x );\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from './../../is-number';\nimport isNan from '@stdlib/math/base/assert/is-nan';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `NaN` number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `NaN` number primitive\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isNumber } from './../../is-number';\nimport isNan from '@stdlib/math/base/assert/is-nan';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value of `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value of `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( null );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from './../../is-collection';\nimport { isPrimitive as isInteger } from './../../is-integer';\nimport { isPrimitive as isString } from './../../is-string';\nimport { isPrimitive as isnan } from './../../is-nan';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests if an array-like value contains a search value.\n*\n* @param {(Collection|string)} val - input value\n* @param {*} searchValue - search value\n* @param {integer} [position=0] - position at which to start searching for `searchValue`\n* @throws {TypeError} first argument must be array-like\n* @throws {Error} must provide a search value\n* @throws {TypeError} second argument must be a string when the first argument is a string\n* @throws {TypeError} third argument must be an integer\n* @returns {boolean} boolean indicating whether one value contains another\n*\n* @example\n* var bool = contains( 'last man standing', 'stand' );\n* // returns true\n*\n* @example\n* var bool = contains( [ 1, 2, 3, 4 ], 2 );\n* // returns true\n*\n* @example\n* var bool = contains( 'presidential election', 'president' );\n* // returns true\n*\n* @example\n* var bool = contains( [ NaN, 2, 3, 4 ], NaN );\n* // returns true\n*\n* @example\n* var bool = contains( 'javaScript', 'js' );\n* // returns false\n*\n* @example\n* var bool = contains( [ 1, 2, 3, {} ], {} );\n* // returns false\n*\n* @example\n* var bool = contains( 'Hidden Treasures', '' );\n* // returns true\n*/\nfunction contains( val, searchValue, position ) {\n\tvar len;\n\tvar pos;\n\tvar i;\n\tif ( !isCollection( val ) && !isString( val ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be array-like. Value: `%s`.', val ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide a search value.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isInteger( position ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', position ) );\n\t\t}\n\t\tpos = position;\n\t\tif ( pos < 0 ) {\n\t\t\tpos = 0;\n\t\t}\n\t} else {\n\t\tpos = 0;\n\t}\n\tif ( isString( val ) ) {\n\t\tif ( !isString( searchValue ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', searchValue ) );\n\t\t}\n\t\treturn val.indexOf( searchValue, pos ) !== -1;\n\t}\n\tlen = val.length;\n\tif ( isnan( searchValue ) ) {\n\t\tfor ( i = pos; i < len; i++ ) {\n\t\t\tif ( isnan( val[ i ] ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tfor ( i = pos; i < len; i++ ) {\n\t\tif ( val[ i ] === searchValue ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default contains;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a string.\n*\n* @module @stdlib/assert/is-string\n*\n* @example\n* import isString from '@stdlib/assert/is-string';\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 5 );\n* // returns false\n*\n* @example\n* import { isObject as isString } from '@stdlib/assert/is-string';\n*\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 'beep' );\n* // returns false\n*\n* @example\n* import { isPrimitive as isString } from '@stdlib/assert/is-string';\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `NaN`.\n*\n* @module @stdlib/assert/is-nan\n*\n* @example\n* import isnan from '@stdlib/assert/is-nan';\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isnan } from '@stdlib/assert/is-nan';\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns false\n*\n* @example\n* import { isObject as isnan } from '@stdlib/assert/is-nan';\n*\n* var bool = isnan( NaN );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward positive infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = ceil( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = ceil( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = ceil( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = ceil( NaN );\n* // returns NaN\n*/\nvar ceil = Math.ceil; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default ceil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation\n\n/**\n* Rounds a numeric value to the nearest integer.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = round( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = round( -4.5 );\n* // returns -4.0\n*\n* @example\n* var v = round( -4.6 );\n* // returns -5.0\n*\n* @example\n* var v = round( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = round( 9.5 );\n* // returns 10.0\n*\n* @example\n* var v = round( 9.2 );\n* // returns 9.0\n*\n* @example\n* var v = round( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = round( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = round( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = round( -Infinity );\n* // returns -Infinity\n*\n* @example\n* var v = round( NaN );\n* // returns NaN\n*/\nvar round = Math.round; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default round;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar getDay = Date.prototype.getDay; // non-generic\n\n\n// EXPORTS //\n\nexport default getDay;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support';\nimport nativeClass from '@stdlib/utils/native-class';\nimport test from './try2getday.js';\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `Date` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Date` object\n*\n* @example\n* var bool = isDateObject( new Date() );\n* // returns true\n*\n* @example\n* var bool = isDateObject( '2017-01-01' );\n* // returns false\n*/\nfunction isDateObject( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Date ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Date]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isDateObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getDay from './getday.js';\n\n\n// MAIN //\n\n/**\n* Attempts to call a `Date` method.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if able to call a `Date` method\n*/\nfunction test( value ) {\n\ttry {\n\t\tgetDay.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isDateObject from '@stdlib/assert/is-date-object';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts a value to a JavaScript timestamp.\n*\n* @private\n* @param {*} value - value to convert\n* @returns {(NonNegativeInteger|Error)} either a JavaScript timestamp or an error object\n*/\nfunction convert( value ) {\n\tif ( isString( value ) ) {\n\t\tvalue = Date.parse( value );\n\t\tif ( value !== value ) {\n\t\t\treturn new TypeError( format( 'invalid argument. Unable to parse date string. Value: `%s`.', value ) );\n\t\t}\n\t\treturn value;\n\t}\n\tif ( isNonNegativeInteger( value ) ) {\n\t\treturn value;\n\t}\n\tif ( isDateObject( value ) ) {\n\t\treturn value.getTime();\n\t}\n\treturn new TypeError( format( 'invalid argument. Must provide either a Date object, a JavaScript timestamp (i.e., a nonnegative integer), or a date string. Value: `%s`.', value ) );\n}\n\n\n// EXPORTS //\n\nexport default convert;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isPlainObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport contains from '@stdlib/assert/contains';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\nimport floor from '@stdlib/math/base/special/floor';\nimport ceil from '@stdlib/math/base/special/ceil';\nimport round from '@stdlib/math/base/special/round';\nimport convert from './convert.js';\n\n\n// VARIABLES //\n\nvar DEFAULT_LENGTH = 100;\nvar DEFAULT_ROUNDING_MODE = 'floor';\nvar ROUNDING_MODES = [\n\t'floor',\n\t'ceil',\n\t'round'\n];\nvar ROUNDING_FCNS = {\n\t'floor': floor,\n\t'ceil': ceil,\n\t'round': round\n};\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns evenly spaced dates over a specified interval.\n*\n* @param {(NonNegativeInteger|string|Date)} start - starting date as either a `Date` object, JavaScript timestamp, or a date string (inclusive)\n* @param {(NonNegativeInteger|string|Date)} stop - stopping date as either a `Date` object, JavaScript timestamp, or a date string (inclusive)\n* @param {NonNegativeInteger} [N=100] - number of values\n* @param {Options} [options] - function options\n* @param {string} [options.round='floor'] - specifies how sub-millisecond times should be rounded: 'floor', 'ceil', or 'round'\n* @throws {TypeError} a numeric `start` argument must be a nonnegative integer\n* @throws {TypeError} a numeric `stop` argument must be a nonnegative integer\n* @throws {TypeError} unable to parse date string\n* @throws {TypeError} `N` argument must be a nonnegative integer\n* @throws {TypeError} `options` argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* import MILLISECONDS_IN_DAY from '@stdlib/constants/time/milliseconds-in-day';\n*\n* var start = new Date();\n* var iter = iterDatespace( start, new Date( start.getTime()+MILLISECONDS_IN_DAY ) );\n*\n* var v = iter.next().value;\n* // returns <Date>\n*\n* v = iter.next().value;\n* // returns <Date>\n*\n* v = iter.next().value;\n* // returns <Date>\n*\n* // ...\n*/\nfunction iterDatespace( start, stop, N, options ) {\n\tvar step;\n\tvar iter;\n\tvar opts;\n\tvar rfcn;\n\tvar FLG;\n\tvar t1;\n\tvar t2;\n\tvar n;\n\tvar d;\n\tvar i;\n\n\tt1 = convert( start );\n\tif ( t1 instanceof Error ) {\n\t\tthrow t1;\n\t}\n\tt2 = convert( stop );\n\tif ( t2 instanceof Error ) {\n\t\tthrow t2;\n\t}\n\topts = {\n\t\t'round': DEFAULT_ROUNDING_MODE\n\t};\n\tif ( arguments.length === 3 ) {\n\t\tif ( isNonNegativeInteger( N ) ) {\n\t\t\tn = N;\n\t\t} else if ( isPlainObject( N ) ) {\n\t\t\tn = DEFAULT_LENGTH;\n\t\t\tif ( hasOwnProp( N, 'round' ) ) {\n\t\t\t\tif ( !contains( ROUNDING_MODES, N.round ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. Unrecognized rounding mode. Option: `%s`.', N.round ) );\n\t\t\t\t}\n\t\t\t\topts.round = N.round;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either a nonnegative integer or an options object. Value: `%s`.', N ) );\n\t\t}\n\t} else if ( arguments.length > 3 ) {\n\t\tif ( !isNonNegativeInteger( N ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t\t}\n\t\tn = N;\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'round' ) ) {\n\t\t\tif ( !contains( ROUNDING_MODES, options.round ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. Unrecognized rounding mode. Option: `%s`.', options.round ) );\n\t\t\t}\n\t\t\topts.round = options.round;\n\t\t}\n\t} else {\n\t\tn = DEFAULT_LENGTH;\n\t}\n\trfcn = ROUNDING_FCNS[ opts.round ];\n\td = n - 1;\n\tstep = (t2-t1) / d;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( i === 0 ) {\n\t\t\treturn {\n\t\t\t\t'value': new Date( t1 ),\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\tif ( i === d ) {\n\t\t\treturn {\n\t\t\t\t'value': new Date( t2 ),\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': new Date( rfcn( t1+(i*step) ) ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterDatespace( start, stop, n, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterDatespace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from './../../is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isInteger } from './../../is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive integer\n*\n* @example\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( null );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which removes consecutive duplicated values.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} [limit=1] - number of allowed consecutive duplicates\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var iter = iterDedupe( array2iterator( [ 1, 1, 2, 3, 3 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterDedupe( iterator, limit ) {\n\tvar count;\n\tvar iter;\n\tvar prev;\n\tvar FLG;\n\tvar N;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( limit ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', limit ) );\n\t\t}\n\t\tN = limit;\n\t} else {\n\t\tN = 1;\n\t}\n\tprev = NaN; // Note: we leverage the fact that `NaN` is not equal to anything, including itself, to handle initial condition\n\tcount = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( v.value === prev ) {\n\t\t\tcount += 1;\n\t\t\tif ( count > N ) {\n\t\t\t\t// Find the next \"unique\" value...\n\t\t\t\twhile ( v.value === prev ) {\n\t\t\t\t\tv = iterator.next();\n\t\t\t\t\tif ( v.done ) {\n\t\t\t\t\t\tFLG = true;\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprev = v.value;\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t} else {\n\t\t\tprev = v.value;\n\t\t\tcount = 1;\n\t\t}\n\t\treturn {\n\t\t\t'value': prev,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterDedupe( iterator[ iteratorSymbol ](), N );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterDedupe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which removes consecutive values that resolve to the same value according to a provided function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} [limit=1] - number of allowed consecutive duplicates\n* @param {Function} clbk - function which indicates whether an iterated value is a \"duplicate\"\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @throws {TypeError} `limit` argument must be a positive integer\n* @throws {TypeError} last argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* function fcn( v ) {\n*     return v;\n* }\n*\n* var iter = iterDedupeBy( array2iterator( [ 1, 1, 2, 3, 3 ] ), fcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterDedupeBy( iterator, limit, clbk ) { // eslint-disable-line no-unused-vars\n\tvar count;\n\tvar sprev; // previous source iterated value\n\tvar dprev; // previous downstream iterated value\n\tvar iter;\n\tvar acc;\n\tvar FLG;\n\tvar fcn;\n\tvar N;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tfcn = arguments[ arguments.length-1 ];\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isPositiveInteger( limit ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', limit ) );\n\t\t}\n\t\tN = limit;\n\t} else {\n\t\tN = 1;\n\t}\n\tacc = NaN; // Note: we leverage the fact that `NaN` is not equal to anything, including itself, to handle initial condition\n\tcount = 0;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar out;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\ti += 1;\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tout = fcn( v.value, sprev, dprev, i, acc );\n\t\tif ( out === acc ) {\n\t\t\tsprev = v.value;\n\t\t\tcount += 1;\n\t\t\tif ( count > N ) {\n\t\t\t\t// Find the next \"unique\" value...\n\t\t\t\twhile ( out === acc ) {\n\t\t\t\t\tv = iterator.next();\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif ( v.done ) {\n\t\t\t\t\t\tFLG = true;\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\t\t\t\t\tout = fcn( v.value, sprev, dprev, i, acc );\n\t\t\t\t\tsprev = v.value;\n\t\t\t\t}\n\t\t\t\tacc = out;\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tdprev = sprev;\n\t\t} else {\n\t\t\tsprev = v.value;\n\t\t\tdprev = sprev;\n\t\t\tacc = out;\n\t\t\tcount = 1;\n\t\t}\n\t\treturn {\n\t\t\t'value': dprev,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterDedupeBy( iterator[ iteratorSymbol ](), N, fcn );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterDedupeBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\n\n\n// MAIN //\n\n/**\n* Returns an empty iterator.\n*\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterEmpty();\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterEmpty() {\n\tvar iter;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterEmpty();\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterEmpty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether all iterated values are truthy.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {boolean} boolean indicating whether all iterated values are truthy\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 0 ] );\n*\n* var bool = iterEvery( it );\n* // returns false\n*/\nfunction iterEvery( iterator ) {\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( !v.value ) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterEvery;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether every iterated value passes a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether every iterated value passes a test implemented by a predicate function\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* function predicate( v ) {\n*     return ( v > 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 1 ] );\n*\n* var bool = iterEveryBy( it, predicate );\n* // returns true\n*/\nfunction iterEveryBy( iterator, predicate, thisArg ) {\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( !predicate.call( thisArg, v.value, i ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterEveryBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive integer.\n*\n* @module @stdlib/assert/is-positive-integer\n*\n* @example\n* import isPositiveInteger from '@stdlib/assert/is-positive-integer';\n*\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* bool = isPositiveInteger( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* import { isObject as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar BEGIN = 0;\nvar END = 1e308;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which replaces all values from a provided iterator from a start index to an end index with a static value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {*} value - static value\n* @param {NonNegativeInteger} [begin=0] - start iteration index (inclusive)\n* @param {NonNegativeInteger} [end=1e308] - end iteration index (non-inclusive)\n* @throws {Error} must provide both an iterator and a static value\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} third argument must be a nonnegative integer\n* @throws {TypeError} fourth argument must be a nonnegative integer\n* @returns {Iterator} iterator\n*\n* @example\n* import randu from '@stdlib/random/iter/randu';\n*\n* var iter = iterFill( randu(), 3.14, 0, 2 );\n*\n* var r = iter.next().value;\n* // returns 3.14\n*\n* r = iter.next().value;\n* // returns 3.14\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterFill( iterator, value, begin, end ) {\n\tvar iter;\n\tvar FLG;\n\tvar N;\n\tvar M;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isNonNegativeInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tN = begin;\n\t\tif ( arguments.length > 3 ) {\n\t\t\tif ( !isNonNegativeInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a nonnegative integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tM = end;\n\t\t} else {\n\t\t\tM = END;\n\t\t}\n\t} else if ( arguments.length < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide both an iterator and a static value.' );\n\t} else {\n\t\tN = BEGIN;\n\t\tM = END;\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', finish );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\ti = -1;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\ti += 1;\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': ( i >= N && i < M ) ? value : v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction finish( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterFill( iterator[ iteratorSymbol ](), value, N, M );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterFill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which filters a provided iterator's values according to a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* function predicate( v ) {\n*     return ( v > 2 );\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterFilter( src, predicate );\n*\n* var v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterFilter( iterator, predicate, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tif ( predicate.call( thisArg, v.value, i ) ) {\n\t\t\t\treturn {\n\t\t\t\t\t'value': v.value,\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterFilter( iterator[ iteratorSymbol ](), predicate, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterFilter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which both filters and maps a provided iterator's values.\n*\n* ## Notes\n*\n* -   If a callback function returns `undefined`, the returned iterator invokes the callback for the next iterated value; otherwise, the iterator returns the callback's return value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - callback which both filters and maps\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* function fcn( v ) {\n*     if ( v > 2 ) {\n*         return v * 10;\n*     }\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterFilterMap( src, fcn );\n*\n* var v = iter.next().value;\n* // returns 30\n*\n* v = iter.next().value;\n* // returns 40\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterFilterMap( iterator, fcn, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tv = fcn.call( thisArg, v.value, i );\n\t\t\tif ( v !== void 0 ) {\n\t\t\t\treturn {\n\t\t\t\t\t'value': v,\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterFilterMap( iterator[ iteratorSymbol ](), fcn, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterFilterMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns the first iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {*} first iterated value\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var it = array2iterator( [ 1, 0, 0, 0, 0 ] );\n*\n* var v = iterFirst( it );\n* // returns 1\n*/\nfunction iterFirst( iterator ) {\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tv = iterator.next();\n\tif ( v.done ) {\n\t\treturn;\n\t}\n\treturn v.value;\n}\n\n\n// EXPORTS //\n\nexport default iterFirst;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.keys()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\treturn Object.keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.keys !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn ( nativeClass( value ) === '[object Arguments]' );\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArguments from './main.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment returns the expected internal class of the `arguments` object.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment behaves as expected\n*\n* @example\n* var bool = detect();\n* // returns <boolean>\n*/\nfunction detect() {\n\treturn isArguments( arguments );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @private\n* @name isEnumerableProperty\n* @type {Function}\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nvar isEnumerableProperty = Object.prototype.propertyIsEnumerable;\n\n\n// EXPORTS //\n\nexport default isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnum from './native.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment has a bug where String indices are not detected as \"enumerable\" properties. Observed in Node v0.10.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment has the bug\n*/\nfunction detect() {\n\treturn !isEnum.call( 'beep', '0' );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isString from './../../is-string';\nimport { isPrimitive as isnan } from './../../is-nan';\nimport { isPrimitive as isInteger } from './../../is-integer';\nimport isEnum from './native.js';\nimport hasStringEnumBug from './has_string_enumerability_bug.js';\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nfunction isEnumerableProperty( value, property ) {\n\tvar bool;\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\tbool = isEnum.call( value, property );\n\tif ( !bool && hasStringEnumBug && isString( value ) ) {\n\t\t// Note: we only check for indices, as properties attached to a `String` object are properly detected as enumerable above.\n\t\tproperty = +property;\n\t\treturn (\n\t\t\t!isnan( property ) &&\n\t\t\tisInteger( property ) &&\n\t\t\tproperty >= 0 &&\n\t\t\tproperty < value.length\n\t\t);\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an `arguments` object.\n*\n* @module @stdlib/assert/is-arguments\n*\n* @example\n* import isArguments from '@stdlib/assert/is-arguments';\n*\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* bool = isArguments( [] );\n* // returns false\n*/\n\n// MODULES //\n\nimport hasArgumentsClass from './detect.js';\nimport main from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar isArguments;\nif ( hasArgumentsClass ) {\n\tisArguments = main;\n} else {\n\tisArguments = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from './../../has-own-property';\nimport isEnumerableProperty from './../../is-enumerable-property';\nimport isArray from './../../is-array';\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport MAX_LENGTH from '@stdlib/constants/uint32/max';\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\t!isArray( value ) &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH &&\n\t\thasOwnProp( value, 'callee' ) &&\n\t\t!isEnumerableProperty( value, 'callee' )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* @module @stdlib/constants/uint32/max\n* @type {uinteger32}\n*\n* @example\n* import UINT32_MAX from '@stdlib/constants/uint32/max';\n* // returns 4294967295\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar UINT32_MAX = 4294967295;\n\n\n// EXPORTS //\n\nexport default UINT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArguments from '@stdlib/assert/is-arguments';\nimport builtin from './builtin.js';\n\n\n// VARIABLES //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tif ( isArguments( value ) ) {\n\t\treturn builtin( slice.call( value ) );\n\t}\n\treturn builtin( value );\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @example\n* noop();\n* // ...does nothing.\n*/\nfunction noop() {\n\t// Empty function...\n}\n\n\n// EXPORTS //\n\nexport default noop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\nimport noop from './../../noop';\n\n\n// MAIN //\n\n// Note: certain environments treat an object's prototype as enumerable, which, as a matter of convention, it shouldn't be...\nvar bool = isEnumerableProperty( noop, 'prototype' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\n\n\n// VARIABLES //\n\nvar obj = {\n\t'toString': null\n};\n\n\n// MAIN //\n\n// Note: certain environments don't allow enumeration of overwritten properties which are considered non-enumerable...\nvar bool = !isEnumerableProperty( obj, 'toString' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/assert/is-nan';\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @param {ArrayLike} arr - array-like object\n* @param {*} searchElement - element to find\n* @param {integer} [fromIndex] - starting index (if negative, the start index is determined relative to last element)\n* @throws {TypeError} must provide an array-like object\n* @throws {TypeError} third argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 3 );\n* // returns 1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 5 );\n* // returns -1\n*\n* @example\n* // Using a `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, 3 );\n* // returns 5\n*\n* @example\n* // `fromIndex` which exceeds `array` length:\n* var arr = [ 1, 2, 3, 4, 2, 5 ];\n* var idx = indexOf( arr, 2, 10 );\n* // returns -1\n*\n* @example\n* // Negative `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6, 2 ];\n* var idx = indexOf( arr, 2, -4 );\n* // returns 5\n*\n* idx = indexOf( arr, 2, -1 );\n* // returns 7\n*\n* @example\n* // Negative `fromIndex` exceeding input `array` length:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, -10 );\n* // returns 1\n*\n* @example\n* // Array-like objects:\n* var str = 'bebop';\n* var idx = indexOf( str, 'o' );\n* // returns 3\n*/\nfunction indexOf( arr, searchElement, fromIndex ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( arr ) && !isString( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tlen = arr.length;\n\tif ( len === 0 ) {\n\t\treturn -1;\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= 0 ) {\n\t\t\tif ( fromIndex >= len ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\ti = fromIndex;\n\t\t} else {\n\t\t\ti = len + fromIndex;\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ti = 0;\n\t}\n\t// Check for `NaN`...\n\tif ( isnan( searchElement ) ) {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( isnan( arr[i] ) ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( arr[ i ] === searchElement ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nexport default indexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests whether a value equals the prototype of its constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction isConstructorPrototype( value ) {\n\treturn ( value.constructor && value.constructor.prototype === value );\n}\n\n\n// EXPORTS //\n\nexport default isConstructorPrototype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar w = ( typeof window === 'undefined' ) ? void 0 : window;\n\n\n// EXPORTS //\n\nexport default w;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport typeOf from './../../type-of';\nimport isConstructorPrototype from './is_constructor_prototype.js';\nimport EXCLUDED_KEYS from './excluded_keys.json';\nimport win from './window.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Determines whether an environment throws when comparing to the prototype of a value's constructor (e.g., [IE9][1]).\n*\n* [1]: https://stackoverflow.com/questions/7688070/why-is-comparing-the-constructor-property-of-two-windows-unreliable\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment is buggy\n*/\nfunction check() {\n\tvar k;\n\tif ( typeOf( win ) === 'undefined' ) {\n\t\treturn false;\n\t}\n\tfor ( k in win ) { // eslint-disable-line guard-for-in\n\t\ttry {\n\t\t\tif (\n\t\t\t\tindexOf( EXCLUDED_KEYS, k ) === -1 &&\n\t\t\t\thasOwnProp( win, k ) &&\n\t\t\t\twin[ k ] !== null &&\n\t\t\t\ttypeOf( win[ k ] ) === 'object'\n\t\t\t) {\n\t\t\t\tisConstructorPrototype( win[ k ] );\n\t\t\t}\n\t\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\nbool = check();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof window !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasArgumentsBug from './has_arguments_bug.js';\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport wrapper from './builtin_wrapper.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @name keys\n* @type {Function}\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nvar keys;\nif ( HAS_BUILTIN ) {\n\tif ( hasArgumentsBug() ) {\n\t\tkeys = wrapper;\n\t} else {\n\t\tkeys = builtin;\n\t}\n} else {\n\tkeys = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport keys from './builtin.js';\n\n\n// FUNCTIONS //\n\n/**\n* Tests the built-in `Object.keys()` implementation when provided `arguments`.\n*\n* @private\n* @returns {boolean} boolean indicating whether the built-in implementation returns the expected number of keys\n*/\nfunction test() {\n\treturn ( keys( arguments ) || '' ).length !== 2;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether the built-in `Object.keys()` implementation supports providing `arguments` as an input value.\n*\n* ## Notes\n*\n* -   Safari 5.0 does **not** support `arguments` as an input value.\n*\n* @private\n* @returns {boolean} boolean indicating whether a built-in implementation supports `arguments`\n*/\nfunction check() {\n\treturn test( 1, 2 );\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isArguments from '@stdlib/assert/is-arguments';\nimport HAS_ENUM_PROTO_BUG from './has_enumerable_prototype_bug.js';\nimport HAS_NON_ENUM_PROPS_BUG from './has_non_enumerable_properties_bug.js';\nimport isConstructorPrototype from './is_constructor_prototype_wrapper.js';\nimport NON_ENUMERABLE from './non_enumerable.json';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tvar skipConstructor;\n\tvar skipPrototype;\n\tvar isFcn;\n\tvar out;\n\tvar k;\n\tvar p;\n\tvar i;\n\n\tout = [];\n\tif ( isArguments( value ) ) {\n\t\t// Account for environments which treat `arguments` differently...\n\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\tout.push( i.toString() );\n\t\t}\n\t\t// Note: yes, we are precluding the `arguments` array-like object from having other enumerable properties; however, this should (1) be very rare and (2) not be encouraged (e.g., doing something like `arguments.a = 'b'`; in certain engines directly manipulating the `arguments` value results in automatic de-optimization).\n\t\treturn out;\n\t}\n\tif ( typeof value === 'string' ) {\n\t\t// Account for environments which do not treat string character indices as \"own\" properties...\n\t\tif ( value.length > 0 && !hasOwnProp( value, '0' ) ) {\n\t\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\t\tout.push( i.toString() );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tisFcn = ( typeof value === 'function' );\n\t\tif ( isFcn === false && !isObjectLike( value ) ) {\n\t\t\treturn out;\n\t\t}\n\t\tskipPrototype = ( HAS_ENUM_PROTO_BUG && isFcn );\n\t}\n\tfor ( k in value ) {\n\t\tif ( !( skipPrototype && k === 'prototype' ) && hasOwnProp( value, k ) ) {\n\t\t\tout.push( String( k ) );\n\t\t}\n\t}\n\tif ( HAS_NON_ENUM_PROPS_BUG ) {\n\t\tskipConstructor = isConstructorPrototype( value );\n\t\tfor ( i = 0; i < NON_ENUMERABLE.length; i++ ) {\n\t\t\tp = NON_ENUMERABLE[ i ];\n\t\t\tif ( !( skipConstructor && p === 'constructor' ) && hasOwnProp( value, p ) ) {\n\t\t\t\tout.push( String( p ) );\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasAutomationEqualityBug from './has_automation_equality_bug.js';\nimport isConstructorPrototype from './is_constructor_prototype.js';\nimport HAS_WINDOW from './has_window.js';\n\n\n// MAIN //\n\n/**\n* Wraps the test for constructor prototype equality to accommodate buggy environments (e.g., environments which throw when testing equality).\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction wrapper( value ) {\n\tif ( HAS_WINDOW === false && !hasAutomationEqualityBug ) {\n\t\treturn isConstructorPrototype( value );\n\t}\n\ttry {\n\t\treturn isConstructorPrototype( value );\n\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrapper;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this, no-restricted-syntax */\n\n'use strict';\n\n// MODULES //\n\nimport setNonEnumerableReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setNonEnumerable from '@stdlib/utils/define-nonenumerable-property';\nimport isObject from '@stdlib/assert/is-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport objectKeys from '@stdlib/utils/keys';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a constructor for creating a fluent interface for chaining together iterator methods.\n*\n* ## Notes\n*\n* -   We assume that each provided iterator function has the following function signature:\n*\n*     ```text\n*     function iterFcn( iterator[, ...args] ) {...}\n*     ```\n*\n*     where `iterator` is an input iterator and `args` are additional iterator function arguments (if any).\n*\n* @param {Object} methods - an object mapping method names to iterator functions\n* @throws {TypeError} must provide an object\n* @throws {TypeError} object property values must be functions\n* @returns {Function} constructor\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n* import iterHead from '@stdlib/iter/head';\n* import iterSome from '@stdlib/iter/some';\n*\n* // Create a \"fluent\" interface:\n* var FluentIterator = iterFlow({\n*     'head': iterHead,\n*     'some': iterSome\n* });\n*\n* // Create a source iterator:\n* var arr = array2iterator( [ 0, 0, 1, 1, 1, 0, 0, 1, 0, 1 ] );\n*\n* // Create a new iterator:\n* var it = new FluentIterator( arr );\n*\n* var bool = it.head( 5 ).some( 3 );\n* // returns true\n*\n* // Create another source iterator:\n* arr = array2iterator( [ 0, 0, 1, 0, 1, 0, 0, 1, 0, 1 ] );\n*\n* // Create a new iterator:\n* it = new FluentIterator( arr );\n*\n* bool = it.head( 5 ).some( 3 );\n* // returns false\n*/\nfunction iterFlow( methods ) {\n\tvar keys;\n\tvar k;\n\tvar f;\n\tvar i;\n\tif ( !isObject( methods ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', methods ) );\n\t}\n\t/**\n\t* Fluent interface iterator constructor.\n\t*\n\t* @private\n\t* @constructor\n\t* @param {Iterator} iterator - source iterator\n\t* @throws {TypeError} must provide an iterator\n\t* @returns {FluentIterator} a \"fluent\" iterator\n\t*/\n\tfunction FluentIterator( iterator ) {\n\t\tif ( !( this instanceof FluentIterator ) ) {\n\t\t\treturn new FluentIterator( iterator );\n\t\t}\n\t\tif ( !isIteratorLike( iterator ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t\t}\n\t\tsetNonEnumerableReadOnly( this, '_source', iterator );\n\t\tsetNonEnumerable( this, '_done', false );\n\t\treturn this;\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @throws {TypeError} `this` must be a fluent interface iterator\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tsetNonEnumerableReadOnly( FluentIterator.prototype, 'next', function next() {\n\t\tif ( !(this instanceof FluentIterator) ) {\n\t\t\tthrow new TypeError( 'invalid invocation. `this` is not a fluent interface iterator.' );\n\t\t}\n\t\tif ( this._done ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn this._source.next();\n\t});\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @throws {TypeError} `this` must be a fluent interface iterator\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tsetNonEnumerableReadOnly( FluentIterator.prototype, 'return', function finish( value ) {\n\t\tif ( !(this instanceof FluentIterator) ) {\n\t\t\tthrow new TypeError( 'invalid invocation. `this` is not a fluent interface iterator.' );\n\t\t}\n\t\tthis._done = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t});\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\t/**\n\t\t* Returns the current iterator.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   This method allows the iterator to be iterable and thus able to be consumed, e.g., in `for..of` loops.\n\t\t*\n\t\t* @private\n\t\t* @returns {Iterator} iterator\n\t\t*/\n\t\tsetNonEnumerableReadOnly( FluentIterator.prototype, iteratorSymbol, function factory() { // eslint-disable-line max-len\n\t\t\treturn this;\n\t\t});\n\t}\n\n\t/**\n\t* Wraps an iterator function as a fluent interface method.\n\t*\n\t* @private\n\t* @param {Function} iterFcn - iterator function\n\t* @returns {Function} method wrapper\n\t*/\n\tfunction createMethod( iterFcn ) {\n\t\treturn method;\n\n\t\t/**\n\t\t* Iterator function wrapper.\n\t\t*\n\t\t* @private\n\t\t* @param {...*} [args] - method arguments\n\t\t* @throws {TypeError} `this` must be a fluent interface iterator\n\t\t* @returns {Iterator} iterator\n\t\t*/\n\t\tfunction method() {\n\t\t\tvar args;\n\t\t\tvar out;\n\t\t\tvar i;\n\n\t\t\tif ( !(this instanceof FluentIterator) ) {\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not a fluent interface iterator.' );\n\t\t\t}\n\t\t\targs = [ this._source ];\n\t\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\t\targs.push( arguments[ i ] );\n\t\t\t}\n\t\t\tout = iterFcn.apply( null, args );\n\n\t\t\t// If the iterator function returns an iterator, in order to support subsequent chaining, we need to create a new fluent interface instance...\n\t\t\tif ( isIteratorLike( out ) ) {\n\t\t\t\treturn new FluentIterator( out );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t}\n\n\t// Bind the provided iterator functions to the constructor prototype...\n\tkeys = objectKeys( methods );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tk = keys[ i ];\n\t\tf = methods[ k ];\n\t\tif ( !isFunction( f ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Object property values must be functions. Key: `%s`. Value: `%s`.', k, f ) );\n\t\t}\n\t\tsetNonEnumerableReadOnly( FluentIterator.prototype, k, createMethod( f ) ); // eslint-disable-line max-len\n\t}\n\n\treturn FluentIterator;\n}\n\n\n// EXPORTS //\n\nexport default iterFlow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* import objectKeys from '@stdlib/utils/keys';\n*\n* var obj = {};\n*\n* setNonEnumerableProperty( obj, 'foo', 'bar' );\n*\n* var v = obj.foo;\n* // returns 'bar'\n*\n* var keys = objectKeys( obj );\n* // returns []\n*/\nfunction setNonEnumerableProperty( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which invokes a function for each iterated value before returning the iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* import randu from '@stdlib/random/iter/randu';\n* import isnan from '@stdlib/math/base/assert/is-nan';\n*\n* function assert( v ) {\n*     if ( isnan( v ) ) {\n*         throw new Error( 'should not be NaN' );\n*     }\n* }\n*\n* var iter = iterForEach( randu(), assert );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterForEach( iterator, fcn, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tv = v.value;\n\t\tfcn.call( thisArg, v, i );\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterForEach( iterator[ iteratorSymbol ](), fcn, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterForEach;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns the first `n` values of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - number of values\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* import randu from '@stdlib/random/iter/randu';\n*\n* var iter = iterHead( randu(), 10 );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterHead( iterator, n ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i > n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterHead( iterator[ iteratorSymbol ](), n );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterHead;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport ceil from '@stdlib/math/base/special/ceil';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar DEFAULT_INCREMENT = 1;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns evenly spaced numbers according to a specified increment.\n*\n* @param {number} start - starting value (inclusive)\n* @param {number} stop - stopping value (exclusive)\n* @param {number} [increment=1] - increment\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a number\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterIncrspace( 0, 100, 2 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* // ...\n*/\nfunction iterIncrspace( start, stop, increment ) {\n\tvar iter;\n\tvar incr;\n\tvar FLG;\n\tvar N;\n\tvar i;\n\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( !isNumber( stop ) || isnan( stop ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', stop ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isNumber( increment ) || isnan( increment ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a number. Value: `%s`.', increment ) );\n\t\t}\n\t\tincr = increment;\n\t} else {\n\t\tincr = DEFAULT_INCREMENT;\n\t}\n\tN = ceil( (stop-start)/incr );\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= N ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': start + (i*incr),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterIncrspace( start, stop, incr );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterIncrspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnlyAccessor( obj, prop, getter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* List node constructor.\n*\n* @private\n* @constructor\n* @param {*} value - node value\n* @returns {Node} Node instance\n*\n* @example\n* var node = new Node( 'foo' );\n* // returns <Node>\n*/\nfunction Node( value ) { // eslint-disable-line stdlib/no-redeclare\n\t// Why a getter? Because some of the list APIs will return the list \"node\", not the value. In which case, the node API is no longer private and we have to guard against users mucking about (deleting, updating, etc) with property values (in particular, the `next` property).\n\tdefineProperty( this, 'next', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() { // eslint-disable-line no-restricted-syntax\n\t\t\treturn this._next;\n\t\t}\n\t});\n\tthis.value = value;\n\n\tdefineProperty( this, '_next', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': null\n\t});\n\n\t// NOTE: strictly speaking, we should not be keeping back-references in a singly-linked list; however, doing so allows us to more efficiently add, remove, and insert list values.\n\tdefineProperty( this, '_prev', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': null\n\t});\n\n\treturn this;\n}\n\n\n// EXPORTS //\n\nexport default Node;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from './../../define-nonenumerable-read-only-accessor';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport Node from './node.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Linked list constructor.\n*\n* @constructor\n* @returns {LinkedList} linked list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the first value:\n* v = list.shift();\n* // returns 'foo'\n*/\nfunction LinkedList() {\n\tif ( !(this instanceof LinkedList) ) {\n\t\treturn new LinkedList();\n\t}\n\tthis._length = 0;\n\tthis._first = null;\n\tthis._last = null;\n\treturn this;\n}\n\n/**\n* Clears the list.\n*\n* @name clear\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the first value:\n* var v = list.first().value;\n* // returns 'foo'\n*\n* // Examine the list length:\n* var len = list.length;\n* // returns 2\n*\n* // Clear all list items:\n* list.clear();\n*\n* // Peek at the first value:\n* v = list.first();\n* // returns undefined\n*\n* // Examine the list length:\n* len = list.length;\n* // returns 0\n*/\nsetReadOnly( LinkedList.prototype, 'clear', function clear() {\n\tthis._length = 0;\n\tthis._first = null;\n\tthis._last = null;\n\treturn this;\n});\n\n/**\n* Returns the first list node.\n*\n* @name first\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(Node|void)} list node\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the first value:\n* var v = list.first().value;\n* // returns 'foo'\n*/\nsetReadOnly( LinkedList.prototype, 'first', function first() {\n\tif ( this._length ) {\n\t\treturn this._first;\n\t}\n});\n\n/**\n* Inserts a value into the list **after** a provided list node.\n*\n* @name insert\n* @memberof LinkedList.prototype\n* @type {Function}\n* @param {Node} node - node after which to insert the value\n* @param {*} value - value to insert\n* @throws {Error} must provide a node belonging to the list\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' ).push( 'beep' );\n*\n* // Determine the list length:\n* var len = list.length;\n* // returns 3\n*\n* // Get the second node:\n* var node = list.first().next;\n*\n* // Insert a value after the second node:\n* list.insert( node, 'boop' );\n*\n* // Determine the list length:\n* len = list.length;\n* // returns 4\n*/\nsetReadOnly( LinkedList.prototype, 'insert', function insert( node, value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar n;\n\n\t// Case: last node (equivalent to `push()`)\n\tif ( node === this._last ) {\n\t\treturn this.push( value );\n\t}\n\t// Unfortunately, we need to check whether we have been provided a node belonging to our list by walking the list. If we don't, we could erroneously increment the list length. This means our runtime goes from the theoretical O(1) to O(N).\n\tn = this._first;\n\twhile ( n !== this._last && n !== node ) {\n\t\tn = n._next;\n\t}\n\t// Check if we iterated through the entire list:\n\tif ( n === this._last ) {\n\t\tthrow new Error( 'invalid argument. The list does not contain the provided list node.' );\n\t}\n\t// Create a new list node:\n\tn = new Node( value );\n\n\t// Update pointers:\n\tnode._next._prev = n;\n\tn._next = node._next;\n\n\tnode._next = n;\n\tn._prev = node;\n\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Returns an iterator for iterating over a list.\n*\n* ## Notes\n*\n* -   In order to prevent confusion arising from list mutation during iteration, a returned iterator **always** iterates over a list \"snapshot\", which is defined as the list of elements at the time of this method's invocation.\n*\n* @name iterator\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {Iterator} iterator\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Create an iterator:\n* var it = list.iterator();\n*\n* // Iterate over the list...\n* var v = it.next().value;\n* // returns 'foo'\n*\n* v = it.next().value;\n* // returns 'bar'\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( LinkedList.prototype, 'iterator', function iterator() {\n\tvar values;\n\tvar iter;\n\tvar self;\n\tvar FLG;\n\tvar i;\n\n\tself = this;\n\n\t// Initialize the iteration index:\n\ti = -1;\n\n\t// Create a copy of list values (necessary in order to \"snapshot\" the list; otherwise, values could come and go between calls to `next`):\n\tvalues = this.toArray();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= values.length ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': values[ i ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.iterator();\n\t}\n});\n\n/**\n* Returns the last node.\n*\n* @name last\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(Node|void)} list node\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the last value:\n* var v = list.last().value;\n* // returns 'bar'\n*/\nsetReadOnly( LinkedList.prototype, 'last', function last() {\n\tif ( this._length ) {\n\t\treturn this._last;\n\t}\n});\n\n/**\n* List length.\n*\n* @name length\n* @memberof LinkedList.prototype\n* @type {NonNegativeInteger}\n*\n* @example\n* var list = new LinkedList();\n*\n* // Examine the initial list length:\n* var len = list.length;\n* // returns 0\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Retrieve the current list length:\n* len = list.length;\n* // returns 2\n*/\nsetReadOnlyAccessor( LinkedList.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Removes a value from the end of the list.\n*\n* @name pop\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'beep'\n*/\nsetReadOnly( LinkedList.prototype, 'pop', function pop() {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tif ( this._length ) {\n\t\t// Retrieve the last value:\n\t\tvalue = this._last.value;\n\n\t\t// Check whether we have a new \"tail\" or whether we have emptied the list...\n\t\tif ( this._last._prev ) {\n\t\t\tthis._last = this._last._prev;\n\t\t\tthis._last._next = null;\n\t\t} else {\n\t\t\t// List is empty:\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t}\n\t\t// Decrement the list length:\n\t\tthis._length -= 1;\n\t}\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Adds a value to the end of the list.\n*\n* @name push\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'beep'\n*/\nsetReadOnly( LinkedList.prototype, 'push', function push( value ) {\n\tvar node;\n\n\t// Create a new list node:\n\tnode = new Node( value );\n\n\t// Check whether the list is currently empty...\n\tif ( this._length === 0 ) {\n\t\t// This is the only list node, making it both the first and last node:\n\t\tthis._first = node;\n\t\tthis._last = node;\n\t} else {\n\t\t// Link the new node to the previous last node:\n\t\tnode._prev = this._last; // eslint-disable-line no-underscore-dangle\n\n\t\t// Link the previous last node to the new node:\n\t\tthis._last._next = node; // eslint-disable-line no-underscore-dangle\n\n\t\t// Update the pointer for the last node:\n\t\tthis._last = node;\n\t}\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n});\n\n/**\n* Removes a list node from the list.\n*\n* @name remove\n* @memberof LinkedList.prototype\n* @type {Function}\n* @param {Node} node - node to remove\n* @throws {Error} must provide a node belonging to the list\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' ).push( 'beep' );\n*\n* // Determine the list length:\n* var len = list.length;\n* // returns 3\n*\n* // Get the second node:\n* var node = list.first().next;\n*\n* // Remove the second node:\n* var v = list.remove( node );\n* // returns 'bar'\n*\n* // Determine the list length:\n* len = list.length;\n* // returns 2\n*/\nsetReadOnly( LinkedList.prototype, 'remove', function remove( node ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tvar n;\n\n\t// Case: first node (equivalent to `shift()`)\n\tif ( node === this._first ) {\n\t\treturn this.shift();\n\t}\n\t// Case: last node (equivalent to `pop()`)\n\tif ( node === this._last ) {\n\t\treturn this.pop();\n\t}\n\t// Retrieve the node value:\n\tvalue = node.value;\n\n\t// Unfortunately, we need to check whether we have been provided a node belonging to our list by walking the list. If we don't, we could erroneously decrement the list length. This means our runtime goes from the theoretical O(1) to O(N).\n\tn = this._first;\n\twhile ( n !== this._last && n !== node ) {\n\t\tn = n._next;\n\t}\n\t// Check if we iterated through the entire list:\n\tif ( n === this._last ) {\n\t\tthrow new Error( 'invalid argument. The list does not contain the provided list node.' );\n\t}\n\t// Update pointers:\n\tnode._prev._next = node._next;\n\tnode._next._prev = node._prev;\n\n\t// Decrement the list length:\n\tthis._length -= 1;\n\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Removes a value from the beginning of the list.\n*\n* @name shift\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the first value:\n* var v = list.shift();\n* // returns 'foo'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the first value:\n* v = list.shift();\n* // returns 'bar'\n*/\nsetReadOnly( LinkedList.prototype, 'shift', function shift() {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tif ( this._length ) {\n\t\t// Retrieve the first value:\n\t\tvalue = this._first.value;\n\n\t\t// Check whether we have a new \"head\" or whether we have emptied the list...\n\t\tif ( this._first._next ) {\n\t\t\tthis._first = this._first._next;\n\t\t\tthis._first._prev = null;\n\t\t} else {\n\t\t\t// List is empty:\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t}\n\t\t// Decrement the list length:\n\t\tthis._length -= 1;\n\t}\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Returns an array of list values.\n*\n* @name toArray\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {Array} list values\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Get an array of list values:\n* var vals = list.toArray();\n* // returns [ 'foo', 'bar' ]\n*/\nsetReadOnly( LinkedList.prototype, 'toArray', function toArray() {\n\tvar node;\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tnode = this._first;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( node.value );\n\t\tnode = node.next;\n\t}\n\treturn out;\n});\n\n/**\n* Serializes a list as JSON.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `LinkedList` instance.\n*\n* @name toJSON\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {Object} serialized list\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Serialize to JSON:\n* var o = list.toJSON();\n* // returns { 'type': 'linked-list', 'data': [ 'foo', 'bar' ] }\n*/\nsetReadOnly( LinkedList.prototype, 'toJSON', function toJSON() {\n\tvar out = {};\n\tout.type = 'linked-list';\n\tout.data = this.toArray();\n\treturn out;\n});\n\n/**\n* Adds a value to the beginning of the list.\n*\n* @name unshift\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the beginning of the list:\n* list.unshift( 'foo' ).unshift( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'foo'\n*\n* // Add a new value to the beginning of the list:\n* list.unshift( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'bar'\n*/\nsetReadOnly( LinkedList.prototype, 'unshift', function unshift( value ) {\n\tvar node;\n\n\t// Create a new list node:\n\tnode = new Node( value );\n\n\t// Check whether the list is currently empty...\n\tif ( this._length === 0 ) {\n\t\t// This is the only list node, making it both the first and last node:\n\t\tthis._first = node;\n\t\tthis._last = node;\n\t} else {\n\t\t// Link the new node to the previous first node:\n\t\tnode._next = this._first; // eslint-disable-line no-underscore-dangle\n\n\t\t// Link the previous first node to the new node:\n\t\tthis._first._prev = node; // eslint-disable-line no-underscore-dangle\n\n\t\t// Update the pointer for the first node:\n\t\tthis._first = node;\n\t}\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n});\n\n\n// EXPORTS //\n\nexport default LinkedList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport LinkedList from '@stdlib/utils/linked-list';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Finds a node in a linked list hash based on a provided value.\n*\n* @private\n* @param {LinkedList} hash - linked list hash\n* @param {*} v - value to find\n* @returns {(Node|null)} hash node or null\n*/\nfunction getNode( hash, v ) {\n\tvar node = hash.first();\n\twhile ( node ) {\n\t\t// Each node value should be a two-element array: [ value, count ]\n\t\tif ( node.value[ 0 ] === v ) {\n\t\t\treturn node;\n\t\t}\n\t\tnode = node.next;\n\t}\n\treturn null;\n}\n\n/**\n* Cleans a hash by removing nodes having counts below a provided threshold.\n*\n* @private\n* @param {LinkedList} hash - input hash\n* @param {PositiveInteger} threshold - count threshold\n* @returns {LinkedList} input hash\n*/\nfunction clean( hash, threshold ) {\n\tvar node = hash.first();\n\twhile ( node ) {\n\t\tif ( node.value[ 1 ] < threshold ) {\n\t\t\thash.remove( node );\n\t\t}\n\t\tnode = node.next;\n\t}\n\treturn hash;\n}\n\n/**\n* Finds the intersection of two or more iterators.\n*\n* @private\n* @param {Array<Iterator>} iterators - list of iterators\n* @returns {LinkedList} a linked list containing the intersection\n*/\nfunction intersection( iterators ) {\n\tvar hash;\n\tvar it;\n\tvar v;\n\tvar n;\n\tvar j;\n\n\t// Create a new linked list for storing the intersection:\n\thash = new LinkedList();\n\n\t// Find the intersection by first finding the unique values in the first iterator...\n\tit = iterators[ 0 ];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\t// Determine if we have seen this value before...\n\t\tn = getNode( hash, v.value );\n\t\tif ( n === null ) {\n\t\t\t// First time we have seen this value, so add to our unique value hash:\n\t\t\thash.push( [ v.value, 1 ] );\n\t\t}\n\t}\n\t// Check whether we found any unique values:\n\tif ( hash.length === 0 ) {\n\t\treturn hash;\n\t}\n\t// Now that we have found an initial set of unique values, we need to consume each subsequent iterator, updating the count indicating how many iterators have contained an iterated value and removing any values from our initial set which were not present in *all* iterators...\n\tfor ( j = 1; j < iterators.length; j++ ) {\n\t\tit = iterators[ j ];\n\t\twhile ( true ) {\n\t\t\tv = it.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tn = getNode( hash, v.value );\n\t\t\tif ( n && n.value[ 1 ] === j ) {\n\t\t\t\t// Only increment a value's counter the first time we see the value per iterator...\n\t\t\t\tn.value[ 1 ] += 1;\n\t\t\t}\n\t\t}\n\t\t// Upon consuming an iterator, we need to remove any hash values whose count is less than the number of iterators seen thus far:\n\t\tclean( hash, j+1 );\n\n\t\t// Check whether we still have any unique values:\n\t\tif ( hash.length === 0 ) {\n\t\t\treturn hash;\n\t\t}\n\t\t// Move on to the next iterator...\n\t}\n\treturn hash;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns the intersection of two or more iterators.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterIntersection( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterIntersection() {\n\tvar iterators;\n\tvar iterator;\n\tvar niter;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide two or more iterators.' );\n\t}\n\titerators = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\tif ( !isIteratorLike( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\titerators.push( arguments[ i ] );\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\tFLG = false;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* ## Notes\n\t*\n\t* -   The first time `next` is called, we must consume all source values in order to find the intersection (i.e., we \"lazily\" find the intersection, thus resulting in an upfront cost which is amortized over subsequent `next` calls).\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar hash;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\t// Check if this is the first time `next` has been called...\n\t\tif ( iterator === void 0 ) {\n\t\t\thash = intersection( iterators );\n\t\t\tif ( hash.length === 0 ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn {\n\t\t\t\t\t'done': true\n\t\t\t\t};\n\t\t\t}\n\t\t\titerator = hash.iterator();\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value[ 0 ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\treturn iterIntersection.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterIntersection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport LinkedList from '@stdlib/utils/linked-list';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Finds a node in a linked list hash based on a provided hash.\n*\n* @private\n* @param {LinkedList} hash - linked list hash\n* @param {*} v - hash to find\n* @returns {(Node|null)} hash node or null\n*/\nfunction getNode( hash, v ) {\n\tvar node = hash.first();\n\twhile ( node ) {\n\t\t// Each node value should be a three-element array: [ hash, value, count ]\n\t\tif ( node.value[ 0 ] === v ) {\n\t\t\treturn node;\n\t\t}\n\t\tnode = node.next;\n\t}\n\treturn null;\n}\n\n/**\n* Cleans a hash by removing nodes having counts below a provided threshold.\n*\n* @private\n* @param {LinkedList} hash - input hash\n* @param {PositiveInteger} threshold - count threshold\n* @returns {LinkedList} input hash\n*/\nfunction clean( hash, threshold ) {\n\tvar node = hash.first();\n\twhile ( node ) {\n\t\tif ( node.value[ 2 ] < threshold ) {\n\t\t\thash.remove( node );\n\t\t}\n\t\tnode = node.next;\n\t}\n\treturn hash;\n}\n\n/**\n* Finds the intersection of two or more iterators according to a hash function.\n*\n* @private\n* @param {Array<Iterator>} iterators - list of iterators\n* @param {Function} hashFcn - hash function\n* @param {*} thisArg - execution context\n* @returns {LinkedList} a linked list containing the intersection\n*/\nfunction intersection( iterators, hashFcn, thisArg ) {\n\tvar hash;\n\tvar it;\n\tvar hv;\n\tvar v;\n\tvar n;\n\tvar j;\n\n\t// Create a new linked list for storing the intersection:\n\thash = new LinkedList();\n\n\t// Find the intersection by first finding the unique values in the first iterator...\n\tit = iterators[ 0 ];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\thv = hashFcn.call( thisArg, v.value );\n\n\t\t// Determine if we have seen this hash before...\n\t\tn = getNode( hash, hv );\n\t\tif ( n === null ) {\n\t\t\t// First time we have seen this hash, so add to our set of hashes:\n\t\t\thash.push( [ hv, v.value, 1 ] );\n\t\t}\n\t}\n\t// Check whether we found any unique hashes:\n\tif ( hash.length === 0 ) {\n\t\treturn hash;\n\t}\n\t// Now that we have found an initial set of unique hashes, we need to consume each subsequent iterator, updating the count indicating how many iterators have contained an iterated value mapping to a given hash and removing any hashes from our initial set which were not found in *all* iterators...\n\tfor ( j = 1; j < iterators.length; j++ ) {\n\t\tit = iterators[ j ];\n\t\twhile ( true ) {\n\t\t\tv = it.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\thv = hashFcn.call( thisArg, v.value );\n\t\t\tn = getNode( hash, hv );\n\t\t\tif ( n && n.value[ 2 ] === j ) {\n\t\t\t\t// Only increment a hash's counter the first time we see the hash per iterator...\n\t\t\t\tn.value[ 2 ] += 1;\n\t\t\t}\n\t\t}\n\t\t// Upon consuming an iterator, we need to remove any hashes whose count is less than the number of iterators seen thus far:\n\t\tclean( hash, j+1 );\n\n\t\t// Check whether we still have any unique hashes:\n\t\tif ( hash.length === 0 ) {\n\t\t\treturn hash;\n\t\t}\n\t\t// Move on to the next iterator...\n\t}\n\treturn hash;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns the intersection of two or more iterators according to a hash function.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @param {Function} hashFcn - hash function\n* @param {*} [thisArg] - execution context\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @throws {TypeError} must provide a hash function\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* function hashFcn( v ) {\n*     return v.toString();\n* }\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterIntersectionByHash( it1, it2, hashFcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterIntersectionByHash() {\n\tvar iterators;\n\tvar iterator;\n\tvar hashFcn;\n\tvar thisArg;\n\tvar niter;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\titerators = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\tif ( isIteratorLike( arguments[ i ] ) ) {\n\t\t\titerators.push( arguments[ i ] );\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\tniter = iterators.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide two or more iterators.' );\n\t}\n\tif ( niter === arguments.length ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide a hash function.' );\n\t}\n\tif ( arguments.length > niter+2 ) {\n\t\t// Addresses the case: fcn( it, it, null, it, it, hashFcn )\n\t\tthrow new TypeError( 'invalid argument. Iterator arguments must be iterator protocol-compliant objects.' );\n\t}\n\thashFcn = arguments[ i ];\n\tif ( !isFunction( hashFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Hash function argument must be a function. Value: `%s`.', hashFcn ) );\n\t}\n\tthisArg = arguments[ i+1 ];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\tFLG = false;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* ## Notes\n\t*\n\t* -   The first time `next` is called, we must consume all source values in order to find the intersection (i.e., we \"lazily\" find the intersection, thus resulting in an upfront cost which is amortized over subsequent `next` calls).\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar hash;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\t// Check if this is the first time `next` has been called...\n\t\tif ( iterator === void 0 ) {\n\t\t\thash = intersection( iterators, hashFcn, thisArg );\n\t\t\tif ( hash.length === 0 ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn {\n\t\t\t\t\t'done': true\n\t\t\t\t};\n\t\t\t}\n\t\t\titerator = hash.iterator();\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value[ 1 ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\targs.push( hashFcn );\n\t\targs.push( thisArg );\n\t\treturn iterIntersectionByHash.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterIntersectionByHash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Consumes an iterator and returns the last iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {*} last iterated value\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var v = iterLast( it );\n* // returns 1\n*/\nfunction iterLast( iterator ) {\n\tvar last;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn last;\n\t\t}\n\t\tlast = v.value;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterLast;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Consumes an iterator and returns the number of iterated values (i.e., the iterator length).\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {NonNegativeInteger} iterator length\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var v = iterLength( it );\n* // returns 5\n*/\nfunction iterLength( iterator ) {\n\tvar count;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tcount = 0;\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn count;\n\t\t}\n\t\tcount += 1;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterLength;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns evenly spaced numbers over a specified interval.\n*\n* @param {number} start - starting value (inclusive)\n* @param {number} stop - stopping value (inclusive)\n* @param {NonNegativeInteger} [N=100] - number of values\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a nonnegative integer\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterLinspace( 0, 99, 100 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\nfunction iterLinspace( start, stop, N ) {\n\tvar delta;\n\tvar step;\n\tvar iter;\n\tvar FLG;\n\tvar n;\n\tvar d;\n\tvar i;\n\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( !isNumber( stop ) || isnan( stop ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', stop ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isNonNegativeInteger( N ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t\t}\n\t\tn = N;\n\t} else {\n\t\tn = 100;\n\t}\n\tdelta = stop - start;\n\td = n - 1;\n\tstep = delta / d;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* ## Notes\n\t*\n\t* -   Provides specialized support for denormalized numbers by switching the order of multiplication and division operations (see <https://github.com/numpy/numpy/issues/5437>).\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i >= n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( i === 0 ) {\n\t\t\treturn {\n\t\t\t\t'value': start,\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\tif ( i === d ) {\n\t\t\treturn {\n\t\t\t\t'value': stop,\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\t// Provide support for when the `step` has underflowed (e.g., when wanting to create linearly spaced denormalized numbers)...\n\t\tif ( step === 0.0 ) {\n\t\t\tv = ((i/d)*delta) + start;\n\t\t} else {\n\t\t\tv = (i*step) + start;\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterLinspace( start, stop, n );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterLinspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from './../../is-number';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive value\n*\n* @example\n* var bool = isPositiveNumber( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isNumber } from './../../is-number';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive value\n*\n* @example\n* var bool = isPositiveNumber( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive number\n*\n* @example\n* var bool = isPositiveNumber( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveNumber( null );\n* // returns false\n*/\nfunction isPositiveNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from './../../../../base/assert/is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a finite numeric value is an even number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an even number\n*\n* @example\n* var bool = isEven( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isEven( -2.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( NaN );\n* // returns false\n*/\nfunction isEven( x ) {\n\treturn isInteger( x/2.0 );\n}\n\n\n// EXPORTS //\n\nexport default isEven;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEven from './../../../../base/assert/is-even';\n\n\n// MAIN //\n\n/**\n* Tests if a finite numeric value is an odd number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an odd number\n*\n* @example\n* var bool = isOdd( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isOdd( -2.0 );\n* // returns false\n*\n* @example\n* var bool = isOdd( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isOdd( NaN );\n* // returns false\n*/\nfunction isOdd( x ) {\n\t// Check sign to prevent overflow...\n\tif ( x > 0.0 ) {\n\t\treturn isEven( x-1.0 );\n\t}\n\treturn isEven( x+1.0 );\n}\n\n\n// EXPORTS //\n\nexport default isOdd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\n\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is infinite.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is infinite\n*\n* @example\n* var bool = isInfinite( Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( -Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isInfinite( NaN );\n* // returns false\n*/\nfunction isInfinite( x ) {\n\treturn (x === PINF || x === NINF);\n}\n\n\n// EXPORTS //\n\nexport default isInfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive number.\n*\n* @module @stdlib/assert/is-positive-number\n*\n* @example\n* import isPositiveNumber from '@stdlib/assert/is-positive-number';\n*\n* var bool = isPositiveNumber( 5.0 );\n* // returns true\n*\n* bool = isPositiveNumber( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveNumber( 3.14 );\n* // returns true\n*\n* bool = isPositiveNumber( -5.0 );\n* // returns false\n*\n* bool = isPositiveNumber( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isPositiveNumber } from '@stdlib/assert/is-positive-number';\n*\n* var bool = isPositiveNumber( 3.0 );\n* // returns true\n*\n* bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* import { isObject as isPositiveNumber } from '@stdlib/assert/is-positive-number';\n*\n* var bool = isPositiveNumber( 3.0 );\n* // returns false\n*\n* bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Compute the principal square root of a double-precision floating-point number.\n*\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} principal square root\n*\n* @example\n* var v = sqrt( 4.0 );\n* // returns 2.0\n*\n* v = sqrt( 9.0 );\n* // returns 3.0\n*\n* v = sqrt( 0.0 );\n* // returns 0.0\n*\n* v = sqrt( -4.0 );\n* // returns NaN\n*\n* v = sqrt( NaN );\n* // returns NaN\n*/\nvar sqrt = Math.sqrt; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default sqrt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the absolute value of a double-precision floating-point number `x`.\n*\n* @param {number} x - input value\n* @returns {number} absolute value\n*\n* @example\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* @example\n* var v = abs( 2.0 );\n* // returns 2.0\n*\n* @example\n* var v = abs( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( -0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( NaN );\n* // returns NaN\n*/\nfunction abs( x ) {\n\treturn Math.abs( x ); // eslint-disable-line stdlib/no-builtin-math\n}\n\n\n// EXPORTS //\n\nexport default abs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasUint32Array = ( typeof Uint32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint32Array\n*\n* @example\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint32Array( [] );\n* // returns false\n*/\nfunction isUint32Array( value ) {\n\treturn (\n\t\t( hasUint32Array && value instanceof Uint32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isUint32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint32Array === 'function' ) ? Uint32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint32Array === 'function' ) ? Uint32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint32\n*\n* @example\n* import ctor from '@stdlib/array/uint32';\n*\n* var arr = new ctor( 10 );\n* // returns <Uint32Array>\n*/\n\n// MODULES //\n\nimport hasUint32ArraySupport from '@stdlib/assert/has-uint32array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isUint32Array from './../../is-uint32array';\nimport UINT32_MAX from '@stdlib/constants/uint32/max';\nimport GlobalUint32Array from './uint32array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint32Array` support\n*\n* @example\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT32_MAX+1, UINT32_MAX+2 ];\n\t\tarr = new GlobalUint32Array( arr );\n\t\tbool = (\n\t\t\tisUint32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT32_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 32-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasFloat64Array = ( typeof Float64Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float64Array\n*\n* @example\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat64Array( [] );\n* // returns false\n*/\nfunction isFloat64Array( value ) {\n\treturn (\n\t\t( hasFloat64Array && value instanceof Float64Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float64Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isFloat64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float64Array === 'function' ) ? Float64Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float64Array === 'function' ) ? Float64Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float64\n*\n* @example\n* import ctor from '@stdlib/array/float64';\n*\n* var arr = new ctor( 10 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nimport hasFloat64ArraySupport from '@stdlib/assert/has-float64array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat64ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFloat64Array from './../../is-float64array';\nimport GlobalFloat64Array from './float64array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Float64Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float64Array` support\n*\n* @example\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat64ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat64Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat64Array( [ 1.0, 3.14, -3.14, NaN ] );\n\t\tbool = (\n\t\t\tisFloat64Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.14 &&\n\t\t\tarr[ 2 ] === -3.14 &&\n\t\t\tarr[ 3 ] !== arr[ 3 ]\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of double-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasUint8Array = ( typeof Uint8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8Array\n*\n* @example\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8Array( [] );\n* // returns false\n*/\nfunction isUint8Array( value ) {\n\treturn (\n\t\t( hasUint8Array && value instanceof Uint8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isUint8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 8-bit integer.\n*\n* @module @stdlib/constants/uint8/max\n* @type {integer32}\n*\n* @example\n* import UINT8_MAX from '@stdlib/constants/uint8/max';\n* // returns 255\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 8-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{8} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 255\n*/\nvar UINT8_MAX = 255|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default UINT8_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8Array === 'function' ) ? Uint8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8Array === 'function' ) ? Uint8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint8\n*\n* @example\n* import ctor from '@stdlib/array/uint8';\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8Array>\n*/\n\n// MODULES //\n\nimport hasUint8ArraySupport from '@stdlib/assert/has-uint8array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isUint8Array from './../../is-uint8array';\nimport UINT8_MAX from '@stdlib/constants/uint8/max';\nimport GlobalUint8Array from './uint8array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8Array` support\n*\n* @example\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT8_MAX+1, UINT8_MAX+2 ];\n\t\tarr = new GlobalUint8Array( arr );\n\t\tbool = (\n\t\t\tisUint8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&           // truncation\n\t\t\tarr[ 2 ] === UINT8_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&           // wrap around\n\t\t\tarr[ 4 ] === 1              // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasUint16Array = ( typeof Uint16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint16Array\n*\n* @example\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint16Array( [] );\n* // returns false\n*/\nfunction isUint16Array( value ) {\n\treturn (\n\t\t( hasUint16Array && value instanceof Uint16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isUint16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 16-bit integer.\n*\n* @module @stdlib/constants/uint16/max\n* @type {integer32}\n*\n* @example\n* import UINT16_MAX from '@stdlib/constants/uint16/max';\n* // returns 65535\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{16} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 1111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 65535\n*/\nvar UINT16_MAX = 65535|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default UINT16_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint16Array === 'function' ) ? Uint16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint16Array === 'function' ) ? Uint16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 16-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint16\n*\n* @example\n* import ctor from '@stdlib/array/uint16';\n*\n* var arr = new ctor( 10 );\n* // returns <Uint16Array>\n*/\n\n// MODULES //\n\nimport hasUint16ArraySupport from '@stdlib/assert/has-uint16array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isUint16Array from './../../is-uint16array';\nimport UINT16_MAX from '@stdlib/constants/uint16/max';\nimport GlobalUint16Array from './uint16array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint16Array` support\n*\n* @example\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT16_MAX+1, UINT16_MAX+2 ];\n\t\tarr = new GlobalUint16Array( arr );\n\t\tbool = (\n\t\t\tisUint16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT16_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 16-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctors from './ctors.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an environment is little endian.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment is little endian\n*\n* @example\n* var bool = isLittleEndian();\n* // returns <boolean>\n*/\nfunction isLittleEndian() {\n\tvar uint16view;\n\tvar uint8view;\n\n\tuint16view = new ctors[ 'uint16' ]( 1 );\n\n\t/*\n\t* Set the uint16 view to a value having distinguishable lower and higher order words.\n\t*\n\t* 4660 => 0x1234 => 0x12 0x34 => '00010010 00110100' => (0x12,0x34) == (18,52)\n\t*/\n\tuint16view[ 0 ] = 0x1234;\n\n\t// Create a uint8 view on top of the uint16 buffer:\n\tuint8view = new ctors[ 'uint8' ]( uint16view.buffer );\n\n\t// If little endian, the least significant byte will be first...\n\treturn ( uint8view[ 0 ] === 0x34 );\n}\n\n\n// MAIN //\n\nbool = isLittleEndian();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint8Array from '@stdlib/array/uint8';\nimport Uint16Array from '@stdlib/array/uint16';\n\n\n// MAIN //\n\nvar ctors = {\n\t'uint16': Uint16Array,\n\t'uint8': Uint8Array\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isLittleEndian from '@stdlib/assert/is-little-endian';\n\n\n// MAIN //\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n\tLOW = 0; // first index\n} else {\n\tHIGH = 0; // first index\n\tLOW = 1; // second index\n}\nindices = {\n\t'HIGH': HIGH,\n\t'LOW': LOW\n};\n\n\n// EXPORTS //\n\nexport default indices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint32Array from '@stdlib/array/uint32';\nimport Float64Array from '@stdlib/array/float64';\nimport indices from './indices.js';\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW;\n\n\n// MAIN //\n\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @private\n* @param {number} x - input value\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* import Uint32Array from '@stdlib/array/uint32';\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( 3.14e201, out, 1, 0 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\nfunction toWords( x, out, stride, offset ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tout[ offset ] = UINT32_VIEW[ HIGH ];\n\tout[ offset + stride ] = UINT32_VIEW[ LOW ];\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport fcn from './assign.js';\n\n\n// MAIN //\n\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @param {number} x - input value\n* @returns {Array<number>} output array\n*\n* @example\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*/\nfunction toWords( x ) {\n\treturn fcn( x, [ 0>>>0, 0>>>0 ], 1, 0 );\n}\n\n\n// EXPORTS //\n\nexport default toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @module @stdlib/number/float64/base/to-words\n*\n* @example\n* import toWords from '@stdlib/number/float64/base/to-words';\n*\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*\n* @example\n* import Uint32Array from '@stdlib/array/uint32';\n* import toWords from '@stdlib/number/float64/base/to-words';\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords.assign( 3.14e201, out, 1, 0 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isLittleEndian from '@stdlib/assert/is-little-endian';\n\n\n// MAIN //\n\nvar LOW;\nif ( isLittleEndian === true ) {\n\tLOW = 0; // first index\n} else {\n\tLOW = 1; // second index\n}\n\n\n// EXPORTS //\n\nexport default LOW;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint32Array from '@stdlib/array/uint32';\nimport Float64Array from '@stdlib/array/float64';\nimport LOW from './low.js';\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Sets the less significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the lower order bits? If little endian, the first; if big endian, the second.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - double\n* @param {uinteger32} low - unsigned 32-bit integer to replace the lower order word of `x`\n* @returns {number} double having the same higher order word as `x`\n*\n* @example\n* var low = 5 >>> 0; // => 00000000000000000000000000000101\n*\n* var x = 3.14e201; // => 0 11010011100 01001000001011000011 10010011110010110101100010000010\n*\n* var y = setLowWord( x, low ); // => 0 11010011100 01001000001011000011 00000000000000000000000000000101\n* // returns 3.139998651394392e+201\n*\n* @example\n* import PINF from '@stdlib/constants/float64/pinf';\n* import NINF from '@stdlib/constants/float64/ninf';\n*\n* var low = 12345678;\n*\n* var y = setLowWord( PINF, low );\n* // returns NaN\n*\n* y = setLowWord( NINF, low );\n* // returns NaN\n*\n* y = setLowWord( NaN, low );\n* // returns NaN\n*/\nfunction setLowWord( x, low ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tUINT32_VIEW[ LOW ] = ( low >>> 0 ); // identity bit shift to ensure integer\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nexport default setLowWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Converts an unsigned 32-bit integer to a signed 32-bit integer.\n*\n* @param {uinteger32} x - unsigned 32-bit integer\n* @returns {integer32} signed 32-bit integer\n*\n* @example\n* import float64ToUint32 from '@stdlib/number/float64/base/to-uint32';\n* var y = uint32ToInt32( float64ToUint32( 4294967295 ) );\n* // returns -1\n*\n* @example\n* import float64ToUint32 from '@stdlib/number/float64/base/to-uint32';\n* var y = uint32ToInt32( float64ToUint32( 3 ) );\n* // returns 3\n*/\nfunction uint32ToInt32( x ) {\n\t// NOTE: we could also use typed-arrays to achieve the same end.\n\treturn x|0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nexport default uint32ToInt32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for excluding the sign bit of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-abs-mask\n* @type {uinteger32}\n*\n* @example\n* import FLOAT64_HIGH_WORD_ABS_MASK from '@stdlib/constants/float64/high-word-abs-mask';\n* // returns 2147483647\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for excluding the sign bit of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for excluding the sign bit of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2147483647 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 11111111111 11111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x7fffffff\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_ABS_MASK = 0x7fffffff>>>0; // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nexport default FLOAT64_HIGH_WORD_ABS_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isLittleEndian from '@stdlib/assert/is-little-endian';\n\n\n// MAIN //\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n\tLOW = 0; // first index\n} else {\n\tHIGH = 0; // first index\n\tLOW = 1; // second index\n}\nindices = {\n\t'HIGH': HIGH,\n\t'LOW': LOW\n};\n\n\n// EXPORTS //\n\nexport default indices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isLittleEndian from '@stdlib/assert/is-little-endian';\n\n\n// MAIN //\n\nvar HIGH;\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n} else {\n\tHIGH = 0; // first index\n}\n\n\n// EXPORTS //\n\nexport default HIGH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint32Array from '@stdlib/array/uint32';\nimport Float64Array from '@stdlib/array/float64';\nimport HIGH from './high.js';\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Returns an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - input value\n* @returns {uinteger32} higher order word\n*\n* @example\n* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011\n* // returns 1774486211\n*/\nfunction getHighWord( x ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\treturn UINT32_VIEW[ HIGH ];\n}\n\n\n// EXPORTS //\n\nexport default getHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint32Array from '@stdlib/array/uint32';\nimport Float64Array from '@stdlib/array/float64';\nimport indices from './indices.js';\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW;\n\n\n// MAIN //\n\n/**\n* Creates a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 should we place the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {uinteger32} high - higher order word (unsigned 32-bit integer)\n* @param {uinteger32} low - lower order word (unsigned 32-bit integer)\n* @returns {number} floating-point number\n*\n* @example\n* var v = fromWords( 1774486211, 2479577218 );\n* // returns 3.14e201\n*\n* @example\n* var v = fromWords( 3221823995, 1413754136 );\n* // returns -3.141592653589793\n*\n* @example\n* var v = fromWords( 0, 0 );\n* // returns 0.0\n*\n* @example\n* var v = fromWords( 2147483648, 0 );\n* // returns -0.0\n*\n* @example\n* var v = fromWords( 2146959360, 0 );\n* // returns NaN\n*\n* @example\n* var v = fromWords( 2146435072, 0 );\n* // returns Infinity\n*\n* @example\n* var v = fromWords( 4293918720, 0 );\n* // returns -Infinity\n*/\nfunction fromWords( high, low ) {\n\tUINT32_VIEW[ HIGH ] = high;\n\tUINT32_VIEW[ LOW ] = low;\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nexport default fromWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport SIGN_MASK from '@stdlib/constants/float64/high-word-sign-mask';\nimport ABS_MASK from '@stdlib/constants/float64/high-word-abs-mask';\nimport toWords from '@stdlib/number/float64/base/to-words';\nimport getHighWord from '@stdlib/number/float64/base/get-high-word';\nimport fromWords from '@stdlib/number/float64/base/from-words';\n\n\n// VARIABLES //\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ];\n\n\n// MAIN //\n\n/**\n* Returns a double-precision floating-point number with the magnitude of `x` and the sign of `y`.\n*\n* @param {number} x - number from which to derive a magnitude\n* @param {number} y - number from which to derive a sign\n* @returns {number} a double-precision floating-point number\n*\n* @example\n* var z = copysign( -3.14, 10.0 );\n* // returns 3.14\n*\n* @example\n* var z = copysign( 3.14, -1.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( 1.0, -0.0 );\n* // returns -1.0\n*\n* @example\n* var z = copysign( -3.14, -0.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( -0.0, 1.0 );\n* // returns 0.0\n*/\nfunction copysign( x, y ) {\n\tvar hx;\n\tvar hy;\n\n\t// Split `x` into higher and lower order words:\n\ttoWords.assign( x, WORDS, 1, 0 );\n\thx = WORDS[ 0 ];\n\n\t// Turn off the sign bit of `x`:\n\thx &= ABS_MASK;\n\n\t// Extract the higher order word from `y`:\n\thy = getHighWord( y );\n\n\t// Leave only the sign bit of `y` turned on:\n\thy &= SIGN_MASK;\n\n\t// Copy the sign bit of `y` to `x`:\n\thx |= hy;\n\n\t// Return a new value having the same magnitude as `x`, but with the sign of `y`:\n\treturn fromWords( hx, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nexport default copysign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for the sign bit of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-sign-mask\n* @type {uinteger32}\n*\n* @example\n* import FLOAT64_HIGH_WORD_SIGN_MASK from '@stdlib/constants/float64/high-word-sign-mask';\n* // returns 2147483648\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for the sign bit of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the sign bit of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2147483648 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 1 00000000000 00000000000000000000\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x80000000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_SIGN_MASK = 0x80000000>>>0; // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nexport default FLOAT64_HIGH_WORD_SIGN_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isLittleEndian from '@stdlib/assert/is-little-endian';\n\n\n// MAIN //\n\nvar HIGH;\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n} else {\n\tHIGH = 0; // first index\n}\n\n\n// EXPORTS //\n\nexport default HIGH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint32Array from '@stdlib/array/uint32';\nimport Float64Array from '@stdlib/array/float64';\nimport HIGH from './high.js';\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Sets the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - double\n* @param {uinteger32} high - unsigned 32-bit integer to replace the higher order word of `x`\n* @returns {number} double having the same lower order word as `x`\n*\n* @example\n* var high = 5 >>> 0; // => 0 00000000000 00000000000000000101\n*\n* var y = setHighWord( 3.14e201, high ); //  => 0 00000000000 0000000000000000010110010011110010110101100010000010\n* // returns 1.18350528745e-313\n*\n* @example\n* import PINF from '@stdlib/constants/float64/pinf'; // => 0 11111111111 00000000000000000000 00000000000000000000000000000000\n*\n* var high = 1072693248 >>> 0; // => 0 01111111111 00000000000000000000\n*\n* // Set the higher order bits of `+infinity` to return `1`:\n* var y = setHighWord( PINF, high ); // => 0 01111111111 0000000000000000000000000000000000000000000000000000\n* // returns 1.0\n*/\nfunction setHighWord( x, high ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tUINT32_VIEW[ HIGH ] = ( high >>> 0 ); // identity bit shift to ensure integer\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nexport default setHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getHighWord from '@stdlib/number/float64/base/get-high-word';\nimport setLowWord from '@stdlib/number/float64/base/set-low-word';\nimport setHighWord from '@stdlib/number/float64/base/set-high-word';\nimport BIAS from '@stdlib/constants/float64/exponent-bias';\nimport polyvalL from './polyval_l.js';\n\n\n// VARIABLES //\n\n// 0x000fffff = 1048575 => 0 00000000000 11111111111111111111\nvar HIGH_SIGNIFICAND_MASK = 0x000fffff|0; // asm type annotation\n\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar HIGH_MIN_NORMAL_EXP = 0x00100000|0; // asm type annotation\n\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar HIGH_BIASED_EXP_0 = 0x3ff00000|0; // asm type annotation\n\n// 0x20000000 = 536870912 => 0 01000000000 00000000000000000000 => biased exponent: 512 = -511+1023\nvar HIGH_BIASED_EXP_NEG_512 = 0x20000000|0; // asm type annotation\n\n// 0x00080000 = 524288 => 0 00000000000 10000000000000000000\nvar HIGH_SIGNIFICAND_HALF = 0x00080000|0; // asm type annotation\n\n// TODO: consider making an external constant\nvar HIGH_NUM_SIGNIFICAND_BITS = 20|0; // asm type annotation\n\nvar TWO53 = 9007199254740992.0;\t// 0x43400000, 0x00000000\n\n// 2/(3*LN2)\nvar CP = 9.61796693925975554329e-01; // 0x3FEEC709, 0xDC3A03FD\n\n// (float)CP\nvar CP_HI = 9.61796700954437255859e-01; // 0x3FEEC709, 0xE0000000\n\n// Low: CP_HI\nvar CP_LO = -7.02846165095275826516e-09; // 0xBE3E2FE0, 0x145B01F5\n\nvar BP = [\n\t1.0,\n\t1.5\n];\nvar DP_HI = [\n\t0.0,\n\t5.84962487220764160156e-01 // 0x3FE2B803, 0x40000000\n];\nvar DP_LO = [\n\t0.0,\n\t1.35003920212974897128e-08 // 0x3E4CFDEB, 0x43CFD006\n];\n\n\n// MAIN //\n\n/**\n* Computes \\\\(\\operatorname{log2}(ax)\\\\).\n*\n* @private\n* @param {Array} out - output array\n* @param {number} ax - absolute value of `x`\n* @param {number} ahx - high word of `ax`\n* @returns {Array} output array containing a tuple comprised of high and low parts\n*\n* @example\n* var t = log2ax( [ 0.0, 0.0 ], 9.0, 1075970048 ); // => [ t1, t2 ]\n* // returns [ 3.169923782348633, 0.0000012190936795504075 ]\n*/\nfunction log2ax( out, ax, ahx ) {\n\tvar tmp;\n\tvar ss; // `hs + ls`\n\tvar s2; // `ss` squared\n\tvar hs;\n\tvar ls;\n\tvar ht;\n\tvar lt;\n\tvar bp; // `BP` constant\n\tvar dp; // `DP` constant\n\tvar hp;\n\tvar lp;\n\tvar hz;\n\tvar lz;\n\tvar t1;\n\tvar t2;\n\tvar t;\n\tvar r;\n\tvar u;\n\tvar v;\n\tvar n;\n\tvar j;\n\tvar k;\n\n\tn = 0|0; // asm type annotation\n\n\t// Check if `x` is subnormal...\n\tif ( ahx < HIGH_MIN_NORMAL_EXP ) {\n\t\tax *= TWO53;\n\t\tn -= 53|0; // asm type annotation\n\t\tahx = getHighWord( ax );\n\t}\n\t// Extract the unbiased exponent of `x`:\n\tn += ((ahx >> HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // asm type annotation\n\n\t// Isolate the significand bits of `x`:\n\tj = (ahx & HIGH_SIGNIFICAND_MASK)|0; // asm type annotation\n\n\t// Normalize `ahx` by setting the (biased) exponent to `1023`:\n\tahx = (j | HIGH_BIASED_EXP_0)|0; // asm type annotation\n\n\t// Determine the interval of `|x|` by comparing significand bits...\n\n\t// |x| < sqrt(3/2)\n\tif ( j <= 0x3988E ) { // 0 00000000000 00111001100010001110\n\t\tk = 0;\n\t}\n\t// |x| < sqrt(3)\n\telse if ( j < 0xBB67A ) { // 0 00000000000 10111011011001111010\n\t\tk = 1;\n\t}\n\t// |x| >= sqrt(3)\n\telse {\n\t\tk = 0;\n\t\tn += 1|0; // asm type annotation\n\t\tahx -= HIGH_MIN_NORMAL_EXP;\n\t}\n\t// Load the normalized high word into `|x|`:\n\tax = setHighWord( ax, ahx );\n\n\t// Compute `ss = hs + ls = (x-1)/(x+1)` or `(x-1.5)/(x+1.5)`:\n\tbp = BP[ k ]; // BP[0] = 1.0, BP[1] = 1.5\n\tu = ax - bp; // (x-1) || (x-1.5)\n\tv = 1.0 / (ax + bp); // 1/(x+1) || 1/(x+1.5)\n\tss = u * v;\n\ths = setLowWord( ss, 0 ); // set all low word (less significant significand) bits to 0s\n\n\t// Compute `ht = ax + bp` (via manipulation, i.e., bit flipping, of the high word):\n\ttmp = ((ahx>>1) | HIGH_BIASED_EXP_NEG_512) + HIGH_SIGNIFICAND_HALF;\n\ttmp += (k << 18); // `(k<<18)` can be considered the word equivalent of `1.0` or `1.5`\n\tht = setHighWord( 0.0, tmp );\n\tlt = ax - (ht - bp);\n\tls = v * ( ( u - (hs*ht) ) - ( hs*lt ) );\n\n\t// Compute `log(ax)`...\n\n\ts2 = ss * ss;\n\tr = s2 * s2 * polyvalL( s2 );\n\tr += ls * (hs + ss);\n\ts2 = hs * hs;\n\tht = 3.0 + s2 + r;\n\tht = setLowWord( ht, 0 );\n\tlt = r - ((ht-3.0) - s2);\n\n\t// u+v = ss*(1+...):\n\tu = hs * ht;\n\tv = ( ls*ht ) + ( lt*ss );\n\n\t// 2/(3LN2) * (ss+...):\n\thp = u + v;\n\thp = setLowWord( hp, 0 );\n\tlp = v - (hp - u);\n\thz = CP_HI * hp; // CP_HI+CP_LO = 2/(3*LN2)\n\tlz = ( CP_LO*hp ) + ( lp*CP ) + DP_LO[ k ];\n\n\t// log2(ax) = (ss+...)*2/(3*LN2) = n + dp + hz + lz\n\tdp = DP_HI[ k ];\n\tt = n;\n\tt1 = ((hz+lz) + dp) + t; // log2(ax)\n\tt1 = setLowWord( t1, 0 );\n\tt2 = lz - (((t1-t) - dp) - hz);\n\n\tout[ 0 ] = t1;\n\tout[ 1 ] = t2;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default log2ax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport FLOAT64_SMALLEST_NORMAL from '@stdlib/constants/float64/smallest-normal';\nimport isInfinite from '@stdlib/math/base/assert/is-infinite';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport abs from '@stdlib/math/base/special/abs';\n\n\n// VARIABLES //\n\n// (1<<52)\nvar SCALAR = 4503599627370496;\n\n\n// MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\) and assigns results to a provided output array.\n*\n* @param {number} x - input value\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* import pow from '@stdlib/math/base/special/pow';\n*\n* var out = normalize( 3.14e-319, [ 0.0, 0 ], 1, 0 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( 0.0, [ 0.0, 0 ], 1, 0 );\n* // returns [ 0.0, 0 ];\n*\n* @example\n* import PINF from '@stdlib/constants/float64/pinf';\n*\n* var out = normalize( PINF, [ 0.0, 0 ], 1, 0 );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* import NINF from '@stdlib/constants/float64/ninf';\n*\n* var out = normalize( NINF, [ 0.0, 0 ], 1, 0 );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( NaN, [ 0.0, 0 ], 1, 0 );\n* // returns [ NaN, 0 ]\n*/\nfunction normalize( x, out, stride, offset ) {\n\tif ( isnan( x ) || isInfinite( x ) ) {\n\t\tout[ offset ] = x;\n\t\tout[ offset + stride ] = 0;\n\t\treturn out;\n\t}\n\tif ( x !== 0.0 && abs( x ) < FLOAT64_SMALLEST_NORMAL ) {\n\t\tout[ offset ] = x * SCALAR;\n\t\tout[ offset + stride ] = -52;\n\t\treturn out;\n\t}\n\tout[ offset ] = x;\n\tout[ offset + stride ] = 0;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Smallest positive double-precision floating-point normal number.\n*\n* @module @stdlib/constants/float64/smallest-normal\n* @type {number}\n*\n* @example\n* import FLOAT64_SMALLEST_NORMAL from '@stdlib/constants/float64/smallest-normal';\n* // returns 2.2250738585072014e-308\n*/\n\n\n// MAIN //\n\n/**\n* The smallest positive double-precision floating-point normal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{1023-1}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000000001 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default 2.2250738585072014e-308\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_SMALLEST_NORMAL = 2.2250738585072014e-308;\n\n\n// EXPORTS //\n\nexport default FLOAT64_SMALLEST_NORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @module @stdlib/number/float64/base/normalize\n*\n* @example\n* import normalize from '@stdlib/number/float64/base/normalize';\n* import pow from '@stdlib/math/base/special/pow';\n*\n* var out = normalize( 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0, exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import normalize from '@stdlib/number/float64/base/normalize';\n*\n* var out = new Float64Array( 2 );\n*\n* var v = normalize.assign( 3.14e-319, out, 1, 0 );\n* // returns <Float64Array>[ 1.4141234400356668e-303, -52 ]\n*\n* var bool = ( v === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport fcn from './assign.js';\n\n\n// MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @param {number} x - input value\n* @returns {NumberArray} output array\n*\n* @example\n* import pow from '@stdlib/math/base/special/pow';\n*\n* var out = normalize( 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( 0.0 );\n* // returns [ 0.0, 0 ]\n*\n* @example\n* import PINF from '@stdlib/constants/float64/pinf';\n*\n* var out = normalize( PINF );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* import NINF from '@stdlib/constants/float64/ninf';\n*\n* var out = normalize( NINF );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( NaN );\n* // returns [ NaN, 0 ]\n*/\nfunction normalize( x ) {\n\treturn fcn( x, [ 0.0, 0 ], 1, 0 );\n}\n\n\n// EXPORTS //\n\nexport default normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// NOTES //\n\n/*\n* => ldexp: load exponent (see [The Open Group]{@link http://pubs.opengroup.org/onlinepubs/9699919799/functions/ldexp.html} and [cppreference]{@link http://en.cppreference.com/w/c/numeric/math/ldexp}).\n*/\n\n\n// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport BIAS from '@stdlib/constants/float64/exponent-bias';\nimport MAX_EXPONENT from '@stdlib/constants/float64/max-base2-exponent';\nimport MAX_SUBNORMAL_EXPONENT from '@stdlib/constants/float64/max-base2-exponent-subnormal';\nimport MIN_SUBNORMAL_EXPONENT from '@stdlib/constants/float64/min-base2-exponent-subnormal';\nimport isnan from './../../../../base/assert/is-nan';\nimport isInfinite from './../../../../base/assert/is-infinite';\nimport copysign from './../../../../base/special/copysign';\nimport { assign as normalize } from '@stdlib/number/float64/base/normalize';\nimport floatExp from '@stdlib/number/float64/base/exponent';\nimport toWords from '@stdlib/number/float64/base/to-words';\nimport fromWords from '@stdlib/number/float64/base/from-words';\n\n\n// VARIABLES //\n\n// 1/(1<<52) = 1/(2**52) = 1/4503599627370496\nvar TWO52_INV = 2.220446049250313e-16;\n\n// Exponent all 0s: 1 00000000000 11111111111111111111 => 2148532223\nvar CLEAR_EXP_MASK = 0x800fffff>>>0; // asm type annotation\n\n// Normalization workspace:\nvar FRAC = [ 0.0, 0.0 ];\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ];\n\n\n// MAIN //\n\n/**\n* Multiplies a double-precision floating-point number by an integer power of two.\n*\n* @param {number} frac - fraction\n* @param {integer} exp - exponent\n* @returns {number} double-precision floating-point number\n*\n* @example\n* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* @example\n* var x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* @example\n* var x = ldexp( 0.0, 20 );\n* // returns 0.0\n*\n* @example\n* var x = ldexp( -0.0, 39 );\n* // returns -0.0\n*\n* @example\n* var x = ldexp( NaN, -101 );\n* // returns NaN\n*\n* @example\n* var x = ldexp( Infinity, 11 );\n* // returns Infinity\n*\n* @example\n* var x = ldexp( -Infinity, -118 );\n* // returns -Infinity\n*/\nfunction ldexp( frac, exp ) {\n\tvar high;\n\tvar m;\n\tif (\n\t\texp === 0 ||\n\t\tfrac === 0.0 || // handles +-0\n\t\tisnan( frac ) ||\n\t\tisInfinite( frac )\n\t) {\n\t\treturn frac;\n\t}\n\t// Normalize the input fraction:\n\tnormalize( frac, FRAC, 1, 0 );\n\tfrac = FRAC[ 0 ];\n\texp += FRAC[ 1 ];\n\n\t// Extract the exponent from `frac` and add it to `exp`:\n\texp += floatExp( frac );\n\n\t// Check for underflow/overflow...\n\tif ( exp < MIN_SUBNORMAL_EXPONENT ) {\n\t\treturn copysign( 0.0, frac );\n\t}\n\tif ( exp > MAX_EXPONENT ) {\n\t\tif ( frac < 0.0 ) {\n\t\t\treturn NINF;\n\t\t}\n\t\treturn PINF;\n\t}\n\t// Check for a subnormal and scale accordingly to retain precision...\n\tif ( exp <= MAX_SUBNORMAL_EXPONENT ) {\n\t\texp += 52;\n\t\tm = TWO52_INV;\n\t} else {\n\t\tm = 1.0;\n\t}\n\t// Split the fraction into higher and lower order words:\n\ttoWords.assign( frac, WORDS, 1, 0 );\n\thigh = WORDS[ 0 ];\n\n\t// Clear the exponent bits within the higher order word:\n\thigh &= CLEAR_EXP_MASK;\n\n\t// Set the exponent bits to the new exponent:\n\thigh |= ((exp+BIAS) << 20);\n\n\t// Create a new floating-point number:\n\treturn m * fromWords( high, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nexport default ldexp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getHighWord from './../../../../float64/base/get-high-word';\nimport EXP_MASK from '@stdlib/constants/float64/high-word-exponent-mask';\nimport BIAS from '@stdlib/constants/float64/exponent-bias';\n\n\n// MAIN //\n\n/**\n* Returns an integer corresponding to the unbiased exponent of a double-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {integer32} unbiased exponent\n*\n* @example\n* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307\n* // returns -1019\n*\n* @example\n* var exp = exponent( -3.14 );\n* // returns 1\n*\n* @example\n* var exp = exponent( 0.0 );\n* // returns -1023\n*\n* @example\n* var exp = exponent( NaN );\n* // returns 1024\n*/\nfunction exponent( x ) {\n\t// Extract from the input value a higher order word (unsigned 32-bit integer) which contains the exponent:\n\tvar high = getHighWord( x );\n\n\t// Apply a mask to isolate only the exponent bits and then shift off all bits which are part of the fraction:\n\thigh = ( high & EXP_MASK ) >>> 20;\n\n\t// Remove the bias and return:\n\treturn (high - BIAS)|0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nexport default exponent;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-exponent-mask\n* @type {uinteger32}\n*\n* @example\n* import FLOAT64_HIGH_WORD_EXPONENT_MASK from '@stdlib/constants/float64/high-word-exponent-mask';\n* // returns 2146435072\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the exponent of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2146435072 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x7ff00000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_EXPONENT_MASK = 0x7ff00000;\n\n\n// EXPORTS //\n\nexport default FLOAT64_HIGH_WORD_EXPONENT_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The bias of a double-precision floating-point number's exponent.\n*\n* @module @stdlib/constants/float64/exponent-bias\n* @type {integer32}\n*\n* @example\n* import FLOAT64_EXPONENT_BIAS from '@stdlib/constants/float64/exponent-bias';\n* // returns 1023\n*/\n\n\n// MAIN //\n\n/**\n* Bias of a double-precision floating-point number's exponent.\n*\n* ## Notes\n*\n* The bias can be computed via\n*\n* ```tex\n* \\mathrm{bias} = 2^{k-1} - 1\n* ```\n*\n* where \\\\(k\\\\) is the number of bits in the exponent; here, \\\\(k = 11\\\\).\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_EXPONENT_BIAS = 1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default FLOAT64_EXPONENT_BIAS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/min-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* import FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL from '@stdlib/constants/float64/min-base2-exponent-subnormal';\n* // returns -1074\n*/\n\n\n// MAIN //\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* -(BIAS+(52-1)) = -(1023+51) = -1074\n* ```\n*\n* where `BIAS = 1023` and `52` is the number of digits in the significand.\n*\n* @constant\n* @type {integer32}\n* @default -1074\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = -1074|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max-base2-exponent\n* @type {integer32}\n*\n* @example\n* import FLOAT64_MAX_BASE2_EXPONENT from '@stdlib/constants/float64/max-base2-exponent';\n* // returns 1023\n*/\n\n\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* ```text\n* 11111111110 => 2046 - BIAS = 1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE2_EXPONENT = 1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default FLOAT64_MAX_BASE2_EXPONENT;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* import FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL from '@stdlib/constants/float64/max-base2-exponent-subnormal';\n* // returns -1023\n*/\n\n\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* 00000000000 => 0 - BIAS = -1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default -1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = -1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from './../../../../base/assert/is-nan';\nimport isOdd from './../../../../base/assert/is-odd';\nimport isInfinite from './../../../../base/assert/is-infinite';\nimport isInteger from './../../../../base/assert/is-integer';\nimport sqrt from './../../../../base/special/sqrt';\nimport abs from './../../../../base/special/abs';\nimport toWords from '@stdlib/number/float64/base/to-words';\nimport setLowWord from '@stdlib/number/float64/base/set-low-word';\nimport uint32ToInt32 from '@stdlib/number/uint32/base/to-int32';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport ABS_MASK from '@stdlib/constants/float64/high-word-abs-mask';\nimport xIsZero from './x_is_zero.js';\nimport yIsHuge from './y_is_huge.js';\nimport yIsInfinite from './y_is_infinite.js';\nimport log2ax from './log2ax.js';\nimport logx from './logx.js';\nimport pow2 from './pow2.js';\n\n\n// VARIABLES //\n\n// 0x3fefffff = 1072693247 => 0 01111111110 11111111111111111111 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_MAX_NEAR_UNITY = 0x3fefffff|0; // asm type annotation\n\n// 0x41e00000 = 1105199104 => 0 10000011110 00000000000000000000 => biased exponent: 1054 = 31+1023 => 2^31\nvar HIGH_BIASED_EXP_31 = 0x41e00000|0; // asm type annotation\n\n// 0x43f00000 = 1139802112 => 0 10000111111 00000000000000000000 => biased exponent: 1087 = 64+1023 => 2^64\nvar HIGH_BIASED_EXP_64 = 0x43f00000|0; // asm type annotation\n\n// 0x40900000 = 1083179008 => 0 10000001001 00000000000000000000 => biased exponent: 1033 = 10+1023 => 2^10 = 1024\nvar HIGH_BIASED_EXP_10 = 0x40900000|0; // asm type annotation\n\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar HIGH_BIASED_EXP_0 = 0x3ff00000|0; // asm type annotation\n\n// 0x4090cc00 = 1083231232 => 0 10000001001 00001100110000000000\nvar HIGH_1075 = 0x4090cc00|0; // asm type annotation\n\n// 0xc090cc00 = 3230714880 => 1 10000001001 00001100110000000000\nvar HIGH_NEG_1075 = 0xc090cc00>>>0; // asm type annotation\n\nvar HIGH_NUM_NONSIGN_BITS = 31|0; // asm type annotation\n\nvar HUGE = 1.0e300;\nvar TINY = 1.0e-300;\n\n// -(1024-log2(ovfl+.5ulp))\nvar OVT = 8.0085662595372944372e-17;\n\n// High/low words workspace:\nvar WORDS = [ 0|0, 0|0 ];\n\n// Log workspace:\nvar LOG_WORKSPACE = [ 0.0, 0.0 ];\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function.\n*\n* ## Method\n*\n* 1.  Let \\\\(x = 2^n (1+f)\\\\).\n*\n* 2.  Compute \\\\(\\operatorname{log2}(x)\\\\) as\n*\n*     ```tex\n*     \\operatorname{log2}(x) = w_1 + w_2\n*     ```\n*\n*     where \\\\(w_1\\\\) has \\\\(53 - 24 = 29\\\\) bit trailing zeros.\n*\n* 3.  Compute\n*\n*     ```tex\n*     y \\cdot \\operatorname{log2}(x) = n + y^\\prime\n*     ```\n*\n*     by simulating multi-precision arithmetic, where \\\\(|y^\\prime| \\leq 0.5\\\\).\n*\n* 4.  Return\n*\n*     ```tex\n*     x^y = 2^n e^{y^\\prime \\cdot \\mathrm{log2}}\n*     ```\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* x^{\\mathrm{NaN}} &= \\mathrm{NaN} & \\\\\n* (\\mathrm{NaN})^y &= \\mathrm{NaN} & \\\\\n* 1^y &= 1 & \\\\\n* x^0 &= 1 & \\\\\n* x^1 &= x & \\\\\n* (\\pm 0)^\\infty &= +0 & \\\\\n* (\\pm 0)^{-\\infty} &= +\\infty & \\\\\n* (+0)^y &= +0 & \\mathrm{if}\\ y > 0 \\\\\n* (+0)^y &= +\\infty & \\mathrm{if}\\ y < 0 \\\\\n* (-0)^y &= -\\infty & \\mathrm{if}\\ y\\ \\mathrm{is\\ an\\ odd\\ integer\\ and}\\ y < 0 \\\\\n* (-0)^y &= +\\infty & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ an\\ odd\\ integer\\ and}\\ y < 0 \\\\\n* (-0)^y &= -0 & \\mathrm{if}\\ y\\ \\mathrm{is\\ an\\ odd\\ integer\\ and}\\ y > 0 \\\\\n* (-0)^y &= +0 & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ an\\ odd\\ integer\\ and}\\ y > 0 \\\\\n* (-1)^{\\pm\\infty} &= \\mathrm{NaN} & \\\\\n* x^{\\infty} &= +\\infty & |x| > 1 \\\\\n* x^{\\infty} &= +0 & |x| < 1 \\\\\n* x^{-\\infty} &= +0 & |x| > 1 \\\\\n* x^{-\\infty} &= +\\infty & |x| < 1 \\\\\n* (-\\infty)^y &= (-0)^y & \\\\\n* \\infty^y &= +0 & y < 0 \\\\\n* \\infty^y &= +\\infty & y > 0 \\\\\n* x^y &= \\mathrm{NaN} & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ a\\ finite\\ integer\\ and}\\ x < 0\n* \\end{align*}\n* ```\n*\n* ## Notes\n*\n* -   \\\\(\\operatorname{pow}(x,y)\\\\) returns \\\\(x^y\\\\) nearly rounded. In particular, \\\\(\\operatorname{pow}(<\\mathrm{integer}>,<\\mathrm{integer}>)\\\\) **always** returns the correct integer, provided the value is representable.\n* -   The hexadecimal values shown in the source code are the intended values for used constants. Decimal values may be used, provided the compiler will accurately convert decimal to binary in order to produce the hexadecimal values.\n*\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( 2.0, 3.0 );\n* // returns 8.0\n*\n* @example\n* var v = pow( 4.0, 0.5 );\n* // returns 2.0\n*\n* @example\n* var v = pow( 100.0, 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = pow( 3.141592653589793, 5.0 );\n* // returns ~306.0197\n*\n* @example\n* var v = pow( 3.141592653589793, -0.2 );\n* // returns ~0.7954\n*\n* @example\n* var v = pow( NaN, 3.0 );\n* // returns NaN\n*\n* @example\n* var v = pow( 5.0, NaN );\n* // returns NaN\n*\n* @example\n* var v = pow( NaN, NaN );\n* // returns NaN\n*/\nfunction pow( x, y ) {\n\tvar ahx; // absolute value high word `x`\n\tvar ahy; // absolute value high word `y`\n\tvar ax;  // absolute value `x`\n\tvar hx;  // high word `x`\n\tvar lx;  // low word `x`\n\tvar hy;  // high word `y`\n\tvar ly;  // low word `y`\n\tvar sx;  // sign `x`\n\tvar sy;  // sign `y`\n\tvar y1;\n\tvar hp;\n\tvar lp;\n\tvar t;\n\tvar z;   // y prime\n\tvar j;\n\tvar i;\n\tif ( isnan( x ) || isnan( y ) ) {\n\t\treturn NaN;\n\t}\n\t// Split `y` into high and low words:\n\ttoWords.assign( y, WORDS, 1, 0 );\n\thy = WORDS[ 0 ];\n\tly = WORDS[ 1 ];\n\n\t// Special cases `y`...\n\tif ( ly === 0 ) {\n\t\tif ( y === 0.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif ( y === 1.0 ) {\n\t\t\treturn x;\n\t\t}\n\t\tif ( y === -1.0 ) {\n\t\t\treturn 1.0 / x;\n\t\t}\n\t\tif ( y === 0.5 ) {\n\t\t\treturn sqrt( x );\n\t\t}\n\t\tif ( y === -0.5 ) {\n\t\t\treturn 1.0 / sqrt( x );\n\t\t}\n\t\tif ( y === 2.0 ) {\n\t\t\treturn x * x;\n\t\t}\n\t\tif ( y === 3.0 ) {\n\t\t\treturn x * x * x;\n\t\t}\n\t\tif ( y === 4.0 ) {\n\t\t\tx *= x;\n\t\t\treturn x * x;\n\t\t}\n\t\tif ( isInfinite( y ) ) {\n\t\t\treturn yIsInfinite( x, y );\n\t\t}\n\t}\n\t// Split `x` into high and low words:\n\ttoWords.assign( x, WORDS, 1, 0 );\n\thx = WORDS[ 0 ];\n\tlx = WORDS[ 1 ];\n\n\t// Special cases `x`...\n\tif ( lx === 0 ) {\n\t\tif ( hx === 0 ) {\n\t\t\treturn xIsZero( x, y );\n\t\t}\n\t\tif ( x === 1.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif (\n\t\t\tx === -1.0 &&\n\t\t\tisOdd( y )\n\t\t) {\n\t\t\treturn -1.0;\n\t\t}\n\t\tif ( isInfinite( x ) ) {\n\t\t\tif ( x === NINF ) {\n\t\t\t\t// `pow( 1/x, -y )`\n\t\t\t\treturn pow( -0.0, -y );\n\t\t\t}\n\t\t\tif ( y < 0.0 ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\treturn PINF;\n\t\t}\n\t}\n\tif (\n\t\tx < 0.0 &&\n\t\tisInteger( y ) === false\n\t) {\n\t\t// Signal NaN...\n\t\treturn (x-x)/(x-x);\n\t}\n\tax = abs( x );\n\n\t// Remove the sign bits (i.e., get absolute values):\n\tahx = (hx & ABS_MASK)|0; // asm type annotation\n\tahy = (hy & ABS_MASK)|0; // asm type annotation\n\n\t// Extract the sign bits:\n\tsx = (hx >>> HIGH_NUM_NONSIGN_BITS)|0; // asm type annotation\n\tsy = (hy >>> HIGH_NUM_NONSIGN_BITS)|0; // asm type annotation\n\n\t// Determine the sign of the result...\n\tif ( sx && isOdd( y ) ) {\n\t\tsx = -1.0;\n\t} else {\n\t\tsx = 1.0;\n\t}\n\t// Case 1: `|y|` is huge...\n\n\t// |y| > 2^31\n\tif ( ahy > HIGH_BIASED_EXP_31 ) {\n\t\t// `|y| > 2^64`, then must over- or underflow...\n\t\tif ( ahy > HIGH_BIASED_EXP_64 ) {\n\t\t\treturn yIsHuge( x, y );\n\t\t}\n\t\t// Over- or underflow if `x` is not close to unity...\n\n\t\tif ( ahx < HIGH_MAX_NEAR_UNITY ) {\n\t\t\t// y < 0\n\t\t\tif ( sy === 1 ) {\n\t\t\t\t// Signal overflow...\n\t\t\t\treturn sx * HUGE * HUGE;\n\t\t\t}\n\t\t\t// Signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\tif ( ahx > HIGH_BIASED_EXP_0 ) {\n\t\t\t// y > 0\n\t\t\tif ( sy === 0 ) {\n\t\t\t\t// Signal overflow...\n\t\t\t\treturn sx * HUGE * HUGE;\n\t\t\t}\n\t\t\t// Signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\t// At this point, `|1-x|` is tiny (`<= 2^-20`). Suffice to compute `log(x)` by `x - x^2/2 + x^3/3 - x^4/4`.\n\t\tt = logx( LOG_WORKSPACE, ax );\n\t}\n\t// Case 2: `|y|` is not huge...\n\telse {\n\t\tt = log2ax( LOG_WORKSPACE, ax, ahx );\n\t}\n\t// Split `y` into `y1 + y2` and compute `(y1+y2) * (t1+t2)`...\n\ty1 = setLowWord( y, 0 );\n\tlp = ( (y-y1)*t[0] ) + ( y*t[1] );\n\thp = y1 * t[0];\n\tz = lp + hp;\n\n\t// Note: *can* be more performant to use `getHighWord` and `getLowWord` directly, but using `toWords` looks cleaner.\n\ttoWords.assign( z, WORDS, 1, 0 );\n\tj = uint32ToInt32( WORDS[0] );\n\ti = uint32ToInt32( WORDS[1] );\n\n\t// z >= 1024\n\tif ( j >= HIGH_BIASED_EXP_10 ) {\n\t\t// z > 1024\n\t\tif ( ((j-HIGH_BIASED_EXP_10)|i) !== 0 ) {\n\t\t\t// Signal overflow...\n\t\t\treturn sx * HUGE * HUGE;\n\t\t}\n\t\tif ( (lp+OVT) > (z-hp) ) {\n\t\t\t// Signal overflow...\n\t\t\treturn sx * HUGE * HUGE;\n\t\t}\n\t}\n\t// z <= -1075\n\telse if ( (j&ABS_MASK) >= HIGH_1075 ) {\n\t\t// z < -1075\n\t\tif ( ((j-HIGH_NEG_1075)|i) !== 0 ) {\n\t\t\t// Signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\tif ( lp <= (z-hp) ) {\n\t\t\t// Signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t}\n\t// Compute `2^(hp+lp)`...\n\tz = pow2( j, hp, lp );\n\n\treturn sx * z;\n}\n\n\n// EXPORTS //\n\nexport default pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport abs from './../../../../base/special/abs';\nimport PINF from '@stdlib/constants/float64/pinf';\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\( y = \\pm \\infty\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( -1.0, Infinity );\n* // returns NaN\n*\n* @example\n* var v = pow( -1.0, -Infinity  );\n* // returns NaN\n*\n* @example\n* var v = pow( 1.0, Infinity );\n* // returns 1.0\n*\n* @example\n* var v = pow( 1.0, -Infinity  );\n* // returns 1.0\n*\n* @example\n* var v = pow( 0.5, Infinity );\n* // returns 0.0\n*\n* @example\n* var v = pow( 0.5, -Infinity  );\n* // returns Infinity\n*\n* @example\n* var v = pow( 1.5, -Infinity  );\n* // returns 0.0\n*\n* @example\n* var v = pow( 1.5, Infinity );\n* // returns Infinity\n*/\nfunction pow( x, y ) {\n\tif ( x === -1.0 ) {\n\t\t// Julia (0.4.2) and Python (2.7.9) return `1.0` (WTF???). JavaScript (`Math.pow`), R, and libm return `NaN`. We choose `NaN`, as the value is indeterminate; i.e., we cannot determine whether `y` is odd, even, or somewhere in between.\n\t\treturn (x-x)/(x-x); // signal NaN\n\t}\n\tif ( x === 1.0 ) {\n\t\treturn 1.0;\n\t}\n\t// (|x| > 1 && y === NINF) || (|x| < 1 && y === PINF)\n\tif ( (abs(x) < 1.0) === (y === PINF) ) {\n\t\treturn 0.0;\n\t}\n\t// (|x| > 1 && y === PINF) || (|x| < 1 && y === NINF)\n\treturn PINF;\n}\n\n\n// EXPORTS //\n\nexport default pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isOdd from './../../../../base/assert/is-odd';\nimport copysign from './../../../../base/special/copysign';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport PINF from '@stdlib/constants/float64/pinf';\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\(|x| = 0\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( 0.0, 2 );\n* // returns 0.0\n*\n* @example\n* var v = pow( -0.0, -9 );\n* // returns -Infinity\n*\n* @example\n* var v = pow( 0.0, -9 );\n* // returns Infinity\n*\n* @example\n* var v = pow( -0.0, 9 );\n* // returns 0.0\n*\n* @example\n* var v = pow( 0.0, -Infinity  );\n* // returns Infinity\n*\n* @example\n* var v = pow( 0.0, Infinity );\n* // returns 0.0\n*/\nfunction pow( x, y ) {\n\tif ( y === NINF ) {\n\t\treturn PINF;\n\t}\n\tif ( y === PINF ) {\n\t\treturn 0.0;\n\t}\n\tif ( y > 0.0 ) {\n\t\tif ( isOdd( y ) ) {\n\t\t\treturn x; // handles +-0\n\t\t}\n\t\treturn 0.0;\n\t}\n\t// y < 0.0\n\tif ( isOdd( y ) ) {\n\t\treturn copysign( PINF, x ); // handles +-0\n\t}\n\treturn PINF;\n}\n\n\n// EXPORTS //\n\nexport default pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ABS_MASK from '@stdlib/constants/float64/high-word-abs-mask';\nimport getHighWord from '@stdlib/number/float64/base/get-high-word';\n\n\n// VARIABLES //\n\n// 0x3fefffff = 1072693247 => 0 01111111110 11111111111111111111 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_MAX_NEAR_UNITY = 0x3fefffff|0; // asm type annotation\n\nvar HUGE = 1.0e300;\nvar TINY = 1.0e-300;\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\(|y| > 2^64\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} overflow or underflow result\n*\n* @example\n* var v = pow( 9.0, 3.6893488147419103e19 );\n* // returns Infinity\n*\n* @example\n* var v = pow( -3.14, -3.6893488147419103e19 );\n* // returns 0.0\n*/\nfunction pow( x, y ) {\n\tvar ahx;\n\tvar hx;\n\n\thx = getHighWord( x );\n\tahx = (hx & ABS_MASK);\n\n\tif ( ahx <= HIGH_MAX_NEAR_UNITY ) {\n\t\tif ( y < 0 ) {\n\t\t\t// Signal overflow...\n\t\t\treturn HUGE * HUGE;\n\t\t}\n\t\t// Signal underflow...\n\t\treturn TINY * TINY;\n\t}\n\t// `x` has a biased exponent greater than or equal to `0`...\n\n\tif ( y > 0 ) {\n\t\t// Signal overflow...\n\t\treturn HUGE * HUGE;\n\t}\n\t// Signal underflow...\n\treturn TINY * TINY;\n}\n\n\n// EXPORTS //\n\nexport default pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setLowWord from '@stdlib/number/float64/base/set-low-word';\nimport polyvalW from './polyval_w.js';\n\n\n// VARIABLES //\n\n// 1/LN2\nvar INV_LN2 = 1.44269504088896338700e+00; // 0x3FF71547, 0x652B82FE\n\n// High (24 bits): 1/LN2\nvar INV_LN2_HI = 1.44269502162933349609e+00; // 0x3FF71547, 0x60000000\n\n// Low: 1/LN2\nvar INV_LN2_LO = 1.92596299112661746887e-08; // 0x3E54AE0B, 0xF85DDF44\n\n\n// MAIN //\n\n/**\n* Computes \\\\(\\operatorname{log}(x)\\\\) assuming \\\\(|1-x|\\\\) is small and using the approximation \\\\(x - x^2/2 + x^3/3 - x^4/4\\\\).\n*\n* @private\n* @param {Array} out - output array\n* @param {number} ax - absolute value of `x`\n* @returns {Array} output array containing a tuple comprised of high and low parts\n*\n* @example\n* var t = logx( [ 0.0, 0.0 ], 9.0 ); // => [ t1, t2 ]\n* // returns [ -1265.7236328125, -0.0008163940840404393 ]\n*/\nfunction logx( out, ax ) {\n\tvar t2;\n\tvar t1;\n\tvar t;\n\tvar w;\n\tvar u;\n\tvar v;\n\n\tt = ax - 1.0; // `t` has `20` trailing zeros\n\tw = t * t * polyvalW( t );\n\tu = INV_LN2_HI * t; // `INV_LN2_HI` has `21` significant bits\n\tv = ( t*INV_LN2_LO ) - ( w*INV_LN2 );\n\tt1 = u + v;\n\tt1 = setLowWord( t1, 0 );\n\tt2 = v - (t1 - u);\n\n\tout[ 0 ] = t1;\n\tout[ 1 ] = t2;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default logx;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.5;\n\t}\n\treturn 0.5 + (x * (-0.3333333333333333 + (x * 0.25)));\n}\n\n\n// EXPORTS //\n\nexport default evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.5999999999999946;\n\t}\n\treturn 0.5999999999999946 + (x * (0.4285714285785502 + (x * (0.33333332981837743 + (x * (0.272728123808534 + (x * (0.23066074577556175 + (x * 0.20697501780033842))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getHighWord from '@stdlib/number/float64/base/get-high-word';\nimport setHighWord from '@stdlib/number/float64/base/set-high-word';\nimport setLowWord from '@stdlib/number/float64/base/set-low-word';\nimport uint32ToInt32 from '@stdlib/number/uint32/base/to-int32';\nimport ldexp from './../../../../base/special/ldexp';\nimport LN2 from '@stdlib/constants/float64/ln-two';\nimport BIAS from '@stdlib/constants/float64/exponent-bias';\nimport ABS_MASK from '@stdlib/constants/float64/high-word-abs-mask';\nimport HIGH_SIGNIFICAND_MASK from '@stdlib/constants/float64/high-word-significand-mask';\nimport polyvalP from './polyval_p.js';\n\n\n// VARIABLES //\n\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar HIGH_MIN_NORMAL_EXP = 0x00100000|0; // asm type annotation\n\n// 0x3fe00000 = 1071644672 => 0 01111111110 00000000000000000000 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_BIASED_EXP_NEG_1 = 0x3fe00000|0; // asm type annotation\n\n// TODO: consider making into an external constant\nvar HIGH_NUM_SIGNIFICAND_BITS = 20|0; // asm type annotation\n\n// High: LN2\nvar LN2_HI = 6.93147182464599609375e-01; // 0x3FE62E43, 0x00000000\n\n// Low: LN2\nvar LN2_LO = -1.90465429995776804525e-09; // 0xBE205C61, 0x0CA86C39\n\n\n// MAIN //\n\n/**\n* Computes \\\\(2^{\\mathrm{hp} + \\mathrm{lp}\\\\).\n*\n* @private\n* @param {number} j - high word of `hp + lp`\n* @param {number} hp - first power summand\n* @param {number} lp - second power summand\n* @returns {number} function value\n*\n* @example\n* var z = pow2( 1065961648, -0.3398475646972656, -0.000002438187359100815 );\n* // returns ~0.79\n*/\nfunction pow2( j, hp, lp ) {\n\tvar tmp;\n\tvar t1;\n\tvar t;\n\tvar r;\n\tvar u;\n\tvar v;\n\tvar w;\n\tvar z;\n\tvar n;\n\tvar i;\n\tvar k;\n\n\ti = (j & ABS_MASK)|0; // asm type annotation\n\tk = ((i>>HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // asm type annotation\n\tn = 0;\n\n\t// `|z| > 0.5`, set `n = z+0.5`\n\tif ( i > HIGH_BIASED_EXP_NEG_1 ) {\n\t\tn = (j + (HIGH_MIN_NORMAL_EXP>>(k+1)))>>>0; // asm type annotation\n\t\tk = (((n & ABS_MASK)>>HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // new k for n\n\t\ttmp = ((n & ~(HIGH_SIGNIFICAND_MASK >> k)))>>>0; // asm type annotation\n\t\tt = setHighWord( 0.0, tmp );\n\t\tn = (((n & HIGH_SIGNIFICAND_MASK)|HIGH_MIN_NORMAL_EXP) >> (HIGH_NUM_SIGNIFICAND_BITS-k))>>>0; // eslint-disable-line max-len\n\t\tif ( j < 0 ) {\n\t\t\tn = -n;\n\t\t}\n\t\thp -= t;\n\t}\n\tt = lp + hp;\n\tt = setLowWord( t, 0 );\n\tu = t * LN2_HI;\n\tv = ( (lp - (t-hp))*LN2 ) + ( t*LN2_LO );\n\tz = u + v;\n\tw = v - (z - u);\n\tt = z * z;\n\tt1 = z - ( t*polyvalP( t ) );\n\tr = ( (z*t1) / (t1-2.0) ) - ( w + (z*w) );\n\tz = 1.0 - (r - z);\n\tj = getHighWord( z );\n\tj = uint32ToInt32( j );\n\tj += (n << HIGH_NUM_SIGNIFICAND_BITS)>>>0; // asm type annotation\n\n\t// Check for subnormal output...\n\tif ( (j>>HIGH_NUM_SIGNIFICAND_BITS) <= 0 ) {\n\t\tz = ldexp( z, n );\n\t} else {\n\t\tz = setHighWord( z, j );\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nexport default pow2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.16666666666666602;\n\t}\n\treturn 0.16666666666666602 + (x * (-0.0027777777777015593 + (x * (0.00006613756321437934 + (x * (-0.0000016533902205465252 + (x * 4.1381367970572385e-8))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for the significand of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-significand-mask\n* @type {uinteger32}\n*\n* @example\n* import FLOAT64_HIGH_WORD_SIGNIFICAND_MASK from '@stdlib/constants/float64/high-word-significand-mask';\n* // returns 1048575\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for the significand of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the significand of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 1048575 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000000000 11111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x000fffff\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_SIGNIFICAND_MASK = 0x000fffff;\n\n\n// EXPORTS //\n\nexport default FLOAT64_HIGH_WORD_SIGNIFICAND_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of `2`.\n*\n* @module @stdlib/constants/float64/ln-two\n* @type {number}\n*\n* @example\n* import LN2 from '@stdlib/constants/float64/ln-two';\n* // returns 0.6931471805599453\n*/\n\n\n// MAIN //\n\n/**\n* Natural logarithm of `2`.\n*\n* ```tex\n* \\ln 2\n* ```\n*\n* @constant\n* @type {number}\n* @default 0.6931471805599453\n*/\nvar LN2 = 6.93147180559945309417232121458176568075500134360255254120680009493393621969694715605863326996418687542001481021e-01; // eslint-disable-line max-len\n\n\n// EXPORTS //\n\nexport default LN2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport { isPrimitive as isPositiveNumber } from '@stdlib/assert/is-positive-number';\nimport isPlainObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\nimport pow from '@stdlib/math/base/special/pow';\n\n\n// VARIABLES //\n\nvar DEFAULT_BASE = 10;\nvar DEFAULT_LEN = 100;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns evenly spaced numbers on a log scale.\n*\n* @param {number} start - exponent of starting value (inclusive)\n* @param {number} stop - exponent of stopping value (inclusive)\n* @param {NonNegativeInteger} [N=100] - number of values\n* @param {Options} [options] - function options\n* @param {PositiveNumber} [options.base=10] - base of log space\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} `N` argument must be a nonnegative integer\n* @throws {TypeError} `options` argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterLogspace( 0, 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 10\n*\n* v = iter.next().value;\n* // returns 100\n*\n* // ...\n*/\nfunction iterLogspace( start, stop, N, options ) {\n\tvar step;\n\tvar iter;\n\tvar FLG;\n\tvar b;\n\tvar n;\n\tvar d;\n\tvar i;\n\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( !isNumber( stop ) || isnan( stop ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', stop ) );\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( isNonNegativeInteger( N ) ) {\n\t\t\tn = N;\n\t\t\tb = DEFAULT_BASE;\n\t\t} else if ( isPlainObject( N ) ) {\n\t\t\tn = DEFAULT_LEN;\n\t\t\tif ( hasOwnProp( N, 'base' ) ) {\n\t\t\t\tif ( !isPositiveNumber( N.base ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'base', N.base ) );\n\t\t\t\t}\n\t\t\t\tb = N.base;\n\t\t\t} else {\n\t\t\t\tb = DEFAULT_BASE;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either a nonnegative integer or an object. Value: `%s`.', N ) );\n\t\t}\n\t} else if ( arguments.length >= 4 ) {\n\t\tif ( !isNonNegativeInteger( N ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t\t}\n\t\tn = N;\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'base' ) ) {\n\t\t\tif ( !isPositiveNumber( options.base ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'base', options.base ) );\n\t\t\t}\n\t\t\tb = options.base;\n\t\t} else {\n\t\t\tb = DEFAULT_BASE;\n\t\t}\n\t} else {\n\t\tn = DEFAULT_LEN;\n\t\tb = DEFAULT_BASE;\n\t}\n\td = n - 1;\n\tstep = (stop-start) / d;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( i === 0 ) {\n\t\t\treturn {\n\t\t\t\t'value': pow( b, start ),\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\tif ( i === d ) {\n\t\t\treturn {\n\t\t\t\t'value': pow( b, stop ),\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': pow( b, (i*step)+start ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterLogspace( start, stop, n, {\n\t\t\t'base': b\n\t\t});\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterLogspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which invokes a function for each iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* import randu from '@stdlib/random/iter/randu';\n*\n* function transform( v ) {\n*     return v * 10.0;\n* }\n*\n* var iter = iterMap( randu(), transform );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterMap( iterator, fcn, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\ti += 1;\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, v.value, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterMap( iterator[ iteratorSymbol ](), fcn, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which transforms iterated values from two or more iterators by applying the iterated values as arguments to a provided function.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @throws {TypeError} callback argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* function transform( x, y ) {\n*     return x + y;\n* }\n*\n* var it1 = array2iterator( [ 1.0, 2.0 ] );\n* var it2 = array2iterator( [ 3.0, 4.0 ] );\n*\n* var iter = iterMapN( it1, it2, transform );\n*\n* var v = iter.next().value;\n* // returns 4.0\n*\n* v = iter.next().value;\n* // returns 6.0\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterMapN() {\n\tvar iterators;\n\tvar thisArg;\n\tvar niter;\n\tvar clbk;\n\tvar iter;\n\tvar FLG;\n\tvar idx;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( !isFunction( arguments[ niter-1 ] ) ) {\n\t\tniter -= 1;\n\t\tthisArg = arguments[ niter ];\n\t}\n\tniter -= 1;\n\tclbk = arguments[ niter ];\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', clbk ) );\n\t}\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide two or more iterators.' );\n\t}\n\titerators = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\tif ( !isIteratorLike( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\titerators.push( arguments[ i ] );\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\tFLG = false;\n\tidx = -1;\n\ti = 0;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar args;\n\t\tvar v;\n\t\tvar i;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\targs = [];\n\t\tidx += 1;\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tv = iterators[ i ].next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\targs.push( v.value );\n\t\t}\n\t\targs.push( idx );\n\t\treturn {\n\t\t\t'value': clbk.apply( thisArg, args ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\targs.push( clbk );\n\t\targs.push( thisArg );\n\t\treturn iterMapN.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterMapN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether all iterated values are falsy.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {boolean} boolean indicating whether all iterated values are falsy\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterNone( it );\n* // returns false\n*/\nfunction iterNone( iterator ) {\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( v.value ) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterNone;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether every iterated value fails a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether every iterated value fails a test implemented by a predicate function\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* function predicate( v ) {\n*     return ( v <= 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 1 ] );\n*\n* var bool = iterNoneBy( it, predicate );\n* // returns true\n*/\nfunction iterNoneBy( iterator, predicate, thisArg ) {\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( predicate.call( thisArg, v.value, i ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterNoneBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns the nth iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - iteration number\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {*} nth iterated value\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var it = array2iterator( [ 0, 0, 1, 0, 0 ] );\n*\n* var v = iterNth( it, 3 );\n* // returns 1\n*/\nfunction iterNth( iterator, n ) {\n\tvar i;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\ti = 0;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( i === n ) {\n\t\t\treturn v.value;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterNth;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport MAX_LENGTH from '@stdlib/constants/array/max-array-length';\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is an array-like object\n*\n* @example\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( { 'length':10 } );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( 'beep' );\n* // returns false\n*/\nfunction isArrayLikeObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArrayLikeObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a generic array.\n*\n* @module @stdlib/constants/array/max-array-length\n*\n* @example\n* import MAX_ARRAY_LENGTH from '@stdlib/constants/array/max-array-length';\n* // returns 4294967295\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a generic array.\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar MAX_ARRAY_LENGTH = 4294967295>>>0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default MAX_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isArrayLike from '@stdlib/assert/is-array-like-object';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator pipeline.\n*\n* @param {(Function|FunctionArray)} iterFcn0 - iterator function or an array of iterator functions\n* @param {...Function} [iterFcn] - iterator function(s)\n* @throws {TypeError} all arguments must be functions\n* @throws {Error} must provide at least one iterator function\n* @returns {Function} iterator pipeline\n*\n* @example\n* import randu from '@stdlib/random/iter/randu';\n* import iterSomeBy from '@stdlib/iter/some-by';\n* import iterHead from '@stdlib/iter/head';\n* import iterThunk from '@stdlib/iter/pipeline-thunk';\n*\n* function threshold( r ) {\n*     return ( r > 0.95 );\n* }\n*\n* var it1 = iterThunk( iterHead, 100 );\n* var it2 = iterThunk( iterSomeBy, 5, threshold );\n*\n* var p = iterPipeline( it1, it2 );\n*\n* var bool = p( randu() );\n* // returns <boolean>\n*/\nfunction iterPipeline() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\n\tnFuncs = arguments.length;\n\tif ( nFuncs === 1 && isArrayLike( arguments[ 0 ] ) ) {\n\t\tf = arguments[ 0 ].slice();\n\t\tnFuncs = f.length;\n\t} else {\n\t\tf = [];\n\t\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\t\tf.push( arguments[ i ] );\n\t\t}\n\t}\n\tif ( nFuncs === 0 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide at least one iterator function.' );\n\t}\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid arguments. All arguments must be functions. Value: `%s`.', f[ i ] ) );\n\t\t}\n\t}\n\treturn pipeline;\n\n\t/**\n\t* Pipeline function.\n\t*\n\t* @private\n\t* @param {Iterator} iterator - source iterator\n\t* @throws {TypeError} must provide an iterator\n\t* @throws {TypeError} each iterator function, except the last iterator function, within an iterator pipeline must return an iterator\n\t* @returns {(Iterator|*)} an iterator or pipeline result\n\t*/\n\tfunction pipeline( iterator ) {\n\t\tvar iter;\n\t\tif ( !isIteratorLike( iterator ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t\t}\n\t\titer = iterator;\n\t\tfor ( i = 0; i < nFuncs-1; i++ ) {\n\t\t\titer = f[ i ]( iter );\n\t\t\tif ( !isIteratorLike( iter ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Each iterator function, except the last iterator function, within an iterator pipeline must return an iterator. Value: `%s`.', iter ) );\n\t\t\t}\n\t\t}\n\t\treturn f[ nFuncs-1 ]( iter );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterPipeline;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator \"thunk\".\n*\n* @param {Function} iterFcn - iterator function\n* @param {...*} [args] - function arguments\n* @throws {TypeError} first argument must be a function\n* @returns {Function} iterator \"thunk\"\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n* import iterSome from '@stdlib/iter/some';\n*\n* var it = array2iterator( [ 0, 0, 1, 1, 1 ] );\n*\n* var thunk = iterThunk( iterSome, 3 );\n*\n* var bool = thunk( it );\n* // returns true\n*/\nfunction iterThunk( iterFcn ) {\n\tvar pargs;\n\tvar nargs;\n\tvar i;\n\tif ( !isFunction( iterFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', iterFcn ) );\n\t}\n\tnargs = arguments.length;\n\tpargs = [];\n\tfor ( i = 1; i < nargs; i++ ) {\n\t\tpargs.push( arguments[ i ] );\n\t}\n\treturn thunk;\n\n\t/**\n\t* Invokes an iterator function with a provided iterator and previously provided iterator function arguments.\n\t*\n\t* @private\n\t* @param {Iterator} iter - input iterator\n\t* @throws {TypeError} must provide an iterator\n\t* @returns {*} iterator function result\n\t*/\n\tfunction thunk( iter ) {\n\t\tvar args;\n\t\tvar i;\n\t\tif ( !isIteratorLike( iter ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iter ) );\n\t\t}\n\t\targs = [ iter ];\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\targs.push( pargs[ i ] );\n\t\t}\n\t\treturn iterFcn.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterThunk;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport noop from '@stdlib/utils/noop';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which skips the last value of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} [clbk] - callback to invoke with the skipped value\n* @param {*} [thisArg] - callback execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var iter = iterPop( array2iterator( [ 1, 2 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterPop( iterator, clbk, thisArg ) {\n\tvar last;\n\tvar iter;\n\tvar FLG;\n\tvar cb;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tcb = clbk;\n\t} else {\n\t\tcb = noop;\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar out;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( i === 0 ) {\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tlast = v.value;\n\t\t\treturn next();\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\tcb.call( thisArg, last );\n\t\t\treturn v;\n\t\t}\n\t\tout = {\n\t\t\t'value': last,\n\t\t\t'done': false\n\t\t};\n\t\tlast = v.value;\n\t\treturn out;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterPop( iterator[ iteratorSymbol ](), cb, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterPop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which appends additional values to the end of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {*} items - values to append\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var iter = iterPush( array2iterator( [ 1, 2 ] ), 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterPush( iterator ) {\n\tvar items;\n\tvar iter;\n\tvar ret;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\titems = [];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\titems.push( arguments[ i ] );\n\t}\n\tFLG = 0;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG === 2 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( FLG === 1 ) {\n\t\t\ti += 1;\n\t\t\tif ( i >= items.length ) {\n\t\t\t\tFLG = 2;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'value': items[ i ],\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = 1;\n\t\t\ti += 1;\n\t\t\tif ( i >= items.length ) {\n\t\t\t\tFLG = 2;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tret = v;\n\t\t\treturn {\n\t\t\t\t'value': items[ i ],\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = 2;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [ iterator[ iteratorSymbol ]() ];\n\t\tfor ( i = 0; i < items.length; i++ ) {\n\t\t\targs.push( items[ i ] );\n\t\t}\n\t\treturn iterPush.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterPush;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which rejects a provided iterator's values according to a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* function predicate( v ) {\n*     return ( v > 2 );\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterReject( src, predicate );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterReject( iterator, predicate, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tif ( !predicate.call( thisArg, v.value, i ) ) {\n\t\t\t\treturn {\n\t\t\t\t\t'value': v.value,\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterReject( iterator[ iteratorSymbol ](), predicate, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterReject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which replicates each iterated value a specified number of times.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - number of times to replicate\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var src = array2iterator( [ 1, 2, 3, 4 ] );\n* var iter = iterReplicate( src, 2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\nfunction iterReplicate( iterator, n ) {\n\tvar value;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\ti = n - 1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += 1;\n\t\tif ( i === n ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\ti = 0; // reset the counter\n\t\t\tvalue = v.value; // cache value\n\t\t}\n\t\treturn {\n\t\t\t'value': value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterReplicate( iterator[ iteratorSymbol ](), n );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterReplicate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which replicates each iterated value according to a provided function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - function which specifies how many times to replicate an iterated value\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* function fcn( v, i ) {\n*     return i + 1;\n* }\n*\n* var src = array2iterator( [ 1, 2, 3, 4 ] );\n* var iter = iterReplicateBy( src, fcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 3\n*/\nfunction iterReplicateBy( iterator, fcn, thisArg ) {\n\tvar value;\n\tvar iter;\n\tvar FLG;\n\tvar t;\n\tvar n;\n\tvar i;\n\tvar j;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tt = -1; // total iteration index\n\ti = -1; // replicate counter\n\tj = -1; // source iteration index\n\tn = 0;  // number of replicates\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @throws {TypeError} callback function must return an integer\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tt += 1;\n\t\t\ti += 1;\n\t\t\tif ( i >= n ) {\n\t\t\t\tv = iterator.next();\n\t\t\t\tif ( v.done ) {\n\t\t\t\t\tFLG = true;\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\tvalue = v.value; // cache value\n\t\t\t\tj += 1;\n\t\t\t\tn = fcn.call( thisArg, value, j, t );\n\t\t\t\tif ( !isInteger( n ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid return value. Callback function must return an integer. Value: `%s`.', n ) );\n\t\t\t\t}\n\t\t\t\ti = 0; // reset the counter\n\t\t\t\tif ( n > 0 ) {\n\t\t\t\t\t// Return the newly cached value...\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Return the cached value...\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterReplicateBy( iterator[ iteratorSymbol ](), fcn, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterReplicateBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\nimport noop from '@stdlib/utils/noop';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which skips the first value of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} [clbk] - callback to invoke with the skipped value\n* @param {*} [thisArg] - callback execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var iter = iterShift( array2iterator( [ 1, 2 ] ) );\n*\n* var v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterShift( iterator, clbk, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar cb;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tcb = clbk;\n\t} else {\n\t\tcb = noop;\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( i === 0 ) {\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tcb.call( thisArg, v.value );\n\t\t\treturn next();\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterShift( iterator[ iteratorSymbol ](), cb, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterShift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\n\n\n// VARIABLES //\n\nvar BEGIN = 0;\nvar END = 1e308;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns a subsequence of iterated values from a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {NonNegativeInteger} [begin=0] - start iteration index (inclusive)\n* @param {NonNegativeInteger} [end=1e308] - end iteration index (non-inclusive)\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a nonnegative integer\n* @returns {Iterator} iterator\n*\n* @example\n* import randu from '@stdlib/random/iter/randu';\n*\n* var iter = iterSlice( randu(), 10, 20 );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterSlice( iterator, begin, end ) {\n\tvar iter;\n\tvar FLG;\n\tvar N;\n\tvar M;\n\tvar n;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tN = begin;\n\t\tif ( arguments.length > 2 ) {\n\t\t\tif ( !isNonNegativeInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tM = end;\n\t\t} else {\n\t\t\tM = END;\n\t\t}\n\t} else {\n\t\tN = BEGIN;\n\t\tM = END;\n\t}\n\tn = M - N;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', finish );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += 1;\n\t\tif ( n > 0 && i < N ) {\n\t\t\t// Lazily consume the first `N` values from the provided iterator...\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tv = iterator.next();\n\t\t\t}\n\t\t}\n\t\tif ( v && v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tn -= 1;\n\t\tif ( n < 0 ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t}\n\t\treturn v;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction finish( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterSlice( iterator[ iteratorSymbol ](), N, M );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterSlice;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether at least `n` iterated values are truthy.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - minimum number of truthy elements\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {boolean} boolean indicating whether at least `n` iterated values are truthy\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var it = array2iterator( [ 0, 0, 1, 1, 1 ] );\n*\n* var bool = iterSome( it, 3 );\n* // returns true\n*/\nfunction iterSome( iterator, n ) {\n\tvar count;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tcount = 0;\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( v.value ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterSome;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether at least `n` iterated values pass a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - number of successful values\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a function\n* @returns {boolean} boolean indicating whether at least `n` iterated values pass a test implemented by a predicate function\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* function predicate( v ) {\n*     return ( v > 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 0, 0, 1 ] );\n*\n* var bool = iterSomeBy( it, 3, predicate );\n* // returns true\n*/\nfunction iterSomeBy( iterator, n, predicate, thisArg ) {\n\tvar count;\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tcount = 0;\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( predicate.call( thisArg, v.value, i ) ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterSomeBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar DEFAULT_LENGTH = 1e308;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns a sequence of numbers according to a specified increment.\n*\n* @param {number} start - starting value (inclusive)\n* @param {number} increment - increment\n* @param {number} [N=1e308] - number of values\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a nonnegative integer\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterStep( 0, 2, 10 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* // ...\n*/\nfunction iterStep( start, increment, N ) {\n\tvar iter;\n\tvar FLG;\n\tvar n;\n\tvar i;\n\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( !isNumber( increment ) || isnan( increment ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', increment ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isNonNegativeInteger( N ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t\t}\n\t\tn = N;\n\t} else {\n\t\tn = DEFAULT_LENGTH;\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': start + (i*increment),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterStep( start, increment, n );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterStep;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isPositiveInteger from '@stdlib/assert/is-positive-integer';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar DEFAULT_OFFSET = 0;\nvar DEFAULT_EAGER = false;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which steps by a specified amount.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} stride - stride\n* @param {NonNegativeInteger} [offset=0] - offset\n* @param {boolean} [eager=false] - boolean indicating whether to eagerly advance the input iterator when provided a non-zero offset\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a nonnegative integer\n* @throws {TypeError} fourth argument must be a boolean\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var arr = array2iterator( [ 0, 1, 2, 3, 4, 5, 6, 7 ] );\n*\n* var iter = iterStrided( arr, 2, 1 );\n*\n* var r = iter.next().value;\n* // returns 1\n*\n* r = iter.next().value;\n* // returns 3\n*\n* r = iter.next().value;\n* // returns 5\n*\n* // ...\n*/\nfunction iterStrided( iterator, stride, offset, eager ) {\n\tvar iter;\n\tvar bool;\n\tvar FLG;\n\tvar idx;\n\tvar ret;\n\tvar o;\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( stride ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', stride ) );\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tbool = DEFAULT_EAGER;\n\t} else if ( arguments.length > 3 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tif ( !isBoolean( eager ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a boolean. Value: `%s`.', eager ) );\n\t\t}\n\t\tbool = eager;\n\t} else {\n\t\tidx = DEFAULT_OFFSET;\n\t\tbool = DEFAULT_EAGER;\n\t}\n\tif ( bool ) {\n\t\tfor ( i = 0; i < idx; i++ ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\tret = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// NOTE: if we've successfully advanced the input iterator, `i` is currently equal to `idx` (i.e., the offset)\n\t\ti -= 1;\n\t} else {\n\t\ti = -1;\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\to = idx;\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\tif ( ret ) {\n\t\t\t\tv = ret;\n\t\t\t\tret = null;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += 1;\n\t\twhile ( i < idx ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\ti += 1;\n\t\t}\n\t\tidx += stride;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t}\n\t\treturn v;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterStrided( iterator[ iteratorSymbol ](), stride, o, bool );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterStrided;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar DEFAULT_OFFSET = 0;\nvar DEFAULT_EAGER = false;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which steps according to a provided callback function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - stride function\n* @param {NonNegativeInteger} [offset=0] - offset\n* @param {boolean} [eager=false] - boolean indicating whether to eagerly advance the input iterator when provided a non-zero offset\n* @param {*} [thisArg] - stride function execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a nonnegative integer\n* @throws {TypeError} fourth argument must be a boolean\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var arr = array2iterator( [ 0, 1, 2, 3, 4, 5, 6, 7 ] );\n*\n* function stride( v, i ) {\n*     return (i % 10)+1;\n* }\n*\n* var iter = iterStridedBy( arr, stride );\n*\n* var r = iter.next().value;\n* // returns 0\n*\n* r = iter.next().value;\n* // returns 1\n*\n* r = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction iterStridedBy( iterator, fcn, offset, eager, thisArg ) {\n\tvar stride;\n\tvar iter;\n\tvar bool;\n\tvar FLG;\n\tvar idx;\n\tvar ctx;\n\tvar ret;\n\tvar o;\n\tvar v;\n\tvar i;\n\tvar s;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( isNonNegativeInteger( offset ) ) {\n\t\t\tidx = offset;\n\t\t} else {\n\t\t\tidx = DEFAULT_OFFSET;\n\t\t\tctx = offset;\n\t\t}\n\t\tbool = DEFAULT_EAGER;\n\t} else if ( arguments.length === 4 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tif ( isBoolean( eager ) ) {\n\t\t\tbool = eager;\n\t\t} else {\n\t\t\tbool = DEFAULT_EAGER;\n\t\t\tctx = eager;\n\t\t}\n\t} else if ( arguments.length > 4 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tif ( !isBoolean( eager ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a boolean. Value: `%s`.', eager ) );\n\t\t}\n\t\tbool = eager;\n\t\tctx = thisArg;\n\t} else {\n\t\tidx = DEFAULT_OFFSET;\n\t\tbool = DEFAULT_EAGER;\n\t}\n\tif ( bool ) {\n\t\tfor ( i = 0; i < idx; i++ ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\tret = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// NOTE: if we've successfully advanced the input iterator, `i` is currently equal to `idx` (i.e., the offset)\n\t\ti -= 1;\n\t} else {\n\t\ti = -1;\n\t}\n\ts = -1;\n\tstride = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\to = idx;\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @throws {TypeError} callback function must return a positive integer\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\tif ( ret ) {\n\t\t\t\tv = ret;\n\t\t\t\tret = null;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += 1;\n\t\twhile ( i < idx ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn {\n\t\t\t\t\t'done': true\n\t\t\t\t};\n\t\t\t}\n\t\t\ti += 1;\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\ts += 1;\n\t\tstride = fcn.call( ctx, v.value, i, s, stride );\n\t\tif ( !isPositiveInteger( stride ) ) {\n\t\t\tthrow new TypeError( format( 'invalid return value. Callback function must return a positive integer. Value: `%s`.', stride ) );\n\t\t}\n\t\tidx += stride;\n\t\treturn v;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterStridedBy( iterator[ iteratorSymbol ](), fcn, o, bool, ctx );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterStridedBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar TYPE = 'function';\n\n\n// MAIN //\n\n/**\n* Tests if an array-like object supports the accessor (get/set) protocol.\n*\n* @param {Object} value - value to test\n* @returns {boolean} boolean indicating whether a value is an accessor array\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n*\n* var bool = isAccessorArray( new Complex128Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isAccessorArray( [] );\n* // returns false\n*/\nfunction isAccessorArray( value ) {\n\treturn ( typeof value.get === TYPE && typeof value.set === TYPE ); // eslint-disable-line valid-typeof\n}\n\n\n// EXPORTS //\n\nexport default isAccessorArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar SETTERS = {\n\t'complex128': setComplex128,\n\t'complex64': setComplex64,\n\t'default': setArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Sets an element in a `Complex128Array`.\n*\n* @private\n* @param {Complex128Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n* import Complex128 from '@stdlib/complex/float64';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* var arr = new Complex128Array( [ 1, 2, 3, 4 ] );\n*\n* setComplex128( arr, 1, new Complex128( 10.0, 11.0 ) );\n* var v = arr.get( 1 );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 10.0\n*\n* var im = imag( v );\n* // returns 11.0\n*/\nfunction setComplex128( arr, idx, value ) {\n\tarr.set( value, idx );\n}\n\n/**\n* Sets an element in a `Complex64Array`.\n*\n* @private\n* @param {Complex64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* setComplex64( arr, 1, new Complex64( 10.0, 11.0 ) );\n* var v = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 11.0\n*/\nfunction setComplex64( arr, idx, value ) {\n\tarr.set( value, idx );\n}\n\n/**\n* Sets an element in an array-like object supporting the get/set protocol.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* function get( idx ) {\n*    return arr[ idx ];\n* }\n*\n* function set( value, idx ) {\n*    arr[ idx ] = value;\n* }\n*\n* arr.get = get;\n* arr.set = set;\n*\n* setArrayLike( arr, 2, 10 );\n*\n* var v = arr[ 2 ];\n* // returns 10\n*/\nfunction setArrayLike( arr, idx, value ) {\n\tarr.set( value, idx );\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for setting an element in an array-like object supporting the get/set protocol.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n* import dtype from '@stdlib/array/dtype';\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var set = setter( dtype( arr ) );\n* set( arr, 1, new Complex64( 10.0, 11.0 ) );\n*\n* var v = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 11.0\n*/\nfunction setter( dtype ) {\n\tvar f = SETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn SETTERS.default;\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar SETTERS = {\n\t'float64': setFloat64,\n\t'float32': setFloat32,\n\t'int32': setInt32,\n\t'int16': setInt16,\n\t'int8': setInt8,\n\t'uint32': setUint32,\n\t'uint16': setUint16,\n\t'uint8': setUint8,\n\t'uint8c': setUint8c,\n\t'generic': setGeneric,\n\t'default': setArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Sets an element in a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( 4 );\n*\n* setFloat64( arr, 2, 3.0 );\n*\n* var v = arr[ 2 ];\n* // returns 3.0\n*/\nfunction setFloat64( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n*\n* var arr = new Float32Array( 4 );\n*\n* setFloat32( arr, 2, 3.0 );\n*\n* var v = arr[ 2 ];\n* // returns 3.0\n*/\nfunction setFloat32( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Int32Array from '@stdlib/array/int32';\n*\n* var arr = new Int32Array( 4 );\n*\n* setInt32( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setInt32( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Int16Array from '@stdlib/array/int16';\n*\n* var arr = new Int16Array( 4 );\n*\n* setInt16( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setInt16( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Int8Array from '@stdlib/array/int8';\n*\n* var arr = new Int8Array( 4 );\n*\n* setInt8( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setInt8( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Uint32Array from '@stdlib/array/uint32';\n*\n* var arr = new Uint32Array( 4 );\n*\n* setUint32( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint32( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Uint16Array from '@stdlib/array/uint16';\n*\n* var arr = new Uint16Array( 4 );\n*\n* setUint16( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint16( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* var arr = new Uint8Array( 4 );\n*\n* setUint8( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint8( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Uint8ClampedArray from '@stdlib/array/uint8c';\n*\n* var arr = new Uint8ClampedArray( 4 );\n*\n* setUint8c( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint8c( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a generic `Array`.\n*\n* @private\n* @param {Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* setGeneric( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setGeneric( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an indexed array-like object.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* setArrayLike( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setArrayLike( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for setting an element in an indexed array-like object.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* import dtype from '@stdlib/array/dtype';\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var set = setter( dtype( arr ) );\n* set( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setter( dtype ) {\n\tvar f = SETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn SETTERS.default;\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n// Mapping from array constructors to data types...\nvar ctor2dtypes = {\n\t'Float32Array': 'float32',\n\t'Float64Array': 'float64',\n\t'Array': 'generic',\n\t'Int16Array': 'int16',\n\t'Int32Array': 'int32',\n\t'Int8Array': 'int8',\n\t'Uint16Array': 'uint16',\n\t'Uint32Array': 'uint32',\n\t'Uint8Array': 'uint8',\n\t'Uint8ClampedArray': 'uint8c',\n\t'Complex64Array': 'complex64',\n\t'Complex128Array': 'complex128'\n};\n\n\n// EXPORTS //\n\nexport default ctor2dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasFloat32Array = ( typeof Float32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float32Array\n*\n* @example\n* var bool = isFloat32Array( new Float32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat32Array( [] );\n* // returns false\n*/\nfunction isFloat32Array( value ) {\n\treturn (\n\t\t( hasFloat32Array && value instanceof Float32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isFloat32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float32Array === 'function' ) ? Float32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float32Array === 'function' ) ? Float32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of single-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float32\n*\n* @example\n* import ctor from '@stdlib/array/float32';\n*\n* var arr = new ctor( 10 );\n* // returns <Float32Array>\n*/\n\n// MODULES //\n\nimport hasFloat32ArraySupport from '@stdlib/assert/has-float32array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFloat32Array from './../../is-float32array';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport GlobalFloat32Array from './float32array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Float32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float32Array` support\n*\n* @example\n* var bool = hasFloat32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat32Array( [ 1.0, 3.14, -3.14, 5.0e40 ] );\n\t\tbool = (\n\t\t\tisFloat32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.140000104904175 &&\n\t\t\tarr[ 2 ] === -3.140000104904175 &&\n\t\t\tarr[ 3 ] === PINF\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasFloat32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of single-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasInt32Array = ( typeof Int32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int32Array\n*\n* @example\n* var bool = isInt32Array( new Int32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt32Array( [] );\n* // returns false\n*/\nfunction isInt32Array( value ) {\n\treturn (\n\t\t( hasInt32Array && value instanceof Int32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInt32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum signed 32-bit integer.\n*\n* @module @stdlib/constants/int32/max\n* @type {integer32}\n*\n* @example\n* import INT32_MAX from '@stdlib/constants/int32/max';\n* // returns 2147483647\n*/\n\n\n// MAIN //\n\n/**\n* Maximum signed 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{31} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 01111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 2147483647\n*/\nvar INT32_MAX = 2147483647|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int32Array === 'function' ) ? Int32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int32Array === 'function' ) ? Int32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int32\n*\n* @example\n* import ctor from '@stdlib/array/int32';\n*\n* var arr = new ctor( 10 );\n* // returns <Int32Array>\n*/\n\n// MODULES //\n\nimport hasInt32ArraySupport from '@stdlib/assert/has-int32array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInt32Array from './../../is-int32array';\nimport INT32_MAX from '@stdlib/constants/int32/max';\nimport INT32_MIN from '@stdlib/constants/int32/min';\nimport GlobalInt32Array from './int32array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Int32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int32Array` support\n*\n* @example\n* var bool = hasInt32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt32Array( [ 1, 3.14, -3.14, INT32_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT32_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasInt32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 32-bit integer.\n*\n* @module @stdlib/constants/int32/min\n* @type {integer32}\n*\n* @example\n* import INT32_MIN from '@stdlib/constants/int32/min';\n* // returns -2147483648\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{31})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 10000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -2147483648\n*/\nvar INT32_MIN = -2147483648|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT32_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasInt16Array = ( typeof Int16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int16Array\n*\n* @example\n* var bool = isInt16Array( new Int16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt16Array( [] );\n* // returns false\n*/\nfunction isInt16Array( value ) {\n\treturn (\n\t\t( hasInt16Array && value instanceof Int16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInt16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum signed 16-bit integer.\n*\n* @module @stdlib/constants/int16/max\n* @type {integer32}\n*\n* @example\n* import INT16_MAX from '@stdlib/constants/int16/max';\n* // returns 32767\n*/\n\n\n// MAIN //\n\n/**\n* Maximum signed 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{15} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 32767\n*/\nvar INT16_MAX = 32767|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT16_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int16Array === 'function' ) ? Int16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int16Array === 'function' ) ? Int16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int16\n*\n* @example\n* import ctor from '@stdlib/array/int16';\n*\n* var arr = new ctor( 10 );\n* // returns <Int16Array>\n*/\n\n// MODULES //\n\nimport hasInt16ArraySupport from '@stdlib/assert/has-int16array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInt16Array from './../../is-int16array';\nimport INT16_MAX from '@stdlib/constants/int16/max';\nimport INT16_MIN from '@stdlib/constants/int16/min';\nimport GlobalInt16Array from './int16array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Int16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int16Array` support\n*\n* @example\n* var bool = hasInt16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt16Array( [ 1, 3.14, -3.14, INT16_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT16_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasInt16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 16-bit integer.\n*\n* @module @stdlib/constants/int16/min\n* @type {integer32}\n*\n* @example\n* import INT16_MIN from '@stdlib/constants/int16/min';\n* // returns -32768\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{15})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 1000000000000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -32768\n*/\nvar INT16_MIN = -32768|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT16_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasUint8ClampedArray = ( typeof Uint8ClampedArray === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8ClampedArray.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8ClampedArray\n*\n* @example\n* var bool = isUint8ClampedArray( new Uint8ClampedArray( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8ClampedArray( [] );\n* // returns false\n*/\nfunction isUint8ClampedArray( value ) {\n\treturn (\n\t\t( hasUint8ClampedArray && value instanceof Uint8ClampedArray ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8ClampedArray]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isUint8ClampedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @module @stdlib/array/uint8c\n*\n* @example\n* import ctor from '@stdlib/array/uint8c';\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8ClampedArray>\n*/\n\n// MODULES //\n\nimport hasUint8ClampedArraySupport from '@stdlib/assert/has-uint8clampedarray-support'; // eslint-disable-line id-length\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ClampedArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isUint8ClampedArray from './../../is-uint8clampedarray';\nimport GlobalUint8ClampedArray from './uint8clampedarray.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8ClampedArray` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8ClampedArray` support\n*\n* @example\n* var bool = hasUint8ClampedArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ClampedArraySupport() { // eslint-disable-line id-length\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8ClampedArray !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalUint8ClampedArray( [ -1, 0, 1, 3.14, 4.99, 255, 256 ] );\n\t\tbool = (\n\t\t\tisUint8ClampedArray( arr ) &&\n\t\t\tarr[ 0 ] === 0 &&   // clamped\n\t\t\tarr[ 1 ] === 0 &&\n\t\t\tarr[ 2 ] === 1 &&\n\t\t\tarr[ 3 ] === 3 &&   // round to nearest\n\t\t\tarr[ 4 ] === 5 &&   // round to nearest\n\t\t\tarr[ 5 ] === 255 &&\n\t\t\tarr[ 6 ] === 255    // clamped\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasUint8ClampedArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasInt8Array = ( typeof Int8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int8Array\n*\n* @example\n* var bool = isInt8Array( new Int8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt8Array( [] );\n* // returns false\n*/\nfunction isInt8Array( value ) {\n\treturn (\n\t\t( hasInt8Array && value instanceof Int8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInt8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum signed 8-bit integer.\n*\n* @module @stdlib/constants/int8/max\n* @type {integer32}\n*\n* @example\n* import INT8_MAX from '@stdlib/constants/int8/max';\n* // returns 127\n*/\n\n\n// MAIN //\n\n/**\n* Maximum signed 8-bit integer.\n*\n* ## Notes\n*\n* The number is given by\n*\n* ```tex\n* 2^{7} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 01111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 127\n*/\nvar INT8_MAX = 127|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT8_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int8Array === 'function' ) ? Int8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int8Array === 'function' ) ? Int8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int8\n*\n* @example\n* import ctor from '@stdlib/array/int8';\n*\n* var arr = new ctor( 10 );\n* // returns <Int8Array>\n*/\n\n// MODULES //\n\nimport hasInt8ArraySupport from '@stdlib/assert/has-int8array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInt8Array from './../../is-int8array';\nimport INT8_MAX from '@stdlib/constants/int8/max';\nimport INT8_MIN from '@stdlib/constants/int8/min';\nimport GlobalInt8Array from './int8array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Int8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int8Array` support\n*\n* @example\n* var bool = hasInt8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt8Array( [ 1, 3.14, -3.14, INT8_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&     // truncation\n\t\t\tarr[ 2 ] === -3 &&    // truncation\n\t\t\tarr[ 3 ] === INT8_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasInt8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 8-bit integer.\n*\n* @module @stdlib/constants/int8/min\n* @type {integer32}\n*\n* @example\n* import INT8_MIN from '@stdlib/constants/int8/min';\n* // returns -128\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 8-bit integer.\n*\n* ## Notes\n*\n* The number is given by\n*\n* ```tex\n* -(2^{7})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 10000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -128\n*/\nvar INT8_MIN = -128|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT8_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasArrayBuffer = ( typeof ArrayBuffer === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an ArrayBuffer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an ArrayBuffer\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var bool = isArrayBuffer( new ArrayBuffer( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isArrayBuffer( [] );\n* // returns false\n*/\nfunction isArrayBuffer( value ) {\n\treturn (\n\t\t( hasArrayBuffer && value instanceof ArrayBuffer ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object ArrayBuffer]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArrayBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport defineProperty from '@stdlib/utils/define-property';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport format from '@stdlib/string/format';\nimport toStr from './tostring.js';\nimport toJSON from './tojson.js';\n\n\n// MAIN //\n\n/**\n* 128-bit complex number constructor.\n*\n* @constructor\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @throws {TypeError} must invoke using the `new` keyword\n* @throws {TypeError} real component must be a number\n* @throws {TypeError} imaginary component must be a number\n* @returns {Complex128} 128-bit complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n* // returns <Complex128>\n*/\nfunction Complex128( real, imag ) {\n\tif ( !( this instanceof Complex128 ) ) {\n\t\tthrow new TypeError( 'invalid invocation. Constructor must be called with the `new` keyword.' );\n\t}\n\tif ( !isNumber( real ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Real component must be a number. Value: `%s`.', real ) );\n\t}\n\tif ( !isNumber( imag ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Imaginary component must be a number. Value: `%s`.', imag ) );\n\t}\n\tdefineProperty( this, 're', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': real\n\t});\n\tdefineProperty( this, 'im', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': imag\n\t});\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var nbytes = Complex128.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex128, 'BYTES_PER_ELEMENT', 8 );\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128.prototype\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var nbytes = z.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex128.prototype, 'BYTES_PER_ELEMENT', 8 );\n\n/**\n* Length (in bytes) of a complex number.\n*\n* @name byteLength\n* @memberof Complex128.prototype\n* @type {integer}\n* @returns {integer} byte length\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var nbytes = z.byteLength;\n* // returns 16\n*/\nsetReadOnly( Complex128.prototype, 'byteLength', 16 );\n\n/**\n* Serializes a complex number as a string.\n*\n* @name toString\n* @memberof Complex128.prototype\n* @type {Function}\n* @returns {string} serialized complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var str = z.toString();\n* // returns '5 + 3i'\n*/\nsetReadOnly( Complex128.prototype, 'toString', toStr );\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Complex128` instance.\n*\n* @name toJSON\n* @memberof Complex128.prototype\n* @type {Function}\n* @returns {Object} serialized complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var obj = z.toJSON();\n* // returns { 'type': 'Complex128', 're': 5.0, 'im': 3.0 }\n*/\nsetReadOnly( Complex128.prototype, 'toJSON', toJSON );\n\n\n// EXPORTS //\n\nexport default Complex128;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a string.\n*\n* @private\n* @returns {string} serialized complex number\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar str = '' + this.re;\n\tif ( this.im < 0 ) {\n\t\tstr += ' - ' + (-this.im);\n\t} else {\n\t\tstr += ' + ' + this.im;\n\t}\n\tstr += 'i';\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* @private\n* @returns {Object} JSON representation\n*/\nfunction toJSON() {\n\t/* eslint-disable no-invalid-this */\n\tvar out = {};\n\tout.type = 'Complex128';\n\tout.re = this.re;\n\tout.im = this.im;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar fround = ( typeof Math.fround === 'function' ) ? Math.fround : null; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default fround;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float32Array from '@stdlib/array/float32';\n\n\n// VARIABLES //\n\nvar FLOAT32_VIEW = new Float32Array( 1 );\n\n\n// MAIN //\n\n/**\n* Converts a double-precision floating-point number to the nearest single-precision floating-point number.\n*\n* @param {number} x - double-precision floating-point number\n* @returns {number} nearest single-precision floating-point number\n*\n* @example\n* var y = float64ToFloat32( 1.337 );\n* // returns 1.3370000123977661\n*/\nfunction float64ToFloat32( x ) {\n\tFLOAT32_VIEW[ 0 ] = x;\n\treturn FLOAT32_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nexport default float64ToFloat32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a double-precision floating-point number to the nearest single-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/to-float32\n*\n* @example\n* import float64ToFloat32 from '@stdlib/number/float64/base/to-float32';\n*\n* var y = float64ToFloat32( 1.337 );\n* // returns 1.3370000123977661\n*/\n\n// MODULES //\n\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar float64ToFloat32;\nif ( typeof builtin === 'function' ) {\n\tfloat64ToFloat32 = builtin;\n} else {\n\tfloat64ToFloat32 = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default float64ToFloat32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport defineProperty from '@stdlib/utils/define-property';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport float64ToFloat32 from '@stdlib/number/float64/base/to-float32';\nimport format from '@stdlib/string/format';\nimport toStr from './tostring.js';\nimport toJSON from './tojson.js';\n\n\n// MAIN //\n\n/**\n* 64-bit complex number constructor.\n*\n* @constructor\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @throws {TypeError} must invoke using the `new` keyword\n* @throws {TypeError} real component must be a number\n* @throws {TypeError} imaginary component must be a number\n* @returns {Complex64} 64-bit complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n* // returns <Complex64>\n*/\nfunction Complex64( real, imag ) {\n\tif ( !( this instanceof Complex64 ) ) {\n\t\tthrow new TypeError( 'invalid invocation. Constructor must be called with the `new` keyword.' );\n\t}\n\tif ( !isNumber( real ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Real component must be a number. Value: `%s`.', real ) );\n\t}\n\tif ( !isNumber( imag ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Imaginary component must be a number. Value: `%s`.', imag ) );\n\t}\n\tdefineProperty( this, 're', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': float64ToFloat32( real )\n\t});\n\tdefineProperty( this, 'im', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': float64ToFloat32( imag )\n\t});\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var nbytes = Complex64.BYTES_PER_ELEMENT;\n* // returns 4\n*/\nsetReadOnly( Complex64, 'BYTES_PER_ELEMENT', 4 );\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64.prototype\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var nbytes = z.BYTES_PER_ELEMENT;\n* // returns 4\n*/\nsetReadOnly( Complex64.prototype, 'BYTES_PER_ELEMENT', 4 );\n\n/**\n* Length (in bytes) of a complex number.\n*\n* @name byteLength\n* @memberof Complex64.prototype\n* @type {integer}\n* @returns {integer} byte length\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var nbytes = z.byteLength;\n* // returns 8\n*/\nsetReadOnly( Complex64.prototype, 'byteLength', 8 );\n\n/**\n* Serializes a complex number as a string.\n*\n* @name toString\n* @memberof Complex64.prototype\n* @type {Function}\n* @returns {string} serialized complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var str = z.toString();\n* // returns '5 + 3i'\n*/\nsetReadOnly( Complex64.prototype, 'toString', toStr );\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Complex64` instance.\n*\n* @name toJSON\n* @memberof Complex64.prototype\n* @type {Function}\n* @returns {Object} serialized complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var obj = z.toJSON();\n* // returns { 'type': 'Complex64', 're': 5.0, 'im': 3.0 }\n*/\nsetReadOnly( Complex64.prototype, 'toJSON', toJSON );\n\n\n// EXPORTS //\n\nexport default Complex64;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Complex128 from '@stdlib/complex/float64';\nimport Complex64 from '@stdlib/complex/float32';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a complex number-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex number-like object.\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n* import Complex64 from '@stdlib/complex/float32';\n*\n* var x = new Complex128( 4.0, 2.0 );\n* var bool = isComplexLike( x );\n* // returns true\n*\n* x = new Complex64( 4.0, 2.0 );\n* bool = isComplexLike( x );\n* // returns true\n*/\nfunction isComplexLike( value ) {\n\tif ( value instanceof Complex128 || value instanceof Complex64 ) {\n\t\treturn true;\n\t}\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.re === 'number' &&\n\t\ttypeof value.im === 'number'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isComplexLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the real component of a single-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} real component\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var re = realf( z );\n* // returns 5.0\n*/\nfunction realf( z ) {\n\treturn z.re;\n}\n\n\n// EXPORTS //\n\nexport default realf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the imaginary component of a single-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} imaginary component\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var im = imagf( z );\n* // returns 3.0\n*/\nfunction imagf( z ) {\n\treturn z.im;\n}\n\n\n// EXPORTS //\n\nexport default imagf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float32Array from '@stdlib/array/float32';\n\n\n// MAIN //\n\n/**\n* Reinterprets a `Complex64Array` as a `Float32Array`.\n*\n* @param {Complex64Array} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float32Array} `Float32Array` view\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n*\n* var x = new Complex64Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float32Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction reinterpret( x, offset ) {\n\treturn new Float32Array( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), 2*(x.length-offset) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default reinterpret;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float64Array from '@stdlib/array/float64';\n\n\n// MAIN //\n\n/**\n* Reinterprets a `Complex128Array` as a `Float64Array`.\n*\n* @param {Complex128Array} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float64Array} `Float64Array` view\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n*\n* var x = new Complex128Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float64Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction reinterpret( x, offset ) {\n\treturn new Float64Array( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), 2*(x.length-offset) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default reinterpret;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a string.\n*\n* @private\n* @returns {string} serialized complex number\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar str = '' + this.re;\n\tif ( this.im < 0 ) {\n\t\tstr += ' - ' + (-this.im);\n\t} else {\n\t\tstr += ' + ' + this.im;\n\t}\n\tstr += 'i';\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* @private\n* @returns {Object} JSON representation\n*/\nfunction toJSON() {\n\t/* eslint-disable no-invalid-this */\n\tvar out = {};\n\tout.type = 'Complex64';\n\tout.re = this.re;\n\tout.im = this.im;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar GETTERS = {\n\t'float64': getFloat64,\n\t'float32': getFloat32,\n\t'int32': getInt32,\n\t'int16': getInt16,\n\t'int8': getInt8,\n\t'uint32': getUint32,\n\t'uint16': getUint16,\n\t'uint8': getUint8,\n\t'uint8c': getUint8c,\n\t'generic': getGeneric,\n\t'default': getArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Returns an element from a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getFloat64( arr, 2 );\n* // returns 3.0\n*/\nfunction getFloat64( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n*\n* var arr = new Float32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getFloat32( arr, 2 );\n* // returns 3.0\n*/\nfunction getFloat32( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Int32Array from '@stdlib/array/int32';\n*\n* var arr = new Int32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt32( arr, 2 );\n* // returns 3\n*/\nfunction getInt32( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Int16Array from '@stdlib/array/int16';\n*\n* var arr = new Int16Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt16( arr, 2 );\n* // returns 3\n*/\nfunction getInt16( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Int8Array from '@stdlib/array/int8';\n*\n* var arr = new Int8Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt8( arr, 2 );\n* // returns 3\n*/\nfunction getInt8( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Uint32Array from '@stdlib/array/uint32';\n*\n* var arr = new Uint32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint32( arr, 2 );\n* // returns 3\n*/\nfunction getUint32( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Uint16Array from '@stdlib/array/uint16';\n*\n* var arr = new Uint16Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint16( arr, 2 );\n* // returns 3\n*/\nfunction getUint16( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* var arr = new Uint8Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint8( arr, 2 );\n* // returns 3\n*/\nfunction getUint8( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Uint8ClampedArray from '@stdlib/array/uint8c';\n*\n* var arr = new Uint8ClampedArray( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint8c( arr, 2 );\n* // returns 3\n*/\nfunction getUint8c( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a generic `Array`.\n*\n* @private\n* @param {Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var v = getGeneric( arr, 2 );\n* // returns 3\n*/\nfunction getGeneric( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an indexed array-like object.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var v = getArrayLike( arr, 2 );\n* // returns 3\n*/\nfunction getArrayLike( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for retrieving an element from an indexed array-like object.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* import dtype from '@stdlib/array/dtype';\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var get = getter( dtype( arr ) );\n* var v = get( arr, 2 );\n* // returns 3\n*/\nfunction getter( dtype ) {\n\tvar f = GETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn GETTERS.default;\n}\n\n\n// EXPORTS //\n\nexport default getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar GETTERS = {\n\t'complex128': getComplex128,\n\t'complex64': getComplex64,\n\t'default': getArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Returns an element from a `Complex128Array`.\n*\n* @private\n* @param {Complex128Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* var arr = new Complex128Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getComplex128( arr, 1 );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 3.0\n*\n* var im = imag( v );\n* // returns 4.0\n*/\nfunction getComplex128( arr, idx ) {\n\treturn arr.get( idx );\n}\n\n/**\n* Returns an element from a `Complex64Array`.\n*\n* @private\n* @param {Complex64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getComplex64( arr, 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 3.0\n*\n* var im = imagf( v );\n* // returns 4.0\n*/\nfunction getComplex64( arr, idx ) {\n\treturn arr.get( idx );\n}\n\n/**\n* Returns an element from an array-like object supporting the get/set protocol.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* function get( idx ) {\n*    return arr[ idx ];\n* }\n*\n* function set( value, idx ) {\n*    arr[ idx ] = value;\n* }\n*\n* arr.get = get;\n* arr.set = set;\n*\n* var v = getArrayLike( arr, 2 );\n* // returns 3\n*/\nfunction getArrayLike( arr, idx ) {\n\treturn arr.get( idx );\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for retrieving an element from an array-like object supporting the get/set protocol.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n* import dtype from '@stdlib/array/dtype';\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var get = getter( dtype( arr ) );\n* var v = get( arr, 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 3.0\n*\n* var im = imagf( v );\n* // returns 4.0\n*/\nfunction getter( dtype ) {\n\tvar f = GETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn GETTERS.default;\n}\n\n\n// EXPORTS //\n\nexport default getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport realf from '@stdlib/complex/realf';\nimport imagf from '@stdlib/complex/imagf';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tz = v.value;\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( realf( z ), imagf( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport realf from '@stdlib/complex/realf';\nimport imagf from '@stdlib/complex/imagf';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tz = clbk.call( thisArg, v.value, i );\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( realf( z ), imagf( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport realf from '@stdlib/complex/realf';\nimport imagf from '@stdlib/complex/imagf';\n\n\n// MAIN //\n\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float32Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float32Array|null)} output array or null\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tlen = arr.length;\n\tj = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( !isComplexLike( v ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf[ j ] = realf( v );\n\t\tbuf[ j+1 ] = imagf( v );\n\t\tj += 2; // stride\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nexport default fromArray;\n","/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isArrayBuffer from '@stdlib/assert/is-arraybuffer';\nimport isObject from '@stdlib/assert/is-object';\nimport isArray from '@stdlib/assert/is-array';\nimport isFunction from '@stdlib/assert/is-function';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport isEven from '@stdlib/math/base/assert/is-even';\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport hasIteratorSymbolSupport from '@stdlib/assert/has-iterator-symbol-support';\nimport ITERATOR_SYMBOL from '@stdlib/symbol/iterator';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport Float32Array from './../../float32';\nimport Complex64 from '@stdlib/complex/float32';\nimport format from '@stdlib/string/format';\nimport realf from '@stdlib/complex/realf';\nimport imagf from '@stdlib/complex/imagf';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport getter from './../../base/getter';\nimport accessorGetter from './../../base/accessor-getter';\nimport fromIterator from './from_iterator.js';\nimport fromIteratorMap from './from_iterator_map.js';\nimport fromArray from './from_array.js';\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Float32Array.BYTES_PER_ELEMENT * 2;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/\nfunction isComplexArray( value ) {\n\treturn (\n\t\tvalue instanceof Complex64Array ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === 'Complex64Array' ||\n\t\t\t\tvalue.constructor.name === 'Complex128Array'\n\t\t\t) &&\n\t\t\ttypeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n\n\t\t\t// NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n\t\t\ttypeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n\t\t)\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/\nfunction isComplexArrayConstructor( value ) {\n\treturn (\n\t\tvalue === Complex64Array ||\n\n\t\t// NOTE: weaker test in order to avoid a circular dependency with Complex128Array...\n\t\tvalue.name === 'Complex128Array'\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex64Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex64Array`\n*/\nfunction isComplex64Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex64Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex128Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex128Array`\n*/\nfunction isComplex128Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex128Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT*2\n\t);\n}\n\n\n// MAIN //\n\n/**\n* 64-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or an iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `8`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `8`\n* @throws {TypeError} view length must be a positive multiple of `8`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} complex number array\n*\n* @example\n* var arr = new Complex64Array();\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex64Array( 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex64Array( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf, 8 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex64Array( buf, 8, 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Complex64Array() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Complex64Array) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Complex64Array();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Complex64Array( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Complex64Array( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Complex64Array( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Float32Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\tif ( isNonNegativeInteger( arguments[0] ) ) {\n\t\t\tbuf = new Float32Array( arguments[0]*2 );\n\t\t} else if ( isCollection( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tlen = buf.length;\n\n\t\t\t// If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n\t\t\tif ( len && isArray( buf ) && isComplexLike( buf[0] ) ) {\n\t\t\t\tbuf = fromArray( new Float32Array( len*2 ), buf );\n\t\t\t\tif ( buf === null ) {\n\t\t\t\t\t// We failed and we are now forced to allocate a new array :-(\n\t\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t\t}\n\t\t\t\t\t// We failed, so fall back to directly setting values...\n\t\t\t\t\tbuf = new Float32Array( arguments[0] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isComplex64Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret64( buf, 0 );\n\t\t\t\t} else if ( isComplex128Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret128( buf, 0 );\n\t\t\t\t} else if ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object and typed array arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tbuf = new Float32Array( buf );\n\t\t\t}\n\t\t} else if ( isArrayBuffer( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( !isInteger( buf.byteLength/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. ArrayBuffer byte length must be a multiple of %u. Byte length: `%u`.', BYTES_PER_ELEMENT, buf.byteLength ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf );\n\t\t} else if ( isObject( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tif ( !isFunction( buf[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = buf[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = fromIterator( buf );\n\t\t\tif ( buf instanceof Error ) {\n\t\t\t\tthrow buf;\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arguments[0] ) );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( !isInteger( byteOffset/BYTES_PER_ELEMENT ) ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Byte offset must be a multiple of %u. Value: `%u`.', BYTES_PER_ELEMENT, byteOffset ) );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t\tif ( !isInteger( len/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer view byte length must be a multiple of %u. View byte length: `%u`.', BYTES_PER_ELEMENT, len ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len*BYTES_PER_ELEMENT ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf, byteOffset, len*2 );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length/2 );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var nbytes = Complex64Array.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex64Array, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex64Array\n* @readonly\n* @type {string}\n* @default 'Complex64Array'\n*\n* @example\n* var str = Complex64Array.name;\n* // returns 'Complex64Array'\n*/\nsetReadOnly( Complex64Array, 'name', 'Complex64Array' );\n\n/**\n* Creates a new 64-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex64Array\n* @type {Function}\n* @param {(Collection|Iterable)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* function clbk( v ) {\n*     return new Complex64( realf(v)*2.0, imagf(v)*2.0 );\n* }\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ], clbk );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*/\nsetReadOnly( Complex64Array, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar get;\n\tvar len;\n\tvar flg;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isComplexArray( src ) ) {\n\t\tlen = src.length;\n\t\tif ( clbk ) {\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, src.get( i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = realf( v );\n\t\t\t\t\tbuf[ j+1 ] = imagf( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\t// Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n\n\t\t\tlen = src.length;\n\t\t\tif ( src.get && src.set ) {\n\t\t\t\tget = accessorGetter( 'default' );\n\t\t\t} else {\n\t\t\t\tget = getter( 'default' );\n\t\t\t}\n\t\t\t// Detect whether we've been provided an array which returns complex number objects...\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( !isComplexLike( get( src, i ) ) ) {\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n\t\t\tif ( flg ) {\n\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. First argument must have a length which is a multiple of %u. Length: `%u`.', 2, len ) );\n\t\t\t\t}\n\t\t\t\tout = new this( len/2 );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ i ] = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// If an array contains only complex number objects, then we need to extract real and imaginary components...\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = realf( v );\n\t\t\t\t\tbuf[ j+1 ] = imagf( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length / 2;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new 64-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex64Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Complex64Array, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 80\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex64Array.prototype, 'BYTES_PER_ELEMENT', Complex64Array.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} modified array\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var arr = new Complex64Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex64( 1.0, 1.0 ), 0 );\n* arr.set( new Complex64( 2.0, 2.0 ), 1 );\n* arr.set( new Complex64( 3.0, 3.0 ), 2 );\n* arr.set( new Complex64( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = realf( z );\n* // returns 2.0\n*\n* var im = imagf( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex64Array.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target*2, start*2 );\n\t} else {\n\t\tthis._buffer.copyWithin( target*2, start*2, arguments[2]*2 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n*\n* var arr = [\n*     new Complex64( 1.0, 1.0 ),\n*     new Complex64( 2.0, 2.0 ),\n*     new Complex64( 3.0, 3.0 )\n* ];\n* arr = new Complex64Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex64> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'entries', function entries() {\n\tvar buffer;\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuffer = this._buffer;\n\tlen = this._length;\n\n\t// Initialize the iteration indices:\n\ti = -1;\n\tj = -2;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar z;\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj += 2;\n\t\tz = new Complex64( buffer[ j ], buffer[ j+1 ] );\n\t\treturn {\n\t\t\t'value': [ i, z ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex64|void)} array element\n*\n* @example\n* var arr = new Complex64Array( 10 );\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( Complex64Array.prototype, 'get', function get( idx ) {\n\tvar buf;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\tbuf = this._buffer;\n\tidx *= 2;\n\treturn new Complex64( buf[ idx ], buf[ idx+1 ] );\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values as intended.\n*\n*\n* @name set\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var arr = new Complex64Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'set', function set( value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar flg;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isComplexLike( value ) ) {\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t\t}\n\t\tidx *= 2;\n\t\tbuf[ idx ] = realf( value );\n\t\tbuf[ idx+1 ] = imagf( value );\n\t\treturn;\n\t}\n\tif ( isComplexArray( value ) ) {\n\t\tN = value._length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tsbuf = value._buffer;\n\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Float32Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tidx *= 2;\n\t\tj = 0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\tidx += 2; // stride\n\t\t\tj += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tif ( isCollection( value ) ) {\n\t\t// Detect whether we've been provided an array of complex numbers...\n\t\tN = value.length;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tif ( !isComplexLike( value[ i ] ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n\t\tif ( flg ) {\n\t\t\tif ( !isEven( N ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', N ) );\n\t\t\t}\n\t\t\tif ( idx+(N/2) > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = new Float32Array( N );\n\t\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t}\n\t\t\tidx *= 2;\n\t\t\tN /= 2;\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\t\tidx += 2; // stride\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an array contains only complex numbers, then we need to extract real and imaginary components...\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tidx *= 2;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = value[ i ];\n\t\t\tbuf[ idx ] = realf( v );\n\t\t\tbuf[ idx+1 ] = imagf( v );\n\t\t\tidx += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.', value ) );\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n\n// EXPORTS //\n\nexport default Complex64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the real component of a double-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} real component\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var re = real( z );\n* // returns 5.0\n*/\nfunction real( z ) {\n\treturn z.re;\n}\n\n\n// EXPORTS //\n\nexport default real;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the imaginary component of a double-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} imaginary component\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var im = imag( z );\n* // returns 3.0\n*/\nfunction imag( z ) {\n\treturn z.im;\n}\n\n\n// EXPORTS //\n\nexport default imag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport format from '@stdlib/string/format';\nimport real from '@stdlib/complex/real';\nimport imag from '@stdlib/complex/imag';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tz = v.value;\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( real( z ), imag( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport format from '@stdlib/string/format';\nimport real from '@stdlib/complex/real';\nimport imag from '@stdlib/complex/imag';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tz = clbk.call( thisArg, v.value, i );\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( real( z ), imag( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport real from '@stdlib/complex/real';\nimport imag from '@stdlib/complex/imag';\n\n\n// MAIN //\n\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float64Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float64Array|null)} output array or null\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tlen = arr.length;\n\tj = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( !isComplexLike( v ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf[ j ] = real( v );\n\t\tbuf[ j+1 ] = imag( v );\n\t\tj += 2; // stride\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nexport default fromArray;\n","/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isArrayBuffer from '@stdlib/assert/is-arraybuffer';\nimport isObject from '@stdlib/assert/is-object';\nimport isArray from '@stdlib/assert/is-array';\nimport isFunction from '@stdlib/assert/is-function';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport isEven from '@stdlib/math/base/assert/is-even';\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport hasIteratorSymbolSupport from '@stdlib/assert/has-iterator-symbol-support';\nimport ITERATOR_SYMBOL from '@stdlib/symbol/iterator';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport Float64Array from './../../float64';\nimport Complex128 from '@stdlib/complex/float64';\nimport real from '@stdlib/complex/real';\nimport imag from '@stdlib/complex/imag';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport getter from './../../base/getter';\nimport accessorGetter from './../../base/accessor-getter';\nimport format from '@stdlib/string/format';\nimport fromIterator from './from_iterator.js';\nimport fromIteratorMap from './from_iterator_map.js';\nimport fromArray from './from_array.js';\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Float64Array.BYTES_PER_ELEMENT * 2;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/\nfunction isComplexArray( value ) {\n\treturn (\n\t\tvalue instanceof Complex128Array ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === 'Complex64Array' ||\n\t\t\t\tvalue.constructor.name === 'Complex128Array'\n\t\t\t) &&\n\t\t\ttypeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n\n\t\t\t// NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n\t\t\ttypeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n\t\t)\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/\nfunction isComplexArrayConstructor( value ) {\n\treturn (\n\t\tvalue === Complex128Array ||\n\n\t\t// NOTE: weaker test in order to avoid a circular dependency with Complex64Array...\n\t\tvalue.name === 'Complex64Array'\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex64Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex64Array`\n*/\nfunction isComplex64Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex64Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT/2\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex128Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex128Array`\n*/\nfunction isComplex128Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex128Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n\n// MAIN //\n\n/**\n* 128-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `16`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `16`\n* @throws {TypeError} view length must be a positive multiple of `16`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} complex number array\n*\n* @example\n* var arr = new Complex128Array();\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex128Array( 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex128Array( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf, 16 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = new Complex128Array( buf, 16, 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Complex128Array() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Complex128Array) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Complex128Array();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Complex128Array( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Complex128Array( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Complex128Array( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Float64Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\tif ( isNonNegativeInteger( arguments[0] ) ) {\n\t\t\tbuf = new Float64Array( arguments[0]*2 );\n\t\t} else if ( isCollection( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tlen = buf.length;\n\n\t\t\t// If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n\t\t\tif ( len && isArray( buf ) && isComplexLike( buf[0] ) ) {\n\t\t\t\tbuf = fromArray( new Float64Array( len*2 ), buf );\n\t\t\t\tif ( buf === null ) {\n\t\t\t\t\t// We failed and we are now forced to allocate a new array :-(\n\t\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t\t}\n\t\t\t\t\t// We failed, so fall back to directly setting values...\n\t\t\t\t\tbuf = new Float64Array( arguments[0] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isComplex64Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret64( buf, 0 );\n\t\t\t\t} else if ( isComplex128Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret128( buf, 0 );\n\t\t\t\t} else if ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object and typed array arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tbuf = new Float64Array( buf );\n\t\t\t}\n\t\t} else if ( isArrayBuffer( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( !isInteger( buf.byteLength/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. ArrayBuffer byte length must be a multiple of %u. Byte length: `%u`.', BYTES_PER_ELEMENT, buf.byteLength ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf );\n\t\t} else if ( isObject( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tif ( !isFunction( buf[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = buf[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = fromIterator( buf );\n\t\t\tif ( buf instanceof Error ) {\n\t\t\t\tthrow buf;\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arguments[0] ) );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( !isInteger( byteOffset/BYTES_PER_ELEMENT ) ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Byte offset must be a multiple of %u. Value: `%u`.', BYTES_PER_ELEMENT, byteOffset ) );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t\tif ( !isInteger( len/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer view byte length must be a multiple of %u. View byte length: `%u`.', BYTES_PER_ELEMENT, len ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len*BYTES_PER_ELEMENT ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf, byteOffset, len*2 );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length/2 );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var nbytes = Complex128Array.BYTES_PER_ELEMENT;\n* // returns 16\n*/\nsetReadOnly( Complex128Array, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex128Array\n* @readonly\n* @type {string}\n* @default 'Complex128Array'\n*\n* @example\n* var name = Complex128Array.name;\n* // returns 'Complex128Array'\n*/\nsetReadOnly( Complex128Array, 'name', 'Complex128Array' );\n\n/**\n* Creates a new 128-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex128Array\n* @type {Function}\n* @param {(Collection|Object)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* function clbk( v ) {\n*     return new Complex128( real(v)*2.0, imag(v)*2.0 );\n* }\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ], clbk );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*/\nsetReadOnly( Complex128Array, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar get;\n\tvar len;\n\tvar flg;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isComplexArray( src ) ) {\n\t\tlen = src.length;\n\t\tif ( clbk ) {\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, src.get( i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = real( v );\n\t\t\t\t\tbuf[ j+1 ] = imag( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\t// Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n\n\t\t\tlen = src.length;\n\t\t\tif ( src.get && src.set ) {\n\t\t\t\tget = accessorGetter( 'default' );\n\t\t\t} else {\n\t\t\t\tget = getter( 'default' );\n\t\t\t}\n\t\t\t// Detect whether we've been provided an array which returns complex number objects...\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( !isComplexLike( get( src, i ) ) ) {\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n\t\t\tif ( flg ) {\n\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. First argument must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tout = new this( len/2 );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ i ] = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// If an array contains only complex number objects, then we need to extract real and imaginary components...\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = real( v );\n\t\t\t\t\tbuf[ j+1 ] = imag( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length / 2;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new 128-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex128Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Complex128Array, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 160\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 16\n*/\nsetReadOnly( Complex128Array.prototype, 'BYTES_PER_ELEMENT', Complex128Array.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} modified array\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* var arr = new Complex128Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex128( 1.0, 1.0 ), 0 );\n* arr.set( new Complex128( 2.0, 2.0 ), 1 );\n* arr.set( new Complex128( 3.0, 3.0 ), 2 );\n* arr.set( new Complex128( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex128Array.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target*2, start*2 );\n\t} else {\n\t\tthis._buffer.copyWithin( target*2, start*2, arguments[2]*2 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n*\n* var arr = [\n*     new Complex128( 1.0, 1.0 ),\n*     new Complex128( 2.0, 2.0 ),\n*     new Complex128( 3.0, 3.0 )\n* ];\n* arr = new Complex128Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex128> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'entries', function entries() {\n\tvar buffer;\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuffer = this._buffer;\n\tlen = this._length;\n\n\t// Initialize the iteration indices:\n\ti = -1;\n\tj = -2;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar z;\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj += 2;\n\t\tz = new Complex128( buffer[ j ], buffer[ j+1 ] );\n\t\treturn {\n\t\t\t'value': [ i, z ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex128|void)} array element\n*\n* @example\n* var arr = new Complex128Array( 10 );\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( Complex128Array.prototype, 'get', function get( idx ) {\n\tvar buf;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\tbuf = this._buffer;\n\tidx *= 2;\n\treturn new Complex128( buf[ idx ], buf[ idx+1 ] );\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values as intended.\n*\n*\n* @name set\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* var arr = new Complex128Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'set', function set( value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar flg;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isComplexLike( value ) ) {\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t\t}\n\t\tidx *= 2;\n\t\tbuf[ idx ] = real( value );\n\t\tbuf[ idx+1 ] = imag( value );\n\t\treturn;\n\t}\n\tif ( isComplexArray( value ) ) {\n\t\tN = value._length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tsbuf = value._buffer;\n\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Float64Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tidx *= 2;\n\t\tj = 0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\tidx += 2; // stride\n\t\t\tj += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tif ( isCollection( value ) ) {\n\t\t// Detect whether we've been provided an array of complex numbers...\n\t\tN = value.length;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tif ( !isComplexLike( value[ i ] ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n\t\tif ( flg ) {\n\t\t\tif ( !isEven( N ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', N ) );\n\t\t\t}\n\t\t\tif ( idx+(N/2) > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = new Float64Array( N );\n\t\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t}\n\t\t\tidx *= 2;\n\t\t\tN /= 2;\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\t\tidx += 2; // stride\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an array contains only complex numbers, then we need to extract real and imaginary components...\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tidx *= 2;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = value[ i ];\n\t\t\tbuf[ idx ] = real( v );\n\t\t\tbuf[ idx+1 ] = imag( v );\n\t\t\tidx += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.', value ) );\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n\n// EXPORTS //\n\nexport default Complex128Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float64Array from './../../float64';\nimport Float32Array from './../../float32';\nimport Uint32Array from './../../uint32';\nimport Int32Array from './../../int32';\nimport Uint16Array from './../../uint16';\nimport Int16Array from './../../int16';\nimport Uint8Array from './../../uint8';\nimport Uint8ClampedArray from './../../uint8c';\nimport Int8Array from './../../int8';\nimport Complex64Array from './../../complex64';\nimport Complex128Array from './../../complex128';\n\n\n// MAIN //\n\n// Note: order should match `dtypes` order\nvar CTORS = [\n\tFloat64Array,\n\tFloat32Array,\n\tInt32Array,\n\tUint32Array,\n\tInt16Array,\n\tUint16Array,\n\tInt8Array,\n\tUint8Array,\n\tUint8ClampedArray,\n\tComplex64Array,\n\tComplex128Array\n];\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n// Note: order should match `ctors` order\nvar DTYPES = [\n\t'float64',\n\t'float32',\n\t'int32',\n\t'uint32',\n\t'int16',\n\t'uint16',\n\t'int8',\n\t'uint8',\n\t'uint8c',\n\t'complex64',\n\t'complex128'\n];\n\n\n// EXPORTS //\n\nexport default DTYPES;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isBuffer from '@stdlib/assert/is-buffer';\nimport isArray from '@stdlib/assert/is-array';\nimport constructorName from '@stdlib/utils/constructor-name';\nimport ctor2dtype from './ctor2dtype.js';\nimport CTORS from './ctors.js';\nimport DTYPES from './dtypes.js';\n\n\n// VARIABLES //\n\nvar NTYPES = DTYPES.length;\n\n\n// MAIN //\n\n/**\n* Returns the data type of an array.\n*\n* @param {*} value - input value\n* @returns {(string|null)} data type\n*\n* @example\n* var dt = dtype( [ 1, 2, 3 ] );\n* // returns 'generic'\n*\n* var dt = dtype( 'beep' );\n* // returns null\n*/\nfunction dtype( value ) {\n\tvar i;\n\tif ( isArray( value ) ) {\n\t\treturn 'generic';\n\t}\n\tif ( isBuffer( value ) ) {\n\t\treturn null;\n\t}\n\tfor ( i = 0; i < NTYPES; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn DTYPES[ i ];\n\t\t}\n\t}\n\t// If the above failed, fall back to a more robust (and significantly slower) means for resolving underlying data types:\n\treturn ctor2dtype[ constructorName( value ) ] || null;\n}\n\n\n// EXPORTS //\n\nexport default dtype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport isAccessorArray from '@stdlib/array/base/assert/is-accessor-array';\nimport accessorSetter from '@stdlib/array/base/accessor-setter';\nimport setter from '@stdlib/array/base/setter';\nimport dtype from '@stdlib/array/dtype';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Fills an array-like object view with values returned from an iterator.\n*\n* @param {Iterator} iterator - source iterator\n* @param {Collection} out - output array\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end=out.length] - ending index (non-inclusive)\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be an array-like object\n* @throws {TypeError} third argument must be an integer (starting index) or a callback function\n* @throws {TypeError} fourth argument must be an integer (ending index) or a callback function\n* @throws {TypeError} fifth argument must be a function\n* @returns {Collection} output array\n*\n* @example\n* import randu from '@stdlib/random/iter/randu';\n* import Float64Array from '@stdlib/array/float64';\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2arrayview( iter, new Float64Array( 20 ), 5 );\n* // returns <Float64Array>\n*/\nfunction iterator2arrayview( iterator, out ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar begin;\n\tvar end;\n\tvar fcn;\n\tvar set;\n\tvar dt;\n\tvar i;\n\tvar v;\n\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isCollection( out ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', out ) );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs === 2 ) {\n\t\tbegin = 0;\n\t\tend = out.length;\n\t} else if ( nargs === 3 ) {\n\t\tif ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tfcn = arguments[ 2 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 2 ];\n\t\t}\n\t\tend = out.length;\n\t} else if ( nargs === 4 ) {\n\t\tif ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 2 ];\n\t\t\tthisArg = arguments[ 3 ];\n\t\t} else if ( isFunction( arguments[ 3 ] ) ) {\n\t\t\tbegin = arguments[ 2 ];\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 3 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 2 ];\n\t\t\tend = arguments[ 3 ];\n\t\t}\n\t} else if ( nargs === 5 ) {\n\t\tbegin = arguments[ 2 ];\n\t\tif ( isFunction( arguments[ 3 ] ) ) {\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 3 ];\n\t\t\tthisArg = arguments[ 4 ];\n\t\t} else {\n\t\t\tend = arguments[ 3 ];\n\t\t\tfcn = arguments[ 4 ];\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t}\n\t} else { // nargs > 5\n\t\tbegin = arguments[ 2 ];\n\t\tend = arguments[ 3 ];\n\t\tfcn = arguments[ 4 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 5 ];\n\t}\n\tif ( !isInteger( begin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either an integer (starting index) or a function. Value: `%s`.', begin ) );\n\t}\n\tif ( !isInteger( end ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be either an integer (ending index) or a function. Value: `%s`.', end ) );\n\t}\n\tif ( end < 0 ) {\n\t\tend = out.length + end;\n\t\tif ( end < 0 ) {\n\t\t\tend = 0;\n\t\t}\n\t} else if ( end > out.length ) {\n\t\tend = out.length;\n\t}\n\tif ( begin < 0 ) {\n\t\tbegin = out.length + begin;\n\t\tif ( begin < 0 ) {\n\t\t\tbegin = 0;\n\t\t}\n\t}\n\tdt = dtype( out );\n\tif ( isAccessorArray( out ) ) {\n\t\tset = accessorSetter( dt );\n\t} else {\n\t\tset = setter( dt );\n\t}\n\ti = begin - 1;\n\tif ( fcn ) {\n\t\twhile ( i < end-1 ) {\n\t\t\ti += 1;\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tset( out, i, fcn.call( thisArg, v.value, i, i-begin ) );\n\t\t}\n\t\treturn out;\n\t}\n\twhile ( i < end-1 ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tset( out, i, v.value );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default iterator2arrayview;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport isAccessorArray from '@stdlib/array/base/assert/is-accessor-array';\nimport accessorSetter from '@stdlib/array/base/accessor-setter';\nimport setter from '@stdlib/array/base/setter';\nimport dtype from '@stdlib/array/dtype';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Fills an array-like object view from right to left with values returned from an iterator.\n*\n* @param {Iterator} iterator - source iterator\n* @param {Collection} out - output array\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end=out.length] - ending index (non-inclusive)\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be an array-like object\n* @throws {TypeError} third argument must be an integer (starting index) or a callback function\n* @throws {TypeError} fourth argument must be an integer (ending index) or a callback function\n* @throws {TypeError} fifth argument must be a function\n* @returns {Collection} output array\n*\n* @example\n* import randu from '@stdlib/random/iter/randu';\n* import Float64Array from '@stdlib/array/float64';\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2arrayviewRight( iter, new Float64Array( 20 ), 5 );\n* // returns <Float64Array>\n*/\nfunction iterator2arrayviewRight( iterator, out ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar begin;\n\tvar end;\n\tvar fcn;\n\tvar set;\n\tvar dt;\n\tvar i;\n\tvar v;\n\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isCollection( out ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', out ) );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs === 2 ) {\n\t\tbegin = 0;\n\t\tend = out.length;\n\t} else if ( nargs === 3 ) {\n\t\tif ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tfcn = arguments[ 2 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 2 ];\n\t\t}\n\t\tend = out.length;\n\t} else if ( nargs === 4 ) {\n\t\tif ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 2 ];\n\t\t\tthisArg = arguments[ 3 ];\n\t\t} else if ( isFunction( arguments[ 3 ] ) ) {\n\t\t\tbegin = arguments[ 2 ];\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 3 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 2 ];\n\t\t\tend = arguments[ 3 ];\n\t\t}\n\t} else if ( nargs === 5 ) {\n\t\tbegin = arguments[ 2 ];\n\t\tif ( isFunction( arguments[ 3 ] ) ) {\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 3 ];\n\t\t\tthisArg = arguments[ 4 ];\n\t\t} else {\n\t\t\tend = arguments[ 3 ];\n\t\t\tfcn = arguments[ 4 ];\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t}\n\t} else { // nargs > 5\n\t\tbegin = arguments[ 2 ];\n\t\tend = arguments[ 3 ];\n\t\tfcn = arguments[ 4 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 5 ];\n\t}\n\tif ( !isInteger( begin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either an integer (starting index) or a function. Value: `%s`.', begin ) );\n\t}\n\tif ( !isInteger( end ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be either an integer (ending index) or a function. Value: `%s`.', end ) );\n\t}\n\tif ( end < 0 ) {\n\t\tend = out.length + end;\n\t\tif ( end < 0 ) {\n\t\t\tend = 0;\n\t\t}\n\t} else if ( end > out.length ) {\n\t\tend = out.length;\n\t}\n\tif ( begin < 0 ) {\n\t\tbegin = out.length + begin;\n\t\tif ( begin < 0 ) {\n\t\t\tbegin = 0;\n\t\t}\n\t}\n\tdt = dtype( out );\n\tif ( isAccessorArray( out ) ) {\n\t\tset = accessorSetter( dt );\n\t} else {\n\t\tset = setter( dt );\n\t}\n\ti = end;\n\tif ( fcn ) {\n\t\twhile ( i > begin ) {\n\t\t\ti -= 1;\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tset( out, i, fcn.call( thisArg, v.value, i, end-i-1 ) );\n\t\t}\n\t\treturn out;\n\t}\n\twhile ( i > begin ) {\n\t\ti -= 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tset( out, i, v.value );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default iterator2arrayviewRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an array contains a provided value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {*} v - test value\n* @returns {boolean} boolean indicating whether an array contains a provided value\n*\n* @example\n* var bool = contains( [ 1, 2, 3 ], 1 );\n* // returns true\n*\n* bool = contains( [ 1, 2, 3 ], 4 );\n* // returns false\n*/\nfunction contains( arr, v ) {\n\tvar len;\n\tvar i;\n\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns the union of two or more iterators.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterUnion( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 5\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUnion() {\n\tvar iterators;\n\tvar iterator;\n\tvar niter;\n\tvar iter;\n\tvar hash;\n\tvar FLG;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide two or more iterators.' );\n\t}\n\titerators = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\tif ( !isIteratorLike( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\titerators.push( arguments[ i ] );\n\t}\n\thash = [];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\titerator = iterators[ 0 ];\n\tFLG = false;\n\ti = 0;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\ti += 1;\n\t\t\t\tif ( i === niter ) {\n\t\t\t\t\tFLG = true;\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\titerator = iterators[ i ];\n\t\t\t} else {\n\t\t\t\tv = v.value;\n\t\t\t\tif ( contains( hash, v ) === false ) {\n\t\t\t\t\thash.push( v );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\treturn iterUnion.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterUnion;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an array contains a provided value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {*} v - test value\n* @returns {boolean} boolean indicating whether an array contains a provided value\n*\n* @example\n* var bool = contains( [ 1, 2, 3 ], 1 );\n* // returns true\n*\n* bool = contains( [ 1, 2, 3 ], 4 );\n* // returns false\n*/\nfunction contains( arr, v ) {\n\tvar len;\n\tvar i;\n\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns unique values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var iter = iterUnique( array2iterator( [ 1, 2, 1, 2, 4 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUnique( iterator ) {\n\tvar iter;\n\tvar hash;\n\tvar FLG;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\thash = [];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tv = v.value;\n\t\t\tif ( contains( hash, v ) === false ) {\n\t\t\t\thash.push( v );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterUnique( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterUnique;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is unique according to a predicate function when compared to a list of values.\n*\n* @private\n* @param {Array} arr - input array\n* @param {*} v - test value\n* @param {Function} predicate - predicate function\n* @param {*} thisArg - evaluation context\n* @returns {boolean} boolean indicating whether a value is \"unique\"\n*\n* @example\n* function predicate( a, b ) {\n*     return ( a !== b );\n* }\n*\n* var bool = isUnique( [ 1, 2, 3 ], 1, predicate, null );\n* // returns false\n*\n* bool = isUnique( [ 1, 2, 3 ], 4, predicate, null );\n* // returns true\n*/\nfunction isUnique( arr, v, predicate, thisArg ) {\n\tvar len;\n\tvar i;\n\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( !predicate.call( thisArg, arr[ i ], v ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns unique values according to a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - evaluation context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* function predicate( a, b ) {\n*     return ( a !== b );\n* }\n*\n* var iter = iterUniqueBy( array2iterator( [ 1, 2, 1, 2, 4 ] ), predicate );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUniqueBy( iterator, predicate, thisArg ) {\n\tvar iter;\n\tvar hash;\n\tvar FLG;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\thash = [];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tv = v.value;\n\t\t\tif ( isUnique( hash, v, predicate, thisArg ) ) {\n\t\t\t\thash.push( v );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterUniqueBy( iterator[ iteratorSymbol ](), predicate, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterUniqueBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an array contains a provided value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {*} v - test value\n* @returns {boolean} boolean indicating whether an array contains a provided value\n*\n* @example\n* var bool = contains( [ 1, 2, 3 ], 1 );\n* // returns true\n*\n* bool = contains( [ 1, 2, 3 ], 4 );\n* // returns false\n*/\nfunction contains( arr, v ) {\n\tvar len;\n\tvar i;\n\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns unique values according to a hash function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} hashFcn - hash function\n* @param {*} [thisArg] - evaluation context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* function hashFcn( v ) {\n*     return v.toString();\n* }\n*\n* var iter = iterUniqueByHash( array2iterator( [ 1, 2, 1, 2, 4 ] ), hashFcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUniqueByHash( iterator, hashFcn, thisArg ) {\n\tvar iter;\n\tvar hash;\n\tvar FLG;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( hashFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', hashFcn ) );\n\t}\n\thash = [];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar hv;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\thv = hashFcn.call( thisArg, v.value );\n\t\t\tif ( contains( hash, hv ) === false ) {\n\t\t\t\thash.push( hv );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterUniqueByHash( iterator[ iteratorSymbol ](), hashFcn, thisArg ); // eslint-disable-line max-len\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterUniqueByHash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns numbers incremented by `1`.\n*\n* @param {number} start - starting value (inclusive)\n* @param {number} [stop=+infinity] - stopping value\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterUnitspace( 0, 99 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\nfunction iterUnitspace( start, stop ) {\n\tvar STOP;\n\tvar iter;\n\tvar curr;\n\tvar FLG;\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( stop ) || isnan( stop ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', stop ) );\n\t\t}\n\t\tSTOP = stop;\n\t} else {\n\t\tSTOP = PINF;\n\t}\n\tcurr = start - 1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tcurr += 1;\n\t\tif ( curr > STOP ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': curr,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterUnitspace( start, STOP );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterUnitspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which prepends values to the beginning of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {*} items - values to prepend\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array/to-iterator';\n*\n* var iter = iterUnshift( array2iterator( [ 1, 2 ] ), 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUnshift( iterator ) {\n\tvar items;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\titems = [];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\titems.push( arguments[ i ] );\n\t}\n\tFLG = 0;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG === 2 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( FLG === 1 ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = 2;\n\t\t\t}\n\t\t\treturn v;\n\t\t}\n\t\ti += 1;\n\t\tif ( i >= items.length ) {\n\t\t\tFLG = 1;\n\t\t\treturn next();\n\t\t}\n\t\treturn {\n\t\t\t'value': items[ i ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = 2;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [ iterator[ iteratorSymbol ]() ];\n\t\tfor ( i = 0; i < items.length; i++ ) {\n\t\t\targs.push( items[ i ] );\n\t\t}\n\t\treturn iterUnshift.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterUnshift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name iterAdvance\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/advance}\n*/\nimport iterAdvance from './../advance';\nsetReadOnly( ns, 'iterAdvance', iterAdvance );\n\n/**\n* @name iterAny\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/any}\n*/\nimport iterAny from './../any';\nsetReadOnly( ns, 'iterAny', iterAny );\n\n/**\n* @name iterAnyBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/any-by}\n*/\nimport iterAnyBy from './../any-by';\nsetReadOnly( ns, 'iterAnyBy', iterAnyBy );\n\n/**\n* @name iterConcat\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/concat}\n*/\nimport iterConcat from './../concat';\nsetReadOnly( ns, 'iterConcat', iterConcat );\n\n/**\n* @name iterConstant\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/constant}\n*/\nimport iterConstant from './../constant';\nsetReadOnly( ns, 'iterConstant', iterConstant );\n\n/**\n* @name iterCounter\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/counter}\n*/\nimport iterCounter from './../counter';\nsetReadOnly( ns, 'iterCounter', iterCounter );\n\n/**\n* @name iterDatespace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/datespace}\n*/\nimport iterDatespace from './../datespace';\nsetReadOnly( ns, 'iterDatespace', iterDatespace );\n\n/**\n* @name iterDedupe\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/dedupe}\n*/\nimport iterDedupe from './../dedupe';\nsetReadOnly( ns, 'iterDedupe', iterDedupe );\n\n/**\n* @name iterDedupeBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/dedupe-by}\n*/\nimport iterDedupeBy from './../dedupe-by';\nsetReadOnly( ns, 'iterDedupeBy', iterDedupeBy );\n\n/**\n* @name iterEmpty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/empty}\n*/\nimport iterEmpty from './../empty';\nsetReadOnly( ns, 'iterEmpty', iterEmpty );\n\n/**\n* @name iterEvery\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/every}\n*/\nimport iterEvery from './../every';\nsetReadOnly( ns, 'iterEvery', iterEvery );\n\n/**\n* @name iterEveryBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/every-by}\n*/\nimport iterEveryBy from './../every-by';\nsetReadOnly( ns, 'iterEveryBy', iterEveryBy );\n\n/**\n* @name iterFill\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/fill}\n*/\nimport iterFill from './../fill';\nsetReadOnly( ns, 'iterFill', iterFill );\n\n/**\n* @name iterFilter\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/filter}\n*/\nimport iterFilter from './../filter';\nsetReadOnly( ns, 'iterFilter', iterFilter );\n\n/**\n* @name iterFilterMap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/filter-map}\n*/\nimport iterFilterMap from './../filter-map';\nsetReadOnly( ns, 'iterFilterMap', iterFilterMap );\n\n/**\n* @name iterFirst\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/first}\n*/\nimport iterFirst from './../first';\nsetReadOnly( ns, 'iterFirst', iterFirst );\n\n/**\n* @name iterFlow\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/flow}\n*/\nimport iterFlow from './../flow';\nsetReadOnly( ns, 'iterFlow', iterFlow );\n\n/**\n* @name iterForEach\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/for-each}\n*/\nimport iterForEach from './../for-each';\nsetReadOnly( ns, 'iterForEach', iterForEach );\n\n/**\n* @name iterHead\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/head}\n*/\nimport iterHead from './../head';\nsetReadOnly( ns, 'iterHead', iterHead );\n\n/**\n* @name iterIncrspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/incrspace}\n*/\nimport iterIncrspace from './../incrspace';\nsetReadOnly( ns, 'iterIncrspace', iterIncrspace );\n\n/**\n* @name iterIntersection\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/intersection}\n*/\nimport iterIntersection from './../intersection';\nsetReadOnly( ns, 'iterIntersection', iterIntersection );\n\n/**\n* @name iterIntersectionByHash\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/intersection-by-hash}\n*/\nimport iterIntersectionByHash from './../intersection-by-hash';\nsetReadOnly( ns, 'iterIntersectionByHash', iterIntersectionByHash );\n\n/**\n* @name iterLast\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/last}\n*/\nimport iterLast from './../last';\nsetReadOnly( ns, 'iterLast', iterLast );\n\n/**\n* @name iterLength\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/length}\n*/\nimport iterLength from './../length';\nsetReadOnly( ns, 'iterLength', iterLength );\n\n/**\n* @name iterLinspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/linspace}\n*/\nimport iterLinspace from './../linspace';\nsetReadOnly( ns, 'iterLinspace', iterLinspace );\n\n/**\n* @name iterLogspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/logspace}\n*/\nimport iterLogspace from './../logspace';\nsetReadOnly( ns, 'iterLogspace', iterLogspace );\n\n/**\n* @name iterMap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/map}\n*/\nimport iterMap from './../map';\nsetReadOnly( ns, 'iterMap', iterMap );\n\n/**\n* @name iterMapN\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/mapn}\n*/\nimport iterMapN from './../mapn';\nsetReadOnly( ns, 'iterMapN', iterMapN );\n\n/**\n* @name iterNone\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/none}\n*/\nimport iterNone from './../none';\nsetReadOnly( ns, 'iterNone', iterNone );\n\n/**\n* @name iterNoneBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/none-by}\n*/\nimport iterNoneBy from './../none-by';\nsetReadOnly( ns, 'iterNoneBy', iterNoneBy );\n\n/**\n* @name iterNth\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/nth}\n*/\nimport iterNth from './../nth';\nsetReadOnly( ns, 'iterNth', iterNth );\n\n/**\n* @name iterPipeline\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/pipeline}\n*/\nimport iterPipeline from './../pipeline';\nsetReadOnly( ns, 'iterPipeline', iterPipeline );\n\n/**\n* @name iterThunk\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/pipeline-thunk}\n*/\nimport iterThunk from './../pipeline-thunk';\nsetReadOnly( ns, 'iterThunk', iterThunk );\n\n/**\n* @name iterPop\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/pop}\n*/\nimport iterPop from './../pop';\nsetReadOnly( ns, 'iterPop', iterPop );\n\n/**\n* @name iterPush\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/push}\n*/\nimport iterPush from './../push';\nsetReadOnly( ns, 'iterPush', iterPush );\n\n/**\n* @name iterReject\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/reject}\n*/\nimport iterReject from './../reject';\nsetReadOnly( ns, 'iterReject', iterReject );\n\n/**\n* @name iterReplicate\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/replicate}\n*/\nimport iterReplicate from './../replicate';\nsetReadOnly( ns, 'iterReplicate', iterReplicate );\n\n/**\n* @name iterReplicateBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/replicate-by}\n*/\nimport iterReplicateBy from './../replicate-by';\nsetReadOnly( ns, 'iterReplicateBy', iterReplicateBy );\n\n/**\n* @name iterShift\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/shift}\n*/\nimport iterShift from './../shift';\nsetReadOnly( ns, 'iterShift', iterShift );\n\n/**\n* @name iterSlice\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/slice}\n*/\nimport iterSlice from './../slice';\nsetReadOnly( ns, 'iterSlice', iterSlice );\n\n/**\n* @name iterSome\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/some}\n*/\nimport iterSome from './../some';\nsetReadOnly( ns, 'iterSome', iterSome );\n\n/**\n* @name iterSomeBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/some-by}\n*/\nimport iterSomeBy from './../some-by';\nsetReadOnly( ns, 'iterSomeBy', iterSomeBy );\n\n/**\n* @name iterStep\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/step}\n*/\nimport iterStep from './../step';\nsetReadOnly( ns, 'iterStep', iterStep );\n\n/**\n* @name iterStrided\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/strided}\n*/\nimport iterStrided from './../strided';\nsetReadOnly( ns, 'iterStrided', iterStrided );\n\n/**\n* @name iterStridedBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/strided-by}\n*/\nimport iterStridedBy from './../strided-by';\nsetReadOnly( ns, 'iterStridedBy', iterStridedBy );\n\n/**\n* @name iterator2arrayview\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/to-array-view}\n*/\nimport iterator2arrayview from './../to-array-view';\nsetReadOnly( ns, 'iterator2arrayview', iterator2arrayview );\n\n/**\n* @name iterator2arrayviewRight\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/to-array-view-right}\n*/\nimport iterator2arrayviewRight from './../to-array-view-right';\nsetReadOnly( ns, 'iterator2arrayviewRight', iterator2arrayviewRight );\n\n/**\n* @name iterUnion\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/union}\n*/\nimport iterUnion from './../union';\nsetReadOnly( ns, 'iterUnion', iterUnion );\n\n/**\n* @name iterUnique\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unique}\n*/\nimport iterUnique from './../unique';\nsetReadOnly( ns, 'iterUnique', iterUnique );\n\n/**\n* @name iterUniqueBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unique-by}\n*/\nimport iterUniqueBy from './../unique-by';\nsetReadOnly( ns, 'iterUniqueBy', iterUniqueBy );\n\n/**\n* @name iterUniqueByHash\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unique-by-hash}\n*/\nimport iterUniqueByHash from './../unique-by-hash';\nsetReadOnly( ns, 'iterUniqueByHash', iterUniqueByHash );\n\n/**\n* @name iterUnitspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unitspace}\n*/\nimport iterUnitspace from './../unitspace';\nsetReadOnly( ns, 'iterUnitspace', iterUnitspace );\n\n/**\n* @name iterUnshift\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unshift}\n*/\nimport iterUnshift from './../unshift';\nsetReadOnly( ns, 'iterUnshift', iterUnshift );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["main","Object","defineProperty","isNumber","value","zeros","n","i","out","zeroPad","str","width","right","negative","pad","length","startsWithMinus","substr","lowercase","String","prototype","toLowerCase","uppercase","toUpperCase","formatInteger","token","base","specifier","arg","parseInt","isFinite","Error","toString","precision","padRight","sign","alternate","call","charAt","isString","abs","Math","replace","RE_EXP_POS_DIGITS","RE_EXP_NEG_DIGITS","RE_ONLY_DIGITS","RE_DIGITS_BEFORE_EXP","RE_TRAILING_PERIOD_ZERO","RE_PERIOD_ZERO_EXP","RE_ZERO_BEFORE_EXP","formatDouble","digits","f","parseFloat","toExponential","toFixed","toPrecision","spaces","spacePad","fromCharCode","isnan","isNaN","isArray","Array","initialize","flags","mapping","formatInterpolate","tokens","hasPeriod","flag","num","pos","j","TypeError","padZeros","indexOf","arguments","maxWidth","substring","RE","parse","match","formatTokenize","content","prev","exec","slice","lastIndex","push","format","args","tokenize","interpolate","apply","objectProtoype","toStr","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","err","hasDefinePropertySupport","builtin","obj","prop","descriptor","hasValue","hasGet","hasSet","__proto__","get","set","defineProperty$1","setReadOnly","configurable","enumerable","writable","setNonEnumerableReadOnly","isBoolean","FLG","Symbol","hasToStringTagSupport","toStringTag","has","hasOwnProperty","hasOwnProp","property","Sym","toStrTag","nativeClass","hasToStringTag","v","isOwn","tag","Bool","Boolean","test","isPrimitive","isObject","getGlobal","Function","self","window","global","globalThis","root","codegen","getThis","GlobalThis","Self","Win","Global","nodeList","document","childNodes","typedarray","Int8Array","reFunctionName","RE_FUNCTION_NAME","REGEXP","main$c","isObjectLike","isBuffer","_isBuffer","constructor","constructorName","name","ctor","predicate","len","arrayfun","ctorName","type","isFunction","typeOf","isIteratorLike","t","next","main$a","Number","FLOAT64_PINF","POSITIVE_INFINITY","FLOAT64_NINF","NEGATIVE_INFINITY","floor","isInteger","x","PINF","NINF","isInt","valueOf","isNonNegativeInteger","iterAdvance","iterator","N","done","iterAny","iterAnyBy","thisArg","hasIteratorSymbolSupport","IteratorSymbol","iterConcat","iterators","niter","iter","end","iteratorSymbol","factory","getProto","Obj","getPrototypeOf","proto","getProto$1","objectPrototype","isPlainObject","isPrototypeOf","key","ownProps","iterConstant","options","opts","iterCounter","isCollection","isNan","contains","val","searchValue","position","ceil","round","getDay","Date","isDateObject","convert","getTime","ROUNDING_MODES","ROUNDING_FCNS","iterDatespace","start","stop","step","rfcn","t1","t2","d","isPositiveInteger","iterDedupe","limit","count","NaN","iterDedupeBy","clbk","sprev","dprev","acc","fcn","iterEmpty","iterEvery","iterEveryBy","END","iterFill","begin","M","finish","iterFilter","iterFilterMap","iterFirst","keys","bool","isArguments","hasArgumentsClass","detect","isEnumerableProperty","propertyIsEnumerable","hasStringEnumBug","isEnum","isArguments$1","noop","arr","searchElement","fromIndex","isConstructorPrototype","w","hasAutomationEqualityBug","k","win","EXCLUDED_KEYS","check","main$9","HAS_BUILTIN","skipConstructor","skipPrototype","isFcn","p","HAS_ENUM_PROTO_BUG","HAS_NON_ENUM_PROPS_BUG","HAS_WINDOW","error","NON_ENUMERABLE","iterFlow","methods","FluentIterator","this","setNonEnumerable","createMethod","iterFcn","_source","_done","objectKeys","iterForEach","iterHead","iterIncrspace","increment","incr","setNonEnumerableReadOnlyAccessor","getter","Node","_next","LinkedList","_length","_first","_last","getNode","hash","node","first","clean","threshold","remove","intersection","it","iterIntersection","hashFcn","hv","iterIntersectionByHash","iterLast","last","iterLength","iterLinspace","delta","isPositiveNumber","isEven","isOdd","isInfinite","_prev","values","toArray","setReadOnlyAccessor","shift","pop","data","sqrt","hasUint32Array","Uint32Array","GlobalUint32Array","UINT32_MAX","hasUint32ArraySupport","Uint32Array$1","hasFloat64Array","Float64Array","GlobalFloat64Array","hasFloat64ArraySupport","Float64Array$1","hasUint8Array","Uint8Array","GlobalUint8Array","UINT8_MAX","hasUint8ArraySupport","Uint8Array$1","hasUint16Array","Uint16Array","GlobalUint16Array","UINT16_MAX","hasUint16ArraySupport","uint16view","Uint16Array$1","ctors","uint16","uint8","HIGH","LOW","IS_LITTLE_ENDIAN","buffer","isLittleEndian","indices$3","FLOAT64_VIEW","UINT32_VIEW","indices","toWords","stride","offset","assign","LOW$3","setLowWord","low","uint32ToInt32","HIGH$5","getHighWord","indices$1","fromWords","high","WORDS","copysign","y","hx","hy","HIGH$1","setHighWord","BP","DP_HI","DP_LO","normalize","FRAC","ldexp","frac","exp","m","floatExp","HUGE","TINY","LOG_WORKSPACE","pow","ahx","ahy","ax","sx","sy","y1","hp","lp","z","yIsInfinite","xIsZero","yIsHuge","u","logx","tmp","ss","s2","hs","ls","ht","bp","dp","hz","lz","r","log2ax","pow2","iterLogspace","b","iterMap","iterMapN","idx","iterNone","iterNoneBy","iterNth","isArrayLikeObject","iterPipeline","nFuncs","isArrayLike","pipeline","iterThunk","pargs","nargs","thunk","iterPop","cb","iterPush","items","ret","iterReject","iterReplicate","iterReplicateBy","iterShift","iterSlice","iterSome","iterSomeBy","DEFAULT_LENGTH","iterStep","iterStrided","eager","o","iterStridedBy","ctx","s","isAccessorArray","SETTERS","complex128","complex64","default","setter","dtype","float64","float32","int32","int16","int8","uint32","uint8c","generic","ctor2dtypes","Float32Array","Int16Array","Int32Array","Uint8ClampedArray","Complex64Array","Complex128Array","hasFloat32Array","GlobalFloat32Array","hasFloat32ArraySupport","Float32Array$1","hasInt32Array","GlobalInt32Array","INT32_MAX","hasInt32ArraySupport","Int32Array$1","hasInt16Array","GlobalInt16Array","INT16_MAX","hasInt16ArraySupport","Int16Array$1","hasUint8ClampedArray","GlobalUint8ClampedArray","hasUint8ClampedArraySupport","Uint8ClampedArray$1","hasInt8Array","GlobalInt8Array","INT8_MAX","hasInt8ArraySupport","Int8Array$1","hasArrayBuffer","ArrayBuffer","isArrayBuffer","Complex128","real","imag","re","im","fround","FLOAT32_VIEW","float64ToFloat32$1","Complex64","float64ToFloat32","isComplexLike","realf","imagf","reinterpret","byteOffset","BYTES_PER_ELEMENT","GETTERS","fromIterator","fromIteratorMap","fromArray","buf","HAS_ITERATOR_SYMBOL","isComplexArray","_buffer","isComplexArrayConstructor","isComplex64Array","isComplex128Array","RangeError","reinterpret64","reinterpret128","byteLength","ITERATOR_SYMBOL","src","flg","accessorGetter","target","copyWithin","entries","sbuf","CTORS","DTYPES","NTYPES","ctor2dtype","iterator2arrayview","dt","accessorSetter","iterator2arrayviewRight","iterUnion","iterUnique","isUnique","iterUniqueBy","iterUniqueByHash","iterUnitspace","STOP","curr","iterUnshift","ns"],"mappings":"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"}
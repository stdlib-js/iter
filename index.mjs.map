{"version":3,"file":"index.mjs","sources":["../advance/lib/main.js","../advance/lib/index.js","../any/lib/main.js","../any/lib/index.js","../any-by/lib/main.js","../any-by/lib/index.js","../concat/lib/main.js","../concat/lib/index.js","../constant/lib/main.js","../constant/lib/index.js","../counter/lib/main.js","../counter/lib/index.js","../datespace/lib/convert.js","../datespace/lib/main.js","../datespace/lib/index.js","../dedupe/lib/main.js","../dedupe/lib/index.js","../dedupe-by/lib/main.js","../dedupe-by/lib/index.js","../empty/lib/main.js","../empty/lib/index.js","../every/lib/main.js","../every/lib/index.js","../every-by/lib/main.js","../every-by/lib/index.js","../fill/lib/main.js","../fill/lib/index.js","../filter/lib/main.js","../filter/lib/index.js","../filter-map/lib/main.js","../filter-map/lib/index.js","../first/lib/main.js","../first/lib/index.js","../flow/lib/main.js","../flow/lib/index.js","../for-each/lib/main.js","../for-each/lib/index.js","../head/lib/main.js","../head/lib/index.js","../incrspace/lib/main.js","../incrspace/lib/index.js","../intersection/lib/main.js","../intersection/lib/index.js","../intersection-by-hash/lib/main.js","../intersection-by-hash/lib/index.js","../last/lib/main.js","../last/lib/index.js","../length/lib/main.js","../length/lib/index.js","../linspace/lib/main.js","../linspace/lib/index.js","../logspace/lib/main.js","../logspace/lib/index.js","../map/lib/main.js","../map/lib/index.js","../mapn/lib/main.js","../mapn/lib/index.js","../none/lib/main.js","../none/lib/index.js","../none-by/lib/main.js","../none-by/lib/index.js","../nth/lib/main.js","../nth/lib/index.js","../pipeline/lib/main.js","../pipeline/lib/index.js","../pipeline-thunk/lib/main.js","../pipeline-thunk/lib/index.js","../pop/lib/main.js","../pop/lib/index.js","../push/lib/main.js","../push/lib/index.js","../reject/lib/main.js","../reject/lib/index.js","../replicate/lib/main.js","../replicate/lib/index.js","../replicate-by/lib/main.js","../replicate-by/lib/index.js","../shift/lib/main.js","../shift/lib/index.js","../slice/lib/main.js","../slice/lib/index.js","../some/lib/main.js","../some/lib/index.js","../some-by/lib/main.js","../some-by/lib/index.js","../step/lib/main.js","../step/lib/index.js","../strided/lib/main.js","../strided/lib/index.js","../strided-by/lib/main.js","../strided-by/lib/index.js","../to-array-view/lib/main.js","../to-array-view/lib/index.js","../to-array-view-right/lib/main.js","../to-array-view-right/lib/index.js","../union/lib/main.js","../union/lib/index.js","../unique/lib/main.js","../unique/lib/index.js","../unique-by/lib/main.js","../unique-by/lib/index.js","../unique-by-hash/lib/main.js","../unique-by-hash/lib/index.js","../unitspace/lib/main.js","../unitspace/lib/index.js","../unshift/lib/main.js","../unshift/lib/index.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Advances an iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {NonNegativeInteger} [n=1e308] - number of iterations\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {Iterator} input iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it1 = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var it2 = iterAdvance( it1, 4 );\n*\n* var v = it2.next().value;\n* // returns 1\n*\n* var bool = it2.next().done;\n* // returns true\n*/\nfunction iterAdvance( iterator, n ) {\n\tvar N;\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', n ) );\n\t\t}\n\t\tN = n;\n\t} else {\n\t\tN = 1e308;\n\t}\n\ti = 0;\n\twhile ( i < N ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t}\n\treturn iterator;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterAdvance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Advance an iterator.\n*\n* @module @stdlib/iter/advance\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterAdvance = require( '@stdlib/iter/advance' );\n*\n* var it1 = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var it2 = iterAdvance( it1, 4 );\n*\n* var v = it2.next().value;\n* // returns 1\n*\n* var bool = it2.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether at least one iterated value is truthy.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {boolean} boolean indicating whether at least one iterated value is truthy\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterAny( it );\n* // returns true\n*/\nfunction iterAny( iterator ) {\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( v.value ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterAny;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least one iterated value is truthy.\n*\n* @module @stdlib/iter/any\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterAny = require( '@stdlib/iter/any' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterAny( it );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether at least one iterated value passes a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether at least one iterated value passes a test implemented by a predicate function\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function predicate( v ) {\n*     return ( v === 1 );\n* }\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterAnyBy( it, predicate );\n* // returns true\n*/\nfunction iterAnyBy( iterator, predicate, thisArg ) {\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( predicate.call( thisArg, v.value, i ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterAnyBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least one iterated value passes a test implemented by a predicate function.\n*\n* @module @stdlib/iter/any-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterAnyBy = require( '@stdlib/iter/any-by' );\n*\n* function predicate( v ) {\n*     return ( v === 1 );\n* }\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterAnyBy( it );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over the values of two or more iterators.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it1 = array2iterator( [ 1, 2 ] );\n* var it2 = array2iterator( [ 3, 4 ] );\n*\n* var iter = iterConcat( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterConcat() {\n\tvar iterators;\n\tvar iterator;\n\tvar niter;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide two or more iterators.' );\n\t}\n\titerators = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\tif ( !isIteratorLike( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\titerators.push( arguments[ i ] );\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\titerator = iterators[ 0 ];\n\tFLG = false;\n\ti = 0;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\t// Note: if provided non-empty iterators, this loop executes at most twice...\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\ti += 1;\n\t\t\t\tif ( i === niter ) {\n\t\t\t\t\tFLG = true;\n\t\t\t\t\tif ( hasOwnProp( v, 'value' ) ) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'value': v.value,\n\t\t\t\t\t\t\t'done': true\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'done': true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\titerator = iterators[ i ];\n\n\t\t\t\t// Note: we ignore iterator return values except for the final iterator...\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\treturn iterConcat.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterConcat;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iterates over the values of two or more iterators.\n*\n* @module @stdlib/iter/concat\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterConcat = require( '@stdlib/iter/concat' );\n*\n* var it1 = array2iterator( [ 1, 2 ] );\n* var it2 = array2iterator( [ 3, 4 ] );\n*\n* var iter = iterConcat( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which always returns the same value.\n*\n* @param {*} value - value to return\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterConstant( 3.14 );\n*\n* var v = iter.next().value;\n* // returns 3.14\n*\n* v = iter.next().value;\n* // returns 3.14\n*\n* v = iter.next().value;\n* // returns 3.14\n*\n* // ...\n*/\nfunction iterConstant( value ) {\n\tvar options;\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\topts = {\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length > 1 ) {\n\t\toptions = arguments[ 1 ];\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\t\topts.iter = options.iter;\n\t\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t\t}\n\t\t}\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value, // Note: can be different than the iterator constant\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterConstant( value, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterConstant;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which always returns the same value.\n*\n* @module @stdlib/iter/constant\n*\n* @example\n* var iterConstant = require( '@stdlib/iter/constant' );\n*\n* var iter = iterConstant( 3.14 );\n*\n* var v = iter.next().value;\n* // returns 3.14\n*\n* v = iter.next().value;\n* // returns 3.14\n*\n* v = iter.next().value;\n* // returns 3.14\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes the number of iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n*\n* var iter = iterCounter( randu() );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction iterCounter( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\ti += 1;\n\t\treturn {\n\t\t\t'value': i,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterCounter( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterCounter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes the number of iterated values.\n*\n* @module @stdlib/iter/counter\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterCounter = require( '@stdlib/iter/counter' );\n*\n* var iter = iterCounter( randu() );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isDateObject = require( '@stdlib/assert/is-date-object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Converts a value to a JavaScript timestamp.\n*\n* @private\n* @param {*} value - value to convert\n* @returns {(NonNegativeInteger|Error)} either a JavaScript timestamp or an error object\n*/\nfunction convert( value ) {\n\tif ( isString( value ) ) {\n\t\tvalue = Date.parse( value );\n\t\tif ( value !== value ) {\n\t\t\treturn new TypeError( format( 'invalid argument. Unable to parse date string. Value: `%s`.', value ) );\n\t\t}\n\t\treturn value;\n\t}\n\tif ( isNonNegativeInteger( value ) ) {\n\t\treturn value;\n\t}\n\tif ( isDateObject( value ) ) {\n\t\treturn value.getTime();\n\t}\n\treturn new TypeError( format( 'invalid argument. Must provide either a Date object, a JavaScript timestamp (i.e., a nonnegative integer), or a date string. Value: `%s`.', value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = convert;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar contains = require( '@stdlib/assert/contains' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar ceil = require( '@stdlib/math/base/special/ceil' );\nvar round = require( '@stdlib/math/base/special/round' );\nvar convert = require( './convert.js' );\n\n\n// VARIABLES //\n\nvar DEFAULT_LENGTH = 100;\nvar DEFAULT_ROUNDING_MODE = 'floor';\nvar ROUNDING_MODES = [\n\t'floor',\n\t'ceil',\n\t'round'\n];\nvar ROUNDING_FCNS = {\n\t'floor': floor,\n\t'ceil': ceil,\n\t'round': round\n};\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns evenly spaced dates over a specified interval.\n*\n* @param {(NonNegativeInteger|string|Date)} start - starting date as either a `Date` object, JavaScript timestamp, or a date string (inclusive)\n* @param {(NonNegativeInteger|string|Date)} stop - stopping date as either a `Date` object, JavaScript timestamp, or a date string (inclusive)\n* @param {NonNegativeInteger} [N=100] - number of values\n* @param {Options} [options] - function options\n* @param {string} [options.round='floor'] - specifies how sub-millisecond times should be rounded: 'floor', 'ceil', or 'round'\n* @throws {TypeError} a numeric `start` argument must be a nonnegative integer\n* @throws {TypeError} a numeric `stop` argument must be a nonnegative integer\n* @throws {TypeError} unable to parse date string\n* @throws {TypeError} `N` argument must be a nonnegative integer\n* @throws {TypeError} `options` argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var MILLISECONDS_IN_DAY = require( '@stdlib/constants/time/milliseconds-in-day' );\n*\n* var start = new Date();\n* var iter = iterDatespace( start, new Date( start.getTime()+MILLISECONDS_IN_DAY ) );\n*\n* var v = iter.next().value;\n* // returns <Date>\n*\n* v = iter.next().value;\n* // returns <Date>\n*\n* v = iter.next().value;\n* // returns <Date>\n*\n* // ...\n*/\nfunction iterDatespace( start, stop, N, options ) {\n\tvar step;\n\tvar iter;\n\tvar opts;\n\tvar rfcn;\n\tvar FLG;\n\tvar t1;\n\tvar t2;\n\tvar n;\n\tvar d;\n\tvar i;\n\n\tt1 = convert( start );\n\tif ( t1 instanceof Error ) {\n\t\tthrow t1;\n\t}\n\tt2 = convert( stop );\n\tif ( t2 instanceof Error ) {\n\t\tthrow t2;\n\t}\n\topts = {\n\t\t'round': DEFAULT_ROUNDING_MODE\n\t};\n\tif ( arguments.length === 3 ) {\n\t\tif ( isNonNegativeInteger( N ) ) {\n\t\t\tn = N;\n\t\t} else if ( isPlainObject( N ) ) {\n\t\t\tn = DEFAULT_LENGTH;\n\t\t\tif ( hasOwnProp( N, 'round' ) ) {\n\t\t\t\tif ( !contains( ROUNDING_MODES, N.round ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. Unrecognized rounding mode. Option: `%s`.', N.round ) );\n\t\t\t\t}\n\t\t\t\topts.round = N.round;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either a nonnegative integer or an options object. Value: `%s`.', N ) );\n\t\t}\n\t} else if ( arguments.length > 3 ) {\n\t\tif ( !isNonNegativeInteger( N ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t\t}\n\t\tn = N;\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'round' ) ) {\n\t\t\tif ( !contains( ROUNDING_MODES, options.round ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. Unrecognized rounding mode. Option: `%s`.', options.round ) );\n\t\t\t}\n\t\t\topts.round = options.round;\n\t\t}\n\t} else {\n\t\tn = DEFAULT_LENGTH;\n\t}\n\trfcn = ROUNDING_FCNS[ opts.round ];\n\td = n - 1;\n\tstep = (t2-t1) / d;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( i === 0 ) {\n\t\t\treturn {\n\t\t\t\t'value': new Date( t1 ),\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\tif ( i === d ) {\n\t\t\treturn {\n\t\t\t\t'value': new Date( t2 ),\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': new Date( rfcn( t1+(i*step) ) ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterDatespace( start, stop, n, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterDatespace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns evenly spaced dates over a specified interval.\n*\n* @module @stdlib/iter/datespace\n*\n* @example\n* var MILLISECONDS_IN_DAY = require( '@stdlib/constants/time/milliseconds-in-day' );\n* var iterDatespace = require( '@stdlib/iter/datespace' );\n*\n* var start = new Date();\n* var iter = iterDatespace( start, new Date( start.getTime()+MILLISECONDS_IN_DAY ) );\n*\n* var v = iter.next().value;\n* // returns <Date>\n*\n* v = iter.next().value;\n* // returns <Date>\n*\n* v = iter.next().value;\n* // returns <Date>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which removes consecutive duplicated values.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} [limit=1] - number of allowed consecutive duplicates\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = iterDedupe( array2iterator( [ 1, 1, 2, 3, 3 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterDedupe( iterator, limit ) {\n\tvar count;\n\tvar iter;\n\tvar prev;\n\tvar FLG;\n\tvar N;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( limit ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', limit ) );\n\t\t}\n\t\tN = limit;\n\t} else {\n\t\tN = 1;\n\t}\n\tprev = NaN; // Note: we leverage the fact that `NaN` is not equal to anything, including itself, to handle initial condition\n\tcount = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tif ( v.value === prev ) {\n\t\t\tcount += 1;\n\t\t\tif ( count > N ) {\n\t\t\t\t// Find the next \"unique\" value...\n\t\t\t\twhile ( v.value === prev ) {\n\t\t\t\t\tv = iterator.next();\n\t\t\t\t\tif ( v.done ) {\n\t\t\t\t\t\tFLG = true;\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprev = v.value;\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t} else {\n\t\t\tprev = v.value;\n\t\t\tcount = 1;\n\t\t}\n\t\treturn {\n\t\t\t'value': prev,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterDedupe( iterator[ iteratorSymbol ](), N );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterDedupe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which removes consecutive duplicated values.\n*\n* @module @stdlib/iter/dedupe\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterDedupe = require( '@stdlib/iter/dedupe' );\n*\n* var iter = iterDedupe( array2iterator( [ 1, 1, 2, 3, 3 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which removes consecutive values that resolve to the same value according to a provided function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} [limit=1] - number of allowed consecutive duplicates\n* @param {Function} clbk - function which indicates whether an iterated value is a \"duplicate\"\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @throws {TypeError} `limit` argument must be a positive integer\n* @throws {TypeError} last argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function fcn( v ) {\n*     return v;\n* }\n*\n* var iter = iterDedupeBy( array2iterator( [ 1, 1, 2, 3, 3 ] ), fcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterDedupeBy( iterator, limit, clbk ) { // eslint-disable-line no-unused-vars\n\tvar count;\n\tvar sprev; // previous source iterated value\n\tvar dprev; // previous downstream iterated value\n\tvar iter;\n\tvar acc;\n\tvar FLG;\n\tvar fcn;\n\tvar N;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tfcn = arguments[ arguments.length-1 ];\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isPositiveInteger( limit ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', limit ) );\n\t\t}\n\t\tN = limit;\n\t} else {\n\t\tN = 1;\n\t}\n\tacc = NaN; // Note: we leverage the fact that `NaN` is not equal to anything, including itself, to handle initial condition\n\tcount = 0;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar out;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\ti += 1;\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tout = fcn( v.value, sprev, dprev, i, acc );\n\t\tif ( out === acc ) {\n\t\t\tsprev = v.value;\n\t\t\tcount += 1;\n\t\t\tif ( count > N ) {\n\t\t\t\t// Find the next \"unique\" value...\n\t\t\t\twhile ( out === acc ) {\n\t\t\t\t\tv = iterator.next();\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif ( v.done ) {\n\t\t\t\t\t\tFLG = true;\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\t\t\t\t\tout = fcn( v.value, sprev, dprev, i, acc );\n\t\t\t\t\tsprev = v.value;\n\t\t\t\t}\n\t\t\t\tacc = out;\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tdprev = sprev;\n\t\t} else {\n\t\t\tsprev = v.value;\n\t\t\tdprev = sprev;\n\t\t\tacc = out;\n\t\t\tcount = 1;\n\t\t}\n\t\treturn {\n\t\t\t'value': dprev,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterDedupeBy( iterator[ iteratorSymbol ](), N, fcn );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterDedupeBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which removes consecutive values that resolve to the same value according to a provided function.\n*\n* @module @stdlib/iter/dedupe-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterDedupeBy = require( '@stdlib/iter/dedupe-by' );\n*\n* function fcn( v ) {\n*     return v;\n* }\n*\n* var iter = iterDedupeBy( array2iterator( [ 1, 1, 2, 3, 3 ] ), fcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\n\n\n// MAIN //\n\n/**\n* Returns an empty iterator.\n*\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterEmpty();\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterEmpty() {\n\tvar iter;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterEmpty();\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterEmpty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an empty iterator.\n*\n* @module @stdlib/iter/empty\n*\n* @example\n* var iterEmpty = require( '@stdlib/iter/empty' );\n*\n* var iter = iterEmpty();\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether all iterated values are truthy.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {boolean} boolean indicating whether all iterated values are truthy\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 0 ] );\n*\n* var bool = iterEvery( it );\n* // returns false\n*/\nfunction iterEvery( iterator ) {\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( !v.value ) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterEvery;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all iterated values are truthy.\n*\n* @module @stdlib/iter/every\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterEvery = require( '@stdlib/iter/every' );\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 0 ] );\n*\n* var bool = iterEvery( it );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether every iterated value passes a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether every iterated value passes a test implemented by a predicate function\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function predicate( v ) {\n*     return ( v > 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 1 ] );\n*\n* var bool = iterEveryBy( it, predicate );\n* // returns true\n*/\nfunction iterEveryBy( iterator, predicate, thisArg ) {\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( !predicate.call( thisArg, v.value, i ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterEveryBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether every iterated value passes a test implemented by a predicate function.\n*\n* @module @stdlib/iter/every-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterEveryBy = require( '@stdlib/iter/every-by' );\n*\n* function predicate( v ) {\n*     return ( v > 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 1 ] );\n*\n* var bool = iterEveryBy( it, predicate );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar BEGIN = 0;\nvar END = 1e308;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which replaces all values from a provided iterator from a start index to an end index with a static value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {*} value - static value\n* @param {NonNegativeInteger} [begin=0] - start iteration index (inclusive)\n* @param {NonNegativeInteger} [end=1e308] - end iteration index (non-inclusive)\n* @throws {Error} must provide both an iterator and a static value\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} third argument must be a nonnegative integer\n* @throws {TypeError} fourth argument must be a nonnegative integer\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n*\n* var iter = iterFill( randu(), 3.14, 0, 2 );\n*\n* var r = iter.next().value;\n* // returns 3.14\n*\n* r = iter.next().value;\n* // returns 3.14\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterFill( iterator, value, begin, end ) {\n\tvar iter;\n\tvar FLG;\n\tvar N;\n\tvar M;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isNonNegativeInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tN = begin;\n\t\tif ( arguments.length > 3 ) {\n\t\t\tif ( !isNonNegativeInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a nonnegative integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tM = end;\n\t\t} else {\n\t\t\tM = END;\n\t\t}\n\t} else if ( arguments.length < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide both an iterator and a static value.' );\n\t} else {\n\t\tN = BEGIN;\n\t\tM = END;\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', finish );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\ti = -1;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\ti += 1;\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': ( i >= N && i < M ) ? value : v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction finish( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterFill( iterator[ iteratorSymbol ](), value, N, M );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterFill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which replaces all values from a provided iterator from a start index to an end index with a static value.\n*\n* @module @stdlib/iter/fill\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterFill = require( '@stdlib/iter/fill' );\n*\n* var iter = iterFill( randu(), 3.14, 0, 2 );\n*\n* var r = iter.next().value;\n* // returns 3.14\n*\n* r = iter.next().value;\n* // returns 3.14\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which filters a provided iterator's values according to a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function predicate( v ) {\n*     return ( v > 2 );\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterFilter( src, predicate );\n*\n* var v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterFilter( iterator, predicate, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tif ( predicate.call( thisArg, v.value, i ) ) {\n\t\t\t\treturn {\n\t\t\t\t\t'value': v.value,\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterFilter( iterator[ iteratorSymbol ](), predicate, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterFilter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which filters a provided iterator's values according to a predicate function.\n*\n* @module @stdlib/iter/filter\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterFilter = require( '@stdlib/iter/filter' );\n*\n* function predicate( v ) {\n*     return ( v > 2 );\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterFilter( src, predicate );\n*\n* var v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which both filters and maps a provided iterator's values.\n*\n* ## Notes\n*\n* -   If a callback function returns `undefined`, the returned iterator invokes the callback for the next iterated value; otherwise, the iterator returns the callback's return value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - callback which both filters and maps\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function fcn( v ) {\n*     if ( v > 2 ) {\n*         return v * 10;\n*     }\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterFilterMap( src, fcn );\n*\n* var v = iter.next().value;\n* // returns 30\n*\n* v = iter.next().value;\n* // returns 40\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterFilterMap( iterator, fcn, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tv = fcn.call( thisArg, v.value, i );\n\t\t\tif ( v !== void 0 ) {\n\t\t\t\treturn {\n\t\t\t\t\t'value': v,\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterFilterMap( iterator[ iteratorSymbol ](), fcn, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterFilterMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which both filters and maps a provided iterator's values.\n*\n* @module @stdlib/iter/filter-map\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterFilterMap = require( '@stdlib/iter/filter-map' );\n*\n* function fcn( v ) {\n*     if ( v > 2 ) {\n*         return v * 10;\n*     }\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterFilterMap( src, fcn );\n*\n* var v = iter.next().value;\n* // returns 30\n*\n* v = iter.next().value;\n* // returns 40\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns the first iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {*} first iterated value\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 1, 0, 0, 0, 0 ] );\n*\n* var v = iterFirst( it );\n* // returns 1\n*/\nfunction iterFirst( iterator ) {\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tv = iterator.next();\n\tif ( v.done ) {\n\t\treturn;\n\t}\n\treturn v.value;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterFirst;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the first iterated value.\n*\n* @module @stdlib/iter/first\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterFirst = require( '@stdlib/iter/first' );\n*\n* var it = array2iterator( [ 1, 0, 0, 0, 0 ] );\n*\n* var v = iterFirst( it );\n* // returns 1\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this, no-restricted-syntax */\n\n'use strict';\n\n// MODULES //\n\nvar setNonEnumerableReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setNonEnumerable = require( '@stdlib/utils/define-nonenumerable-property' );\nvar isObject = require( '@stdlib/assert/is-object' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a constructor for creating a fluent interface for chaining together iterator methods.\n*\n* ## Notes\n*\n* -   We assume that each provided iterator function has the following function signature:\n*\n*     ```text\n*     function iterFcn( iterator[, ...args] ) {...}\n*     ```\n*\n*     where `iterator` is an input iterator and `args` are additional iterator function arguments (if any).\n*\n*\n* @param {Object} methods - an object mapping method names to iterator functions\n* @throws {TypeError} must provide an object\n* @throws {TypeError} object property values must be functions\n* @returns {Function} constructor\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterHead = require( '@stdlib/iter/head' );\n* var iterSome = require( '@stdlib/iter/some' );\n*\n* // Create a \"fluent\" interface:\n* var FluentIterator = iterFlow({\n*     'head': iterHead,\n*     'some': iterSome\n* });\n*\n* // Create a source iterator:\n* var arr = array2iterator( [ 0, 0, 1, 1, 1, 0, 0, 1, 0, 1 ] );\n*\n* // Create a new iterator:\n* var it = new FluentIterator( arr );\n*\n* var bool = it.head( 5 ).some( 3 );\n* // returns true\n*\n* // Create another source iterator:\n* arr = array2iterator( [ 0, 0, 1, 0, 1, 0, 0, 1, 0, 1 ] );\n*\n* // Create a new iterator:\n* it = new FluentIterator( arr );\n*\n* bool = it.head( 5 ).some( 3 );\n* // returns false\n*/\nfunction iterFlow( methods ) {\n\tvar keys;\n\tvar k;\n\tvar f;\n\tvar i;\n\tif ( !isObject( methods ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', methods ) );\n\t}\n\t/**\n\t* Fluent interface iterator constructor.\n\t*\n\t* @private\n\t* @constructor\n\t* @param {Iterator} iterator - source iterator\n\t* @throws {TypeError} must provide an iterator\n\t* @returns {FluentIterator} a \"fluent\" iterator\n\t*/\n\tfunction FluentIterator( iterator ) {\n\t\tif ( !( this instanceof FluentIterator ) ) {\n\t\t\treturn new FluentIterator( iterator );\n\t\t}\n\t\tif ( !isIteratorLike( iterator ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t\t}\n\t\tsetNonEnumerableReadOnly( this, '_source', iterator );\n\t\tsetNonEnumerable( this, '_done', false );\n\t\treturn this;\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @throws {TypeError} `this` must be a fluent interface iterator\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tsetNonEnumerableReadOnly( FluentIterator.prototype, 'next', function next() {\n\t\tif ( !(this instanceof FluentIterator) ) {\n\t\t\tthrow new TypeError( 'invalid invocation. `this` is not a fluent interface iterator.' );\n\t\t}\n\t\tif ( this._done ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn this._source.next();\n\t});\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @throws {TypeError} `this` must be a fluent interface iterator\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tsetNonEnumerableReadOnly( FluentIterator.prototype, 'return', function finish( value ) {\n\t\tif ( !(this instanceof FluentIterator) ) {\n\t\t\tthrow new TypeError( 'invalid invocation. `this` is not a fluent interface iterator.' );\n\t\t}\n\t\tthis._done = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t});\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\t/**\n\t\t* Returns the current iterator.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   This method allows the iterator to be iterable and thus able to be consumed, e.g., in `for..of` loops.\n\t\t*\n\t\t* @private\n\t\t* @returns {Iterator} iterator\n\t\t*/\n\t\tsetNonEnumerableReadOnly( FluentIterator.prototype, iteratorSymbol, function factory() { // eslint-disable-line max-len\n\t\t\treturn this;\n\t\t});\n\t}\n\n\t/**\n\t* Wraps an iterator function as a fluent interface method.\n\t*\n\t* @private\n\t* @param {Function} iterFcn - iterator function\n\t* @returns {Function} method wrapper\n\t*/\n\tfunction createMethod( iterFcn ) {\n\t\treturn method;\n\n\t\t/**\n\t\t* Iterator function wrapper.\n\t\t*\n\t\t* @private\n\t\t* @param {...*} [args] - method arguments\n\t\t* @throws {TypeError} `this` must be a fluent interface iterator\n\t\t* @returns {Iterator} iterator\n\t\t*/\n\t\tfunction method() {\n\t\t\tvar args;\n\t\t\tvar out;\n\t\t\tvar i;\n\n\t\t\tif ( !(this instanceof FluentIterator) ) {\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not a fluent interface iterator.' );\n\t\t\t}\n\t\t\targs = [ this._source ];\n\t\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\t\targs.push( arguments[ i ] );\n\t\t\t}\n\t\t\tout = iterFcn.apply( null, args );\n\n\t\t\t// If the iterator function returns an iterator, in order to support subsequent chaining, we need to create a new fluent interface instance...\n\t\t\tif ( isIteratorLike( out ) ) {\n\t\t\t\treturn new FluentIterator( out );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t}\n\n\t// Bind the provided iterator functions to the constructor prototype...\n\tkeys = objectKeys( methods );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tk = keys[ i ];\n\t\tf = methods[ k ];\n\t\tif ( !isFunction( f ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Object property values must be functions. Key: `%s`. Value: `%s`.', k, f ) );\n\t\t}\n\t\tsetNonEnumerableReadOnly( FluentIterator.prototype, k, createMethod( f ) ); // eslint-disable-line max-len\n\t}\n\n\treturn FluentIterator;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterFlow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a fluent interface for chaining together iterator methods.\n*\n* @module @stdlib/iter/flow\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterHead = require( '@stdlib/iter/head' );\n* var iterSome = require( '@stdlib/iter/some' );\n* var iterFlow = require( '@stdlib/iter/flow' );\n*\n* // Create a \"fluent\" interface:\n* var FluentIterator = iterFlow({\n*     'head': iterHead,\n*     'some': iterSome\n* });\n*\n* // Create a source iterator:\n* var arr = array2iterator( [ 0, 0, 1, 1, 1, 0, 0, 1, 0, 1 ] );\n*\n* // Create a new iterator:\n* var it = new FluentIterator( arr );\n*\n* var bool = it.head( 5 ).some( 3 );\n* // returns true\n*\n* // Create another source iterator:\n* arr = array2iterator( [ 0, 0, 1, 0, 1, 0, 0, 1, 0, 1 ] );\n*\n* // Create a new iterator:\n* it = new FluentIterator( arr );\n*\n* bool = it.head( 5 ).some( 3 );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which invokes a function for each iterated value before returning the iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var isnan = require( '@stdlib/math/base/assert/is-nan' );\n*\n* function assert( v ) {\n*     if ( isnan( v ) ) {\n*         throw new Error( 'should not be NaN' );\n*     }\n* }\n*\n* var iter = iterForEach( randu(), assert );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterForEach( iterator, fcn, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tv = v.value;\n\t\tfcn.call( thisArg, v, i );\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterForEach( iterator[ iteratorSymbol ](), fcn, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterForEach;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which invokes a function for each iterated value before returning the iterated value.\n*\n* @module @stdlib/iter/for-each\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var isnan = require( '@stdlib/math/base/assert/is-nan' );\n* var iterForEach = require( '@stdlib/iter/for-each' );\n*\n* function assert( v ) {\n*     if ( isnan( v ) ) {\n*         throw new Error( 'should not be NaN' );\n*     }\n* }\n*\n* var iter = iterForEach( randu(), assert );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns the first `n` values of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - number of values\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n*\n* var iter = iterHead( randu(), 10 );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterHead( iterator, n ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i > n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterHead( iterator[ iteratorSymbol ](), n );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterHead;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns the first `n` values of a provided iterator.\n*\n* @module @stdlib/iter/head\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterHead = require( '@stdlib/iter/head' );\n*\n* var iter = iterHead( randu(), 10 );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar ceil = require( '@stdlib/math/base/special/ceil' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar DEFAULT_INCREMENT = 1;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns evenly spaced numbers according to a specified increment.\n*\n* @param {number} start - starting value (inclusive)\n* @param {number} stop - stopping value (exclusive)\n* @param {number} [increment=1] - increment\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a number\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterIncrspace( 0, 100, 2 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* // ...\n*/\nfunction iterIncrspace( start, stop, increment ) {\n\tvar iter;\n\tvar incr;\n\tvar FLG;\n\tvar N;\n\tvar i;\n\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( !isNumber( stop ) || isnan( stop ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', stop ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isNumber( increment ) || isnan( increment ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a number. Value: `%s`.', increment ) );\n\t\t}\n\t\tincr = increment;\n\t} else {\n\t\tincr = DEFAULT_INCREMENT;\n\t}\n\tN = ceil( (stop-start)/incr );\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= N ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': start + (i*incr),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterIncrspace( start, stop, incr );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterIncrspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns evenly spaced numbers according to a specified increment.\n*\n* @module @stdlib/iter/incrspace\n*\n* @example\n* var iterIncrspace = require( '@stdlib/iter/incrspace' );\n*\n* var iter = iterIncrspace( 0, 100, 2 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar LinkedList = require( '@stdlib/utils/linked-list' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Finds a node in a linked list hash based on a provided value.\n*\n* @private\n* @param {LinkedList} hash - linked list hash\n* @param {*} v - value to find\n* @returns {(Node|null)} hash node or null\n*/\nfunction getNode( hash, v ) {\n\tvar node = hash.first();\n\twhile ( node ) {\n\t\t// Each node value should be a two-element array: [ value, count ]\n\t\tif ( node.value[ 0 ] === v ) {\n\t\t\treturn node;\n\t\t}\n\t\tnode = node.next;\n\t}\n\treturn null;\n}\n\n/**\n* Cleans a hash by removing nodes having counts below a provided threshold.\n*\n* @private\n* @param {LinkedList} hash - input hash\n* @param {PositiveInteger} threshold - count threshold\n* @returns {LinkedList} input hash\n*/\nfunction clean( hash, threshold ) {\n\tvar node = hash.first();\n\twhile ( node ) {\n\t\tif ( node.value[ 1 ] < threshold ) {\n\t\t\thash.remove( node );\n\t\t}\n\t\tnode = node.next;\n\t}\n\treturn hash;\n}\n\n/**\n* Finds the intersection of two or more iterators.\n*\n* @private\n* @param {Array<Iterator>} iterators - list of iterators\n* @returns {LinkedList} a linked list containing the intersection\n*/\nfunction intersection( iterators ) {\n\tvar hash;\n\tvar it;\n\tvar v;\n\tvar n;\n\tvar j;\n\n\t// Create a new linked list for storing the intersection:\n\thash = new LinkedList();\n\n\t// Find the intersection by first finding the unique values in the first iterator...\n\tit = iterators[ 0 ];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\t// Determine if we have seen this value before...\n\t\tn = getNode( hash, v.value );\n\t\tif ( n === null ) {\n\t\t\t// First time we have seen this value, so add to our unique value hash:\n\t\t\thash.push( [ v.value, 1 ] );\n\t\t}\n\t}\n\t// Check whether we found any unique values:\n\tif ( hash.length === 0 ) {\n\t\treturn hash;\n\t}\n\t// Now that we have found an initial set of unique values, we need to consume each subsequent iterator, updating the count indicating how many iterators have contained an iterated value and removing any values from our initial set which were not present in *all* iterators...\n\tfor ( j = 1; j < iterators.length; j++ ) {\n\t\tit = iterators[ j ];\n\t\twhile ( true ) {\n\t\t\tv = it.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tn = getNode( hash, v.value );\n\t\t\tif ( n && n.value[ 1 ] === j ) {\n\t\t\t\t// Only increment a value's counter the first time we see the value per iterator...\n\t\t\t\tn.value[ 1 ] += 1;\n\t\t\t}\n\t\t}\n\t\t// Upon consuming an iterator, we need to remove any hash values whose count is less than the number of iterators seen thus far:\n\t\tclean( hash, j+1 );\n\n\t\t// Check whether we still have any unique values:\n\t\tif ( hash.length === 0 ) {\n\t\t\treturn hash;\n\t\t}\n\t\t// Move on to the next iterator...\n\t}\n\treturn hash;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns the intersection of two or more iterators.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterIntersection( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterIntersection() {\n\tvar iterators;\n\tvar iterator;\n\tvar niter;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide two or more iterators.' );\n\t}\n\titerators = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\tif ( !isIteratorLike( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\titerators.push( arguments[ i ] );\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\tFLG = false;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* ## Notes\n\t*\n\t* -   The first time `next` is called, we must consume all source values in order to find the intersection (i.e., we \"lazily\" find the intersection, thus resulting in an upfront cost which is amortized over subsequent `next` calls).\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar hash;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\t// Check if this is the first time `next` has been called...\n\t\tif ( iterator === void 0 ) {\n\t\t\thash = intersection( iterators );\n\t\t\tif ( hash.length === 0 ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn {\n\t\t\t\t\t'done': true\n\t\t\t\t};\n\t\t\t}\n\t\t\titerator = hash.iterator();\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value[ 0 ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\treturn iterIntersection.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterIntersection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns the intersection of two or more iterators.\n*\n* @module @stdlib/iter/intersection\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterIntersection = require( '@stdlib/iter/intersection' );\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterIntersection( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar LinkedList = require( '@stdlib/utils/linked-list' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Finds a node in a linked list hash based on a provided hash.\n*\n* @private\n* @param {LinkedList} hash - linked list hash\n* @param {*} v - hash to find\n* @returns {(Node|null)} hash node or null\n*/\nfunction getNode( hash, v ) {\n\tvar node = hash.first();\n\twhile ( node ) {\n\t\t// Each node value should be a three-element array: [ hash, value, count ]\n\t\tif ( node.value[ 0 ] === v ) {\n\t\t\treturn node;\n\t\t}\n\t\tnode = node.next;\n\t}\n\treturn null;\n}\n\n/**\n* Cleans a hash by removing nodes having counts below a provided threshold.\n*\n* @private\n* @param {LinkedList} hash - input hash\n* @param {PositiveInteger} threshold - count threshold\n* @returns {LinkedList} input hash\n*/\nfunction clean( hash, threshold ) {\n\tvar node = hash.first();\n\twhile ( node ) {\n\t\tif ( node.value[ 2 ] < threshold ) {\n\t\t\thash.remove( node );\n\t\t}\n\t\tnode = node.next;\n\t}\n\treturn hash;\n}\n\n/**\n* Finds the intersection of two or more iterators according to a hash function.\n*\n* @private\n* @param {Array<Iterator>} iterators - list of iterators\n* @param {Function} hashFcn - hash function\n* @param {*} thisArg - execution context\n* @returns {LinkedList} a linked list containing the intersection\n*/\nfunction intersection( iterators, hashFcn, thisArg ) {\n\tvar hash;\n\tvar it;\n\tvar hv;\n\tvar v;\n\tvar n;\n\tvar j;\n\n\t// Create a new linked list for storing the intersection:\n\thash = new LinkedList();\n\n\t// Find the intersection by first finding the unique values in the first iterator...\n\tit = iterators[ 0 ];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\thv = hashFcn.call( thisArg, v.value );\n\n\t\t// Determine if we have seen this hash before...\n\t\tn = getNode( hash, hv );\n\t\tif ( n === null ) {\n\t\t\t// First time we have seen this hash, so add to our set of hashes:\n\t\t\thash.push( [ hv, v.value, 1 ] );\n\t\t}\n\t}\n\t// Check whether we found any unique hashes:\n\tif ( hash.length === 0 ) {\n\t\treturn hash;\n\t}\n\t// Now that we have found an initial set of unique hashes, we need to consume each subsequent iterator, updating the count indicating how many iterators have contained an iterated value mapping to a given hash and removing any hashes from our initial set which were not found in *all* iterators...\n\tfor ( j = 1; j < iterators.length; j++ ) {\n\t\tit = iterators[ j ];\n\t\twhile ( true ) {\n\t\t\tv = it.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\thv = hashFcn.call( thisArg, v.value );\n\t\t\tn = getNode( hash, hv );\n\t\t\tif ( n && n.value[ 2 ] === j ) {\n\t\t\t\t// Only increment a hash's counter the first time we see the hash per iterator...\n\t\t\t\tn.value[ 2 ] += 1;\n\t\t\t}\n\t\t}\n\t\t// Upon consuming an iterator, we need to remove any hashes whose count is less than the number of iterators seen thus far:\n\t\tclean( hash, j+1 );\n\n\t\t// Check whether we still have any unique hashes:\n\t\tif ( hash.length === 0 ) {\n\t\t\treturn hash;\n\t\t}\n\t\t// Move on to the next iterator...\n\t}\n\treturn hash;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns the intersection of two or more iterators according to a hash function.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @param {Function} hashFcn - hash function\n* @param {*} [thisArg] - execution context\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @throws {TypeError} must provide a hash function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function hashFcn( v ) {\n*     return v.toString();\n* }\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterIntersectionByHash( it1, it2, hashFcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterIntersectionByHash() {\n\tvar iterators;\n\tvar iterator;\n\tvar hashFcn;\n\tvar thisArg;\n\tvar niter;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\titerators = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\tif ( isIteratorLike( arguments[ i ] ) ) {\n\t\t\titerators.push( arguments[ i ] );\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\tniter = iterators.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide two or more iterators.' );\n\t}\n\tif ( niter === arguments.length ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide a hash function.' );\n\t}\n\tif ( arguments.length > niter+2 ) {\n\t\t// Addresses the case: fcn( it, it, null, it, it, hashFcn )\n\t\tthrow new TypeError( 'invalid argument. Iterator arguments must be iterator protocol-compliant objects.' );\n\t}\n\thashFcn = arguments[ i ];\n\tif ( !isFunction( hashFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Hash function argument must be a function. Value: `%s`.', hashFcn ) );\n\t}\n\tthisArg = arguments[ i+1 ];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\tFLG = false;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* ## Notes\n\t*\n\t* -   The first time `next` is called, we must consume all source values in order to find the intersection (i.e., we \"lazily\" find the intersection, thus resulting in an upfront cost which is amortized over subsequent `next` calls).\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar hash;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\t// Check if this is the first time `next` has been called...\n\t\tif ( iterator === void 0 ) {\n\t\t\thash = intersection( iterators, hashFcn, thisArg );\n\t\t\tif ( hash.length === 0 ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn {\n\t\t\t\t\t'done': true\n\t\t\t\t};\n\t\t\t}\n\t\t\titerator = hash.iterator();\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value[ 1 ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\targs.push( hashFcn );\n\t\targs.push( thisArg );\n\t\treturn iterIntersectionByHash.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterIntersectionByHash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns the intersection of two or more iterators according to a hash function.\n*\n* @module @stdlib/iter/intersection-by-hash\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterIntersectionByHash = require( '@stdlib/iter/intersection-by-hash' );\n*\n* function hashFcn( v ) {\n*     return v.toString();\n* }\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterIntersectionByHash( it1, it2, hashFcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Consumes an iterator and returns the last iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {*} last iterated value\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var v = iterLast( it );\n* // returns 1\n*/\nfunction iterLast( iterator ) {\n\tvar last;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn last;\n\t\t}\n\t\tlast = v.value;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterLast;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Consume an iterator and return the last iterated value.\n*\n* @module @stdlib/iter/last\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterLast = require( '@stdlib/iter/last' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var v = iterLast( it );\n* // returns 1\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Consumes an iterator and returns the number of iterated values (i.e., the iterator length).\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {NonNegativeInteger} iterator length\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var v = iterLength( it );\n* // returns 5\n*/\nfunction iterLength( iterator ) {\n\tvar count;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\tcount = 0;\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn count;\n\t\t}\n\t\tcount += 1;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterLength;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Consume an iterator and return the number of iterated values (i.e., the iterator length).\n*\n* @module @stdlib/iter/length\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterLength = require( '@stdlib/iter/length' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var len = iterLength( it );\n* // returns 5\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns evenly spaced numbers over a specified interval.\n*\n* @param {number} start - starting value (inclusive)\n* @param {number} stop - stopping value (inclusive)\n* @param {NonNegativeInteger} [N=100] - number of values\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a nonnegative integer\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterLinspace( 0, 99, 100 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\nfunction iterLinspace( start, stop, N ) {\n\tvar delta;\n\tvar step;\n\tvar iter;\n\tvar FLG;\n\tvar n;\n\tvar d;\n\tvar i;\n\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( !isNumber( stop ) || isnan( stop ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', stop ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isNonNegativeInteger( N ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t\t}\n\t\tn = N;\n\t} else {\n\t\tn = 100;\n\t}\n\tdelta = stop - start;\n\td = n - 1;\n\tstep = delta / d;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* ## Notes\n\t*\n\t* -   Provides specialized support for denormalized numbers by switching the order of multiplication and division operations (see <https://github.com/numpy/numpy/issues/5437>).\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i >= n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( i === 0 ) {\n\t\t\treturn {\n\t\t\t\t'value': start,\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\tif ( i === d ) {\n\t\t\treturn {\n\t\t\t\t'value': stop,\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\t// Provide support for when the `step` has underflowed (e.g., when wanting to create linearly spaced denormalized numbers)...\n\t\tif ( step === 0.0 ) {\n\t\t\tv = ((i/d)*delta) + start;\n\t\t} else {\n\t\t\tv = (i*step) + start;\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterLinspace( start, stop, n );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterLinspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns evenly spaced numbers over a specified interval.\n*\n* @module @stdlib/iter/linspace\n*\n* @example\n* var iterLinspace = require( '@stdlib/iter/linspace' );\n*\n* var iter = iterLinspace( 0, 99, 100 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// VARIABLES //\n\nvar DEFAULT_BASE = 10;\nvar DEFAULT_LEN = 100;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns evenly spaced numbers on a log scale.\n*\n* @param {number} start - exponent of starting value (inclusive)\n* @param {number} stop - exponent of stopping value (inclusive)\n* @param {NonNegativeInteger} [N=100] - number of values\n* @param {Options} [options] - function options\n* @param {PositiveNumber} [options.base=10] - base of log space\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} `N` argument must be a nonnegative integer\n* @throws {TypeError} `options` argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterLogspace( 0, 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 10\n*\n* v = iter.next().value;\n* // returns 100\n*\n* // ...\n*/\nfunction iterLogspace( start, stop, N, options ) {\n\tvar step;\n\tvar iter;\n\tvar FLG;\n\tvar b;\n\tvar n;\n\tvar d;\n\tvar i;\n\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( !isNumber( stop ) || isnan( stop ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', stop ) );\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( isNonNegativeInteger( N ) ) {\n\t\t\tn = N;\n\t\t\tb = DEFAULT_BASE;\n\t\t} else if ( isPlainObject( N ) ) {\n\t\t\tn = DEFAULT_LEN;\n\t\t\tif ( hasOwnProp( N, 'base' ) ) {\n\t\t\t\tif ( !isPositiveNumber( N.base ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'base', N.base ) );\n\t\t\t\t}\n\t\t\t\tb = N.base;\n\t\t\t} else {\n\t\t\t\tb = DEFAULT_BASE;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either a nonnegative integer or an object. Value: `%s`.', N ) );\n\t\t}\n\t} else if ( arguments.length >= 4 ) {\n\t\tif ( !isNonNegativeInteger( N ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t\t}\n\t\tn = N;\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'base' ) ) {\n\t\t\tif ( !isPositiveNumber( options.base ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'base', options.base ) );\n\t\t\t}\n\t\t\tb = options.base;\n\t\t} else {\n\t\t\tb = DEFAULT_BASE;\n\t\t}\n\t} else {\n\t\tn = DEFAULT_LEN;\n\t\tb = DEFAULT_BASE;\n\t}\n\td = n - 1;\n\tstep = (stop-start) / d;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( i === 0 ) {\n\t\t\treturn {\n\t\t\t\t'value': pow( b, start ),\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\tif ( i === d ) {\n\t\t\treturn {\n\t\t\t\t'value': pow( b, stop ),\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': pow( b, (i*step)+start ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterLogspace( start, stop, n, {\n\t\t\t'base': b\n\t\t});\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterLogspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns evenly spaced numbers on a log scale.\n*\n* @module @stdlib/iter/logspace\n*\n* @example\n* var iterLogspace = require( '@stdlib/iter/logspace' );\n*\n* var iter = iterLogspace( 0, 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 10\n*\n* v = iter.next().value;\n* // returns 100\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which invokes a function for each iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n*\n* function transform( v ) {\n*     return v * 10.0;\n* }\n*\n* var iter = iterMap( randu(), transform );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterMap( iterator, fcn, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\ti += 1;\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, v.value, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterMap( iterator[ iteratorSymbol ](), fcn, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which invokes a function for each iterated value.\n*\n* @module @stdlib/iter/map\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterMap = require( '@stdlib/iter/map' );\n*\n* function transform( v ) {\n*     return v * 10.0;\n* }\n*\n* var iter = iterMap( randu(), transform );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which transforms iterated values from two or more iterators by applying the iterated values as arguments to a provided function.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @throws {TypeError} callback argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function transform( x, y ) {\n*     return x + y;\n* }\n*\n* var it1 = array2iterator( [ 1.0, 2.0 ] );\n* var it2 = array2iterator( [ 3.0, 4.0 ] );\n*\n* var iter = iterMapN( it1, it2, transform );\n*\n* var v = iter.next().value;\n* // returns 4.0\n*\n* v = iter.next().value;\n* // returns 6.0\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterMapN() {\n\tvar iterators;\n\tvar thisArg;\n\tvar niter;\n\tvar clbk;\n\tvar iter;\n\tvar FLG;\n\tvar idx;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( !isFunction( arguments[ niter-1 ] ) ) {\n\t\tniter -= 1;\n\t\tthisArg = arguments[ niter ];\n\t}\n\tniter -= 1;\n\tclbk = arguments[ niter ];\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', clbk ) );\n\t}\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide two or more iterators.' );\n\t}\n\titerators = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\tif ( !isIteratorLike( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\titerators.push( arguments[ i ] );\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\tFLG = false;\n\tidx = -1;\n\ti = 0;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar args;\n\t\tvar v;\n\t\tvar i;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\targs = [];\n\t\tidx += 1;\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tv = iterators[ i ].next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\targs.push( v.value );\n\t\t}\n\t\targs.push( idx );\n\t\treturn {\n\t\t\t'value': clbk.apply( thisArg, args ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\targs.push( clbk );\n\t\targs.push( thisArg );\n\t\treturn iterMapN.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterMapN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which transforms iterated values from two or more iterators by applying the iterated values as arguments to a provided function.\n*\n* @module @stdlib/iter/mapn\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterMapN = require( '@stdlib/iter/mapn' );\n*\n* function transform( x, y ) {\n*     return x + y;\n* }\n*\n* var it1 = array2iterator( [ 1.0, 2.0 ] );\n* var it2 = array2iterator( [ 3.0, 4.0 ] );\n*\n* var iter = iterMapN( it1, it2, transform );\n*\n* var v = iter.next().value;\n* // returns 4.0\n*\n* v = iter.next().value;\n* // returns 6.0\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether all iterated values are falsy.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {boolean} boolean indicating whether all iterated values are falsy\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterNone( it );\n* // returns false\n*/\nfunction iterNone( iterator ) {\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( v.value ) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterNone;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all iterated values are falsy.\n*\n* @module @stdlib/iter/none\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterNone = require( '@stdlib/iter/none' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterNone( it );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether every iterated value fails a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether every iterated value fails a test implemented by a predicate function\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function predicate( v ) {\n*     return ( v <= 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 1 ] );\n*\n* var bool = iterNoneBy( it, predicate );\n* // returns true\n*/\nfunction iterNoneBy( iterator, predicate, thisArg ) {\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( predicate.call( thisArg, v.value, i ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterNoneBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether every iterated value fails a test implemented by a predicate function.\n*\n* @module @stdlib/iter/none-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterNoneBy = require( '@stdlib/iter/none-by' );\n*\n* function predicate( v ) {\n*     return ( v <= 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 1, 1, 1 ] );\n*\n* var bool = iterNoneBy( it, predicate );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns the nth iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - iteration number\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {*} nth iterated value\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 0, 0, 1, 0, 0 ] );\n*\n* var v = iterNth( it, 3 );\n* // returns 1\n*/\nfunction iterNth( iterator, n ) {\n\tvar i;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\ti = 0;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( i === n ) {\n\t\t\treturn v.value;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterNth;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the nth iterated value.\n*\n* @module @stdlib/iter/nth\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterNth = require( '@stdlib/iter/nth' );\n*\n* var it = array2iterator( [ 0, 0, 1, 0, 0 ] );\n*\n* var v = iterNth( it, 3 );\n* // returns 1\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isArrayLike = require( '@stdlib/assert/is-array-like-object' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator pipeline.\n*\n* @param {(Function|FunctionArray)} iterFcn0 - iterator function or an array of iterator functions\n* @param {...Function} [iterFcn] - iterator function(s)\n* @throws {TypeError} all arguments must be functions\n* @throws {Error} must provide at least one iterator function\n* @returns {Function} iterator pipeline\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterSomeBy = require( '@stdlib/iter/some-by' );\n* var iterHead = require( '@stdlib/iter/head' );\n* var iterThunk = require( '@stdlib/iter/pipeline-thunk' );\n*\n* function threshold( r ) {\n*     return ( r > 0.95 );\n* }\n*\n* var it1 = iterThunk( iterHead, 100 );\n* var it2 = iterThunk( iterSomeBy, 5, threshold );\n*\n* var p = iterPipeline( it1, it2 );\n*\n* var bool = p( randu() );\n* // returns <boolean>\n*/\nfunction iterPipeline() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\n\tnFuncs = arguments.length;\n\tif ( nFuncs === 1 && isArrayLike( arguments[ 0 ] ) ) {\n\t\tf = arguments[ 0 ].slice();\n\t\tnFuncs = f.length;\n\t} else {\n\t\tf = [];\n\t\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\t\tf.push( arguments[ i ] );\n\t\t}\n\t}\n\tif ( nFuncs === 0 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide at least one iterator function.' );\n\t}\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid arguments. All arguments must be functions. Value: `%s`.', f[ i ] ) );\n\t\t}\n\t}\n\treturn pipeline;\n\n\t/**\n\t* Pipeline function.\n\t*\n\t* @private\n\t* @param {Iterator} iterator - source iterator\n\t* @throws {TypeError} must provide an iterator\n\t* @throws {TypeError} each iterator function, except the last iterator function, within an iterator pipeline must return an iterator\n\t* @returns {(Iterator|*)} an iterator or pipeline result\n\t*/\n\tfunction pipeline( iterator ) {\n\t\tvar iter;\n\t\tif ( !isIteratorLike( iterator ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t\t}\n\t\titer = iterator;\n\t\tfor ( i = 0; i < nFuncs-1; i++ ) {\n\t\t\titer = f[ i ]( iter );\n\t\t\tif ( !isIteratorLike( iter ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Each iterator function, except the last iterator function, within an iterator pipeline must return an iterator. Value: `%s`.', iter ) );\n\t\t\t}\n\t\t}\n\t\treturn f[ nFuncs-1 ]( iter );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterPipeline;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator pipeline.\n*\n* @module @stdlib/iter/pipeline\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterSomeBy = require( '@stdlib/iter/some-by' );\n* var iterHead = require( '@stdlib/iter/head' );\n* var iterThunk = require( '@stdlib/iter/pipeline-thunk' );\n* var iterPipeline = require( '@stdlib/iter/pipeline' );\n*\n* function threshold( r ) {\n*     return ( r > 0.95 );\n* }\n*\n* var it1 = iterThunk( iterHead, 100 );\n* var it2 = iterThunk( iterSomeBy, 5, threshold );\n*\n* var p = iterPipeline( it1, it2 );\n*\n* var bool = p( randu() );\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator \"thunk\".\n*\n* @param {Function} iterFcn - iterator function\n* @param {...*} [args] - function arguments\n* @throws {TypeError} first argument must be a function\n* @returns {Function} iterator \"thunk\"\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterSome = require( '@stdlib/iter/some' );\n*\n* var it = array2iterator( [ 0, 0, 1, 1, 1 ] );\n*\n* var thunk = iterThunk( iterSome, 3 );\n*\n* var bool = thunk( it );\n* // returns true\n*/\nfunction iterThunk( iterFcn ) {\n\tvar pargs;\n\tvar nargs;\n\tvar i;\n\tif ( !isFunction( iterFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', iterFcn ) );\n\t}\n\tnargs = arguments.length;\n\tpargs = [];\n\tfor ( i = 1; i < nargs; i++ ) {\n\t\tpargs.push( arguments[ i ] );\n\t}\n\treturn thunk;\n\n\t/**\n\t* Invokes an iterator function with a provided iterator and previously provided iterator function arguments.\n\t*\n\t* @private\n\t* @param {Iterator} iter - input iterator\n\t* @throws {TypeError} must provide an iterator\n\t* @returns {*} iterator function result\n\t*/\n\tfunction thunk( iter ) {\n\t\tvar args;\n\t\tvar i;\n\t\tif ( !isIteratorLike( iter ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iter ) );\n\t\t}\n\t\targs = [ iter ];\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\targs.push( pargs[ i ] );\n\t\t}\n\t\treturn iterFcn.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterThunk;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an iterator \"thunk\".\n*\n* @module @stdlib/iter/pipeline-thunk\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterSome = require( '@stdlib/iter/some' );\n* var iterThunk = require( '@stdlib/iter/pipeline-thunk' );\n*\n* var it = array2iterator( [ 0, 0, 1, 1, 1 ] );\n*\n* var thunk = iterThunk( iterSome, 3 );\n*\n* var bool = thunk( it );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar noop = require( '@stdlib/utils/noop' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which skips the last value of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} [clbk] - callback to invoke with the skipped value\n* @param {*} [thisArg] - callback execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = iterPop( array2iterator( [ 1, 2 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterPop( iterator, clbk, thisArg ) {\n\tvar last;\n\tvar iter;\n\tvar FLG;\n\tvar cb;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tcb = clbk;\n\t} else {\n\t\tcb = noop;\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar out;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( i === 0 ) {\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tlast = v.value;\n\t\t\treturn next();\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\tcb.call( thisArg, last );\n\t\t\treturn v;\n\t\t}\n\t\tout = {\n\t\t\t'value': last,\n\t\t\t'done': false\n\t\t};\n\t\tlast = v.value;\n\t\treturn out;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterPop( iterator[ iteratorSymbol ](), cb, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterPop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which skips the last value of a provided iterator.\n*\n* @module @stdlib/iter/pop\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterPop = require( '@stdlib/iter/pop' );\n*\n* var iter = iterPop( array2iterator( [ 1, 2 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which appends additional values to the end of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {*} items - values to append\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = iterPush( array2iterator( [ 1, 2 ] ), 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterPush( iterator ) {\n\tvar items;\n\tvar iter;\n\tvar ret;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\titems = [];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\titems.push( arguments[ i ] );\n\t}\n\tFLG = 0;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG === 2 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( FLG === 1 ) {\n\t\t\ti += 1;\n\t\t\tif ( i >= items.length ) {\n\t\t\t\tFLG = 2;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'value': items[ i ],\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = 1;\n\t\t\ti += 1;\n\t\t\tif ( i >= items.length ) {\n\t\t\t\tFLG = 2;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tret = v;\n\t\t\treturn {\n\t\t\t\t'value': items[ i ],\n\t\t\t\t'done': false\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = 2;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [ iterator[ iteratorSymbol ]() ];\n\t\tfor ( i = 0; i < items.length; i++ ) {\n\t\t\targs.push( items[ i ] );\n\t\t}\n\t\treturn iterPush.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterPush;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which appends additional values to the end of a provided iterator.\n*\n* @module @stdlib/iter/push\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterPush = require( '@stdlib/iter/push' );\n*\n* var iter = iterPush( array2iterator( [ 1, 2 ] ), 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which rejects a provided iterator's values according to a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function predicate( v ) {\n*     return ( v > 2 );\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterReject( src, predicate );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterReject( iterator, predicate, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tif ( !predicate.call( thisArg, v.value, i ) ) {\n\t\t\t\treturn {\n\t\t\t\t\t'value': v.value,\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterReject( iterator[ iteratorSymbol ](), predicate, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterReject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which rejects a provided iterator's values according to a predicate function.\n*\n* @module @stdlib/iter/reject\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterReject = require( '@stdlib/iter/reject' );\n*\n* function predicate( v ) {\n*     return ( v > 2 );\n* }\n*\n* var src = array2iterator( [ 1, 3, 2, 4 ] );\n* var iter = iterReject( src, predicate );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which replicates each iterated value a specified number of times.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - number of times to replicate\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var src = array2iterator( [ 1, 2, 3, 4 ] );\n* var iter = iterReplicate( src, 2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\nfunction iterReplicate( iterator, n ) {\n\tvar value;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\ti = n - 1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += 1;\n\t\tif ( i === n ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\ti = 0; // reset the counter\n\t\t\tvalue = v.value; // cache value\n\t\t}\n\t\treturn {\n\t\t\t'value': value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterReplicate( iterator[ iteratorSymbol ](), n );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterReplicate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which replicates each iterated value a specified number of times.\n*\n* @module @stdlib/iter/replicate\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterReplicate = require( '@stdlib/iter/replicate' );\n*\n* var src = array2iterator( [ 1, 2, 3, 4 ] );\n* var iter = iterReplicate( src, 2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which replicates each iterated value according to a provided function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - function which specifies how many times to replicate an iterated value\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function fcn( v, i ) {\n*     return i + 1;\n* }\n*\n* var src = array2iterator( [ 1, 2, 3, 4 ] );\n* var iter = iterReplicateBy( src, fcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 3\n*/\nfunction iterReplicateBy( iterator, fcn, thisArg ) {\n\tvar value;\n\tvar iter;\n\tvar FLG;\n\tvar t;\n\tvar n;\n\tvar i;\n\tvar j;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tt = -1; // total iteration index\n\ti = -1; // replicate counter\n\tj = -1; // source iteration index\n\tn = 0;  // number of replicates\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @throws {TypeError} callback function must return an integer\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tt += 1;\n\t\t\ti += 1;\n\t\t\tif ( i >= n ) {\n\t\t\t\tv = iterator.next();\n\t\t\t\tif ( v.done ) {\n\t\t\t\t\tFLG = true;\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\tvalue = v.value; // cache value\n\t\t\t\tj += 1;\n\t\t\t\tn = fcn.call( thisArg, value, j, t );\n\t\t\t\tif ( !isInteger( n ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid return value. Callback function must return an integer. Value: `%s`.', n ) );\n\t\t\t\t}\n\t\t\t\ti = 0; // reset the counter\n\t\t\t\tif ( n > 0 ) {\n\t\t\t\t\t// Return the newly cached value...\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Return the cached value...\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterReplicateBy( iterator[ iteratorSymbol ](), fcn, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterReplicateBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which replicates each iterated value according to a provided function.\n*\n* @module @stdlib/iter/replicate-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterReplicateBy = require( '@stdlib/iter/replicate-by' );\n*\n* function fcn( v, i ) {\n*     return i + 1;\n* }\n*\n* var src = array2iterator( [ 1, 2, 3, 4 ] );\n* var iter = iterReplicateBy( src, fcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\nvar noop = require( '@stdlib/utils/noop' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which skips the first value of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} [clbk] - callback to invoke with the skipped value\n* @param {*} [thisArg] - callback execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = iterShift( array2iterator( [ 1, 2 ] ) );\n*\n* var v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterShift( iterator, clbk, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar cb;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tcb = clbk;\n\t} else {\n\t\tcb = noop;\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( i === 0 ) {\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tcb.call( thisArg, v.value );\n\t\t\treturn next();\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterShift( iterator[ iteratorSymbol ](), cb, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterShift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which skips the first value of a provided iterator.\n*\n* @module @stdlib/iter/shift\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterShift = require( '@stdlib/iter/shift' );\n*\n* var iter = iterShift( array2iterator( [ 1, 2 ] ) );\n*\n* var v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar format = require( '@stdlib/string/format' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\n\n\n// VARIABLES //\n\nvar BEGIN = 0;\nvar END = 1e308;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns a subsequence of iterated values from a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {NonNegativeInteger} [begin=0] - start iteration index (inclusive)\n* @param {NonNegativeInteger} [end=1e308] - end iteration index (non-inclusive)\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a nonnegative integer\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n*\n* var iter = iterSlice( randu(), 10, 20 );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterSlice( iterator, begin, end ) {\n\tvar iter;\n\tvar FLG;\n\tvar N;\n\tvar M;\n\tvar n;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tN = begin;\n\t\tif ( arguments.length > 2 ) {\n\t\t\tif ( !isNonNegativeInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tM = end;\n\t\t} else {\n\t\t\tM = END;\n\t\t}\n\t} else {\n\t\tN = BEGIN;\n\t\tM = END;\n\t}\n\tn = M - N;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', finish );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += 1;\n\t\tif ( n > 0 && i < N ) {\n\t\t\t// Lazily consume the first `N` values from the provided iterator...\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tv = iterator.next();\n\t\t\t}\n\t\t}\n\t\tif ( v && v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tn -= 1;\n\t\tif ( n < 0 ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t}\n\t\treturn v;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction finish( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterSlice( iterator[ iteratorSymbol ](), N, M );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterSlice;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns a subsequence of iterated values from a provided iterator.\n*\n* @module @stdlib/iter/slice\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterSlice = require( '@stdlib/iter/slice' );\n*\n* var iter = iterSlice( randu(), 10, 20 );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether at least `n` iterated values are truthy.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - minimum number of truthy elements\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {boolean} boolean indicating whether at least `n` iterated values are truthy\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 0, 0, 1, 1, 1 ] );\n*\n* var bool = iterSome( it, 3 );\n* // returns true\n*/\nfunction iterSome( iterator, n ) {\n\tvar count;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tcount = 0;\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( v.value ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterSome;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least `n` iterated values are truthy.\n*\n* @module @stdlib/iter/some\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterSome = require( '@stdlib/iter/some' );\n*\n* var it = array2iterator( [ 0, 0, 1, 1, 1 ] );\n*\n* var bool = iterSome( it, 3 );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether at least `n` iterated values pass a test implemented by a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - number of successful values\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a function\n* @returns {boolean} boolean indicating whether at least `n` iterated values pass a test implemented by a predicate function\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function predicate( v ) {\n*     return ( v > 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 0, 0, 1 ] );\n*\n* var bool = iterSomeBy( it, 3, predicate );\n* // returns true\n*/\nfunction iterSomeBy( iterator, n, predicate, thisArg ) {\n\tvar count;\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tcount = 0;\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( predicate.call( thisArg, v.value, i ) ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterSomeBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least `n` iterated values pass a test implemented by a predicate function.\n*\n* @module @stdlib/iter/some-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterSomeBy = require( '@stdlib/iter/some-by' );\n*\n* function predicate( v ) {\n*     return ( v > 0 );\n* }\n*\n* var it = array2iterator( [ 1, 1, 0, 0, 1 ] );\n*\n* var bool = iterSomeBy( it, 3, predicate );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar DEFAULT_LENGTH = 1e308;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns a sequence of numbers according to a specified increment.\n*\n* @param {number} start - starting value (inclusive)\n* @param {number} increment - increment\n* @param {number} [N=1e308] - number of values\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @throws {TypeError} third argument must be a nonnegative integer\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterStep( 0, 2, 10 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* // ...\n*/\nfunction iterStep( start, increment, N ) {\n\tvar iter;\n\tvar FLG;\n\tvar n;\n\tvar i;\n\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( !isNumber( increment ) || isnan( increment ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', increment ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isNonNegativeInteger( N ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t\t}\n\t\tn = N;\n\t} else {\n\t\tn = DEFAULT_LENGTH;\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': start + (i*increment),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterStep( start, increment, n );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterStep;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns a sequence of numbers according to a specified increment.\n*\n* @module @stdlib/iter/step\n*\n* @example\n* var iterStep = require( '@stdlib/iter/step' );\n*\n* var iter = iterStep( 0, 2, 10 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar DEFAULT_OFFSET = 0;\nvar DEFAULT_EAGER = false;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which steps by a specified amount.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} stride - stride\n* @param {NonNegativeInteger} [offset=0] - offset\n* @param {boolean} [eager=false] - boolean indicating whether to eagerly advance the input iterator when provided a non-zero offset\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a nonnegative integer\n* @throws {TypeError} fourth argument must be a boolean\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var arr = array2iterator( [ 0, 1, 2, 3, 4, 5, 6, 7 ] );\n*\n* var iter = iterStrided( arr, 2, 1 );\n*\n* var r = iter.next().value;\n* // returns 1\n*\n* r = iter.next().value;\n* // returns 3\n*\n* r = iter.next().value;\n* // returns 5\n*\n* // ...\n*/\nfunction iterStrided( iterator, stride, offset, eager ) {\n\tvar iter;\n\tvar bool;\n\tvar FLG;\n\tvar idx;\n\tvar ret;\n\tvar o;\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isPositiveInteger( stride ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', stride ) );\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tbool = DEFAULT_EAGER;\n\t} else if ( arguments.length > 3 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tif ( !isBoolean( eager ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a boolean. Value: `%s`.', eager ) );\n\t\t}\n\t\tbool = eager;\n\t} else {\n\t\tidx = DEFAULT_OFFSET;\n\t\tbool = DEFAULT_EAGER;\n\t}\n\tif ( bool ) {\n\t\tfor ( i = 0; i < idx; i++ ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\tret = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// NOTE: if we've successfully advanced the input iterator, `i` is currently equal to `idx` (i.e., the offset)\n\t\ti -= 1;\n\t} else {\n\t\ti = -1;\n\t}\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\to = idx;\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\tif ( ret ) {\n\t\t\t\tv = ret;\n\t\t\t\tret = null;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += 1;\n\t\twhile ( i < idx ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\ti += 1;\n\t\t}\n\t\tidx += stride;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t}\n\t\treturn v;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterStrided( iterator[ iteratorSymbol ](), stride, o, bool );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterStrided;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which steps by a specified amount.\n*\n* @module @stdlib/iter/strided\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterStrided = require( '@stdlib/iter/strided' );\n*\n* var arr = array2iterator( [ 0, 1, 2, 3, 4, 5, 6, 7 ] );\n*\n* var iter = iterStrided( arr, 2, 1 );\n*\n* var r = iter.next().value;\n* // returns 1\n*\n* r = iter.next().value;\n* // returns 3\n*\n* r = iter.next().value;\n* // returns 5\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar DEFAULT_OFFSET = 0;\nvar DEFAULT_EAGER = false;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which steps according to a provided callback function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - stride function\n* @param {NonNegativeInteger} [offset=0] - offset\n* @param {boolean} [eager=false] - boolean indicating whether to eagerly advance the input iterator when provided a non-zero offset\n* @param {*} [thisArg] - stride function execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a nonnegative integer\n* @throws {TypeError} fourth argument must be a boolean\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var arr = array2iterator( [ 0, 1, 2, 3, 4, 5, 6, 7 ] );\n*\n* function stride( v, i ) {\n*     return (i % 10)+1;\n* }\n*\n* var iter = iterStridedBy( arr, stride );\n*\n* var r = iter.next().value;\n* // returns 0\n*\n* r = iter.next().value;\n* // returns 1\n*\n* r = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction iterStridedBy( iterator, fcn, offset, eager, thisArg ) {\n\tvar stride;\n\tvar iter;\n\tvar bool;\n\tvar FLG;\n\tvar idx;\n\tvar ctx;\n\tvar ret;\n\tvar o;\n\tvar v;\n\tvar i;\n\tvar s;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( isNonNegativeInteger( offset ) ) {\n\t\t\tidx = offset;\n\t\t} else {\n\t\t\tidx = DEFAULT_OFFSET;\n\t\t\tctx = offset;\n\t\t}\n\t\tbool = DEFAULT_EAGER;\n\t} else if ( arguments.length === 4 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tif ( isBoolean( eager ) ) {\n\t\t\tbool = eager;\n\t\t} else {\n\t\t\tbool = DEFAULT_EAGER;\n\t\t\tctx = eager;\n\t\t}\n\t} else if ( arguments.length > 4 ) {\n\t\tif ( !isNonNegativeInteger( offset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t\t}\n\t\tidx = offset;\n\t\tif ( !isBoolean( eager ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a boolean. Value: `%s`.', eager ) );\n\t\t}\n\t\tbool = eager;\n\t\tctx = thisArg;\n\t} else {\n\t\tidx = DEFAULT_OFFSET;\n\t\tbool = DEFAULT_EAGER;\n\t}\n\tif ( bool ) {\n\t\tfor ( i = 0; i < idx; i++ ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\tret = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// NOTE: if we've successfully advanced the input iterator, `i` is currently equal to `idx` (i.e., the offset)\n\t\ti -= 1;\n\t} else {\n\t\ti = -1;\n\t}\n\ts = -1;\n\tstride = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\to = idx;\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @throws {TypeError} callback function must return a positive integer\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\tif ( ret ) {\n\t\t\t\tv = ret;\n\t\t\t\tret = null;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += 1;\n\t\twhile ( i < idx ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn {\n\t\t\t\t\t'done': true\n\t\t\t\t};\n\t\t\t}\n\t\t\ti += 1;\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\ts += 1;\n\t\tstride = fcn.call( ctx, v.value, i, s, stride );\n\t\tif ( !isPositiveInteger( stride ) ) {\n\t\t\tthrow new TypeError( format( 'invalid return value. Callback function must return a positive integer. Value: `%s`.', stride ) );\n\t\t}\n\t\tidx += stride;\n\t\treturn v;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterStridedBy( iterator[ iteratorSymbol ](), fcn, o, bool, ctx );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterStridedBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which steps according to a provided callback function.\n*\n* @module @stdlib/iter/strided-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterStridedBy = require( '@stdlib/iter/strided-by' );\n*\n* var arr = array2iterator( [ 0, 1, 2, 3, 4, 5, 6, 7 ] );\n*\n* function stride( v, i ) {\n*     return (i % 10)+1;\n* }\n*\n* var iter = iterStridedBy( arr, stride );\n*\n* var r = iter.next().value;\n* // returns 0\n*\n* r = iter.next().value;\n* // returns 1\n*\n* r = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar arraylike2object = require( '@stdlib/array/base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Fills an array-like object view with values returned from an iterator.\n*\n* @param {Iterator} iterator - source iterator\n* @param {Collection} out - output array\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end=out.length] - ending index (non-inclusive)\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be an array-like object\n* @throws {TypeError} third argument must be an integer (starting index) or a callback function\n* @throws {TypeError} fourth argument must be an integer (ending index) or a callback function\n* @throws {TypeError} fifth argument must be a function\n* @returns {Collection} output array\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2arrayview( iter, new Float64Array( 20 ), 5 );\n* // returns <Float64Array>\n*/\nfunction iterator2arrayview( iterator, out ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar begin;\n\tvar end;\n\tvar fcn;\n\tvar set;\n\tvar i;\n\tvar v;\n\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isCollection( out ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', out ) );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs === 2 ) {\n\t\tbegin = 0;\n\t\tend = out.length;\n\t} else if ( nargs === 3 ) {\n\t\tif ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tfcn = arguments[ 2 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 2 ];\n\t\t}\n\t\tend = out.length;\n\t} else if ( nargs === 4 ) {\n\t\tif ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 2 ];\n\t\t\tthisArg = arguments[ 3 ];\n\t\t} else if ( isFunction( arguments[ 3 ] ) ) {\n\t\t\tbegin = arguments[ 2 ];\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 3 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 2 ];\n\t\t\tend = arguments[ 3 ];\n\t\t}\n\t} else if ( nargs === 5 ) {\n\t\tbegin = arguments[ 2 ];\n\t\tif ( isFunction( arguments[ 3 ] ) ) {\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 3 ];\n\t\t\tthisArg = arguments[ 4 ];\n\t\t} else {\n\t\t\tend = arguments[ 3 ];\n\t\t\tfcn = arguments[ 4 ];\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t}\n\t} else { // nargs > 5\n\t\tbegin = arguments[ 2 ];\n\t\tend = arguments[ 3 ];\n\t\tfcn = arguments[ 4 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 5 ];\n\t}\n\tif ( !isInteger( begin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either an integer (starting index) or a function. Value: `%s`.', begin ) );\n\t}\n\tif ( !isInteger( end ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be either an integer (ending index) or a function. Value: `%s`.', end ) );\n\t}\n\tif ( end < 0 ) {\n\t\tend = out.length + end;\n\t\tif ( end < 0 ) {\n\t\t\tend = 0;\n\t\t}\n\t} else if ( end > out.length ) {\n\t\tend = out.length;\n\t}\n\tif ( begin < 0 ) {\n\t\tbegin = out.length + begin;\n\t\tif ( begin < 0 ) {\n\t\t\tbegin = 0;\n\t\t}\n\t}\n\tset = arraylike2object( out ).setter;\n\ti = begin - 1;\n\tif ( fcn ) {\n\t\twhile ( i < end-1 ) {\n\t\t\ti += 1;\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tset( out, i, fcn.call( thisArg, v.value, i, i-begin ) );\n\t\t}\n\t\treturn out;\n\t}\n\twhile ( i < end-1 ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tset( out, i, v.value );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterator2arrayview;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Fill an array-like object view with values returned from an iterator.\n*\n* @module @stdlib/iter/to-array-view\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var Float64Array = require( '@stdlib/array/float64' );\n* var iterator2arrayview = require( '@stdlib/iter/to-array-view' );\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2arrayview( iter, new Float64Array( 20 ), 5 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar arraylike2object = require( '@stdlib/array/base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Fills an array-like object view from right to left with values returned from an iterator.\n*\n* @param {Iterator} iterator - source iterator\n* @param {Collection} out - output array\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end=out.length] - ending index (non-inclusive)\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be an array-like object\n* @throws {TypeError} third argument must be an integer (starting index) or a callback function\n* @throws {TypeError} fourth argument must be an integer (ending index) or a callback function\n* @throws {TypeError} fifth argument must be a function\n* @returns {Collection} output array\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2arrayviewRight( iter, new Float64Array( 20 ), 5 );\n* // returns <Float64Array>\n*/\nfunction iterator2arrayviewRight( iterator, out ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar begin;\n\tvar end;\n\tvar fcn;\n\tvar set;\n\tvar i;\n\tvar v;\n\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isCollection( out ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', out ) );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs === 2 ) {\n\t\tbegin = 0;\n\t\tend = out.length;\n\t} else if ( nargs === 3 ) {\n\t\tif ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tfcn = arguments[ 2 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 2 ];\n\t\t}\n\t\tend = out.length;\n\t} else if ( nargs === 4 ) {\n\t\tif ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 2 ];\n\t\t\tthisArg = arguments[ 3 ];\n\t\t} else if ( isFunction( arguments[ 3 ] ) ) {\n\t\t\tbegin = arguments[ 2 ];\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 3 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 2 ];\n\t\t\tend = arguments[ 3 ];\n\t\t}\n\t} else if ( nargs === 5 ) {\n\t\tbegin = arguments[ 2 ];\n\t\tif ( isFunction( arguments[ 3 ] ) ) {\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 3 ];\n\t\t\tthisArg = arguments[ 4 ];\n\t\t} else {\n\t\t\tend = arguments[ 3 ];\n\t\t\tfcn = arguments[ 4 ];\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t}\n\t} else { // nargs > 5\n\t\tbegin = arguments[ 2 ];\n\t\tend = arguments[ 3 ];\n\t\tfcn = arguments[ 4 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 5 ];\n\t}\n\tif ( !isInteger( begin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either an integer (starting index) or a function. Value: `%s`.', begin ) );\n\t}\n\tif ( !isInteger( end ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be either an integer (ending index) or a function. Value: `%s`.', end ) );\n\t}\n\tif ( end < 0 ) {\n\t\tend = out.length + end;\n\t\tif ( end < 0 ) {\n\t\t\tend = 0;\n\t\t}\n\t} else if ( end > out.length ) {\n\t\tend = out.length;\n\t}\n\tif ( begin < 0 ) {\n\t\tbegin = out.length + begin;\n\t\tif ( begin < 0 ) {\n\t\t\tbegin = 0;\n\t\t}\n\t}\n\tset = arraylike2object( out ).setter;\n\ti = end;\n\tif ( fcn ) {\n\t\twhile ( i > begin ) {\n\t\t\ti -= 1;\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tset( out, i, fcn.call( thisArg, v.value, i, end-i-1 ) );\n\t\t}\n\t\treturn out;\n\t}\n\twhile ( i > begin ) {\n\t\ti -= 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tset( out, i, v.value );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterator2arrayviewRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Fill an array-like object view from right to left with values returned from an iterator.\n*\n* @module @stdlib/iter/to-array-view-right\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var Float64Array = require( '@stdlib/array/float64' );\n* var iterator2arrayviewRight = require( '@stdlib/iter/to-array-view-right' );\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2arrayviewRight( iter, new Float64Array( 20 ), 5 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an array contains a provided value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {*} v - test value\n* @returns {boolean} boolean indicating whether an array contains a provided value\n*\n* @example\n* var bool = contains( [ 1, 2, 3 ], 1 );\n* // returns true\n*\n* bool = contains( [ 1, 2, 3 ], 4 );\n* // returns false\n*/\nfunction contains( arr, v ) {\n\tvar len;\n\tvar i;\n\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns the union of two or more iterators.\n*\n* @param {Iterator} iter0 - first input iterator\n* @param {...Iterator} iterator - subsequent iterators\n* @throws {Error} must provide two or more iterators\n* @throws {TypeError} must provide iterator protocol-compliant objects\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterUnion( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 5\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUnion() {\n\tvar iterators;\n\tvar iterator;\n\tvar niter;\n\tvar iter;\n\tvar hash;\n\tvar FLG;\n\tvar i;\n\n\tniter = arguments.length;\n\tif ( niter < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide two or more iterators.' );\n\t}\n\titerators = [];\n\tfor ( i = 0; i < niter; i++ ) {\n\t\tif ( !isIteratorLike( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\titerators.push( arguments[ i ] );\n\t}\n\thash = [];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and all provided iterators are iterable, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\tif ( !isFunction( iterators[ i ][ iteratorSymbol ] ) ) {\n\t\t\t\tFLG = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( !FLG ) {\n\t\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t\t}\n\t}\n\titerator = iterators[ 0 ];\n\tFLG = false;\n\ti = 0;\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\ti += 1;\n\t\t\t\tif ( i === niter ) {\n\t\t\t\t\tFLG = true;\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\titerator = iterators[ i ];\n\t\t\t} else {\n\t\t\t\tv = v.value;\n\t\t\t\tif ( contains( hash, v ) === false ) {\n\t\t\t\t\thash.push( v );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < niter; i++ ) {\n\t\t\targs.push( iterators[ i ][ iteratorSymbol ]() );\n\t\t}\n\t\treturn iterUnion.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterUnion;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns the union of two or more iterators.\n*\n* @module @stdlib/iter/union\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterUnion = require( '@stdlib/iter/union' );\n*\n* var it1 = array2iterator( [ 1, 2, 1, 2, 4 ] );\n* var it2 = array2iterator( [ 1, 2, 5, 2, 3 ] );\n*\n* var iter = iterUnion( it1, it2 );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 5\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an array contains a provided value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {*} v - test value\n* @returns {boolean} boolean indicating whether an array contains a provided value\n*\n* @example\n* var bool = contains( [ 1, 2, 3 ], 1 );\n* // returns true\n*\n* bool = contains( [ 1, 2, 3 ], 4 );\n* // returns false\n*/\nfunction contains( arr, v ) {\n\tvar len;\n\tvar i;\n\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns unique values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = iterUnique( array2iterator( [ 1, 2, 1, 2, 4 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUnique( iterator ) {\n\tvar iter;\n\tvar hash;\n\tvar FLG;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\thash = [];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tv = v.value;\n\t\t\tif ( contains( hash, v ) === false ) {\n\t\t\t\thash.push( v );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterUnique( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterUnique;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns unique values.\n*\n* @module @stdlib/iter/unique\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterUnique = require( '@stdlib/iter/unique' );\n*\n* var iter = iterUnique( array2iterator( [ 1, 2, 1, 2, 4 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is unique according to a predicate function when compared to a list of values.\n*\n* @private\n* @param {Array} arr - input array\n* @param {*} v - test value\n* @param {Function} predicate - predicate function\n* @param {*} thisArg - evaluation context\n* @returns {boolean} boolean indicating whether a value is \"unique\"\n*\n* @example\n* function predicate( a, b ) {\n*     return ( a !== b );\n* }\n*\n* var bool = isUnique( [ 1, 2, 3 ], 1, predicate, null );\n* // returns false\n*\n* bool = isUnique( [ 1, 2, 3 ], 4, predicate, null );\n* // returns true\n*/\nfunction isUnique( arr, v, predicate, thisArg ) {\n\tvar len;\n\tvar i;\n\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( !predicate.call( thisArg, arr[ i ], v ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns unique values according to a predicate function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - evaluation context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function predicate( a, b ) {\n*     return ( a !== b );\n* }\n*\n* var iter = iterUniqueBy( array2iterator( [ 1, 2, 1, 2, 4 ] ), predicate );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUniqueBy( iterator, predicate, thisArg ) {\n\tvar iter;\n\tvar hash;\n\tvar FLG;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\thash = [];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tv = v.value;\n\t\t\tif ( isUnique( hash, v, predicate, thisArg ) ) {\n\t\t\t\thash.push( v );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterUniqueBy( iterator[ iteratorSymbol ](), predicate, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterUniqueBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns unique values according to a predicate function.\n*\n* @module @stdlib/iter/unique-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterUniqueBy = require( '@stdlib/iter/unique-by' );\n*\n* function predicate( a, b ) {\n*     return ( a !== b );\n* }\n*\n* var iter = iterUniqueBy( array2iterator( [ 1, 2, 1, 2, 4 ] ), predicate );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an array contains a provided value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {*} v - test value\n* @returns {boolean} boolean indicating whether an array contains a provided value\n*\n* @example\n* var bool = contains( [ 1, 2, 3 ], 1 );\n* // returns true\n*\n* bool = contains( [ 1, 2, 3 ], 4 );\n* // returns false\n*/\nfunction contains( arr, v ) {\n\tvar len;\n\tvar i;\n\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns unique values according to a hash function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} hashFcn - hash function\n* @param {*} [thisArg] - evaluation context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* function hashFcn( v ) {\n*     return v.toString();\n* }\n*\n* var iter = iterUniqueByHash( array2iterator( [ 1, 2, 1, 2, 4 ] ), hashFcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUniqueByHash( iterator, hashFcn, thisArg ) {\n\tvar iter;\n\tvar hash;\n\tvar FLG;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( hashFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', hashFcn ) );\n\t}\n\thash = [];\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar hv;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\thv = hashFcn.call( thisArg, v.value );\n\t\t\tif ( contains( hash, hv ) === false ) {\n\t\t\t\thash.push( hv );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterUniqueByHash( iterator[ iteratorSymbol ](), hashFcn, thisArg ); // eslint-disable-line max-len\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterUniqueByHash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns unique values according to a hash function.\n*\n* @module @stdlib/iter/unique-by-hash\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterUniqueByHash = require( '@stdlib/iter/unique-by-hash' );\n*\n* function hashFcn( v ) {\n*     return v.toString();\n* }\n*\n* var iter = iterUniqueByHash( array2iterator( [ 1, 2, 1, 2, 4 ] ), hashFcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 4\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns numbers incremented by `1`.\n*\n* @param {number} start - starting value (inclusive)\n* @param {number} [stop=+infinity] - stopping value\n* @throws {TypeError} first argument must be a number\n* @throws {TypeError} second argument must be a number\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterUnitspace( 0, 99 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\nfunction iterUnitspace( start, stop ) {\n\tvar STOP;\n\tvar iter;\n\tvar curr;\n\tvar FLG;\n\tif ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number. Value: `%s`.', start ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNumber( stop ) || isnan( stop ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a number. Value: `%s`.', stop ) );\n\t\t}\n\t\tSTOP = stop;\n\t} else {\n\t\tSTOP = PINF;\n\t}\n\tcurr = start - 1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tcurr += 1;\n\t\tif ( curr > STOP ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': curr,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterUnitspace( start, STOP );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterUnitspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns numbers incremented by `1`.\n*\n* @module @stdlib/iter/unitspace\n*\n* @example\n* var iterUnitspace = require( '@stdlib/iter/unitspace' );\n*\n* var iter = iterUnitspace( 0, 99 );\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which prepends values to the beginning of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {*} items - values to prepend\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = iterUnshift( array2iterator( [ 1, 2 ] ), 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterUnshift( iterator ) {\n\tvar items;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\titems = [];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\titems.push( arguments[ i ] );\n\t}\n\tFLG = 0;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG === 2 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( FLG === 1 ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = 2;\n\t\t\t}\n\t\t\treturn v;\n\t\t}\n\t\ti += 1;\n\t\tif ( i >= items.length ) {\n\t\t\tFLG = 1;\n\t\t\treturn next();\n\t\t}\n\t\treturn {\n\t\t\t'value': items[ i ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = 2;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [ iterator[ iteratorSymbol ]() ];\n\t\tfor ( i = 0; i < items.length; i++ ) {\n\t\t\targs.push( items[ i ] );\n\t\t}\n\t\treturn iterUnshift.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterUnshift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which prepends values to the beginning of a provided iterator.\n*\n* @module @stdlib/iter/unshift\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterUnshift = require( '@stdlib/iter/unshift' );\n*\n* var iter = iterUnshift( array2iterator( [ 1, 2 ] ), 3, 4 );\n*\n* var v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property' ;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name iterAdvance\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/advance}\n*/\nimport iterAdvance from './../advance';\nsetReadOnly( ns, 'iterAdvance', iterAdvance );\n\n/**\n* @name iterAny\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/any}\n*/\nimport iterAny from './../any';\nsetReadOnly( ns, 'iterAny', iterAny );\n\n/**\n* @name iterAnyBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/any-by}\n*/\nimport iterAnyBy from './../any-by';\nsetReadOnly( ns, 'iterAnyBy', iterAnyBy );\n\n/**\n* @name iterConcat\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/concat}\n*/\nimport iterConcat from './../concat';\nsetReadOnly( ns, 'iterConcat', iterConcat );\n\n/**\n* @name iterConstant\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/constant}\n*/\nimport iterConstant from './../constant';\nsetReadOnly( ns, 'iterConstant', iterConstant );\n\n/**\n* @name iterCounter\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/counter}\n*/\nimport iterCounter from './../counter';\nsetReadOnly( ns, 'iterCounter', iterCounter );\n\n/**\n* @name iterDatespace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/datespace}\n*/\nimport iterDatespace from './../datespace';\nsetReadOnly( ns, 'iterDatespace', iterDatespace );\n\n/**\n* @name iterDedupe\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/dedupe}\n*/\nimport iterDedupe from './../dedupe';\nsetReadOnly( ns, 'iterDedupe', iterDedupe );\n\n/**\n* @name iterDedupeBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/dedupe-by}\n*/\nimport iterDedupeBy from './../dedupe-by';\nsetReadOnly( ns, 'iterDedupeBy', iterDedupeBy );\n\n/**\n* @name iterEmpty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/empty}\n*/\nimport iterEmpty from './../empty';\nsetReadOnly( ns, 'iterEmpty', iterEmpty );\n\n/**\n* @name iterEvery\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/every}\n*/\nimport iterEvery from './../every';\nsetReadOnly( ns, 'iterEvery', iterEvery );\n\n/**\n* @name iterEveryBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/every-by}\n*/\nimport iterEveryBy from './../every-by';\nsetReadOnly( ns, 'iterEveryBy', iterEveryBy );\n\n/**\n* @name iterFill\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/fill}\n*/\nimport iterFill from './../fill';\nsetReadOnly( ns, 'iterFill', iterFill );\n\n/**\n* @name iterFilter\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/filter}\n*/\nimport iterFilter from './../filter';\nsetReadOnly( ns, 'iterFilter', iterFilter );\n\n/**\n* @name iterFilterMap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/filter-map}\n*/\nimport iterFilterMap from './../filter-map';\nsetReadOnly( ns, 'iterFilterMap', iterFilterMap );\n\n/**\n* @name iterFirst\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/first}\n*/\nimport iterFirst from './../first';\nsetReadOnly( ns, 'iterFirst', iterFirst );\n\n/**\n* @name iterFlow\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/flow}\n*/\nimport iterFlow from './../flow';\nsetReadOnly( ns, 'iterFlow', iterFlow );\n\n/**\n* @name iterForEach\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/for-each}\n*/\nimport iterForEach from './../for-each';\nsetReadOnly( ns, 'iterForEach', iterForEach );\n\n/**\n* @name iterHead\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/head}\n*/\nimport iterHead from './../head';\nsetReadOnly( ns, 'iterHead', iterHead );\n\n/**\n* @name iterIncrspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/incrspace}\n*/\nimport iterIncrspace from './../incrspace';\nsetReadOnly( ns, 'iterIncrspace', iterIncrspace );\n\n/**\n* @name iterIntersection\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/intersection}\n*/\nimport iterIntersection from './../intersection';\nsetReadOnly( ns, 'iterIntersection', iterIntersection );\n\n/**\n* @name iterIntersectionByHash\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/intersection-by-hash}\n*/\nimport iterIntersectionByHash from './../intersection-by-hash';\nsetReadOnly( ns, 'iterIntersectionByHash', iterIntersectionByHash );\n\n/**\n* @name iterLast\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/last}\n*/\nimport iterLast from './../last';\nsetReadOnly( ns, 'iterLast', iterLast );\n\n/**\n* @name iterLength\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/length}\n*/\nimport iterLength from './../length';\nsetReadOnly( ns, 'iterLength', iterLength );\n\n/**\n* @name iterLinspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/linspace}\n*/\nimport iterLinspace from './../linspace';\nsetReadOnly( ns, 'iterLinspace', iterLinspace );\n\n/**\n* @name iterLogspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/logspace}\n*/\nimport iterLogspace from './../logspace';\nsetReadOnly( ns, 'iterLogspace', iterLogspace );\n\n/**\n* @name iterMap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/map}\n*/\nimport iterMap from './../map';\nsetReadOnly( ns, 'iterMap', iterMap );\n\n/**\n* @name iterMapN\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/mapn}\n*/\nimport iterMapN from './../mapn';\nsetReadOnly( ns, 'iterMapN', iterMapN );\n\n/**\n* @name iterNone\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/none}\n*/\nimport iterNone from './../none';\nsetReadOnly( ns, 'iterNone', iterNone );\n\n/**\n* @name iterNoneBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/none-by}\n*/\nimport iterNoneBy from './../none-by';\nsetReadOnly( ns, 'iterNoneBy', iterNoneBy );\n\n/**\n* @name iterNth\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/nth}\n*/\nimport iterNth from './../nth';\nsetReadOnly( ns, 'iterNth', iterNth );\n\n/**\n* @name iterPipeline\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/pipeline}\n*/\nimport iterPipeline from './../pipeline';\nsetReadOnly( ns, 'iterPipeline', iterPipeline );\n\n/**\n* @name iterThunk\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/pipeline-thunk}\n*/\nimport iterThunk from './../pipeline-thunk';\nsetReadOnly( ns, 'iterThunk', iterThunk );\n\n/**\n* @name iterPop\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/pop}\n*/\nimport iterPop from './../pop';\nsetReadOnly( ns, 'iterPop', iterPop );\n\n/**\n* @name iterPush\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/push}\n*/\nimport iterPush from './../push';\nsetReadOnly( ns, 'iterPush', iterPush );\n\n/**\n* @name iterReject\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/reject}\n*/\nimport iterReject from './../reject';\nsetReadOnly( ns, 'iterReject', iterReject );\n\n/**\n* @name iterReplicate\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/replicate}\n*/\nimport iterReplicate from './../replicate';\nsetReadOnly( ns, 'iterReplicate', iterReplicate );\n\n/**\n* @name iterReplicateBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/replicate-by}\n*/\nimport iterReplicateBy from './../replicate-by';\nsetReadOnly( ns, 'iterReplicateBy', iterReplicateBy );\n\n/**\n* @name iterShift\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/shift}\n*/\nimport iterShift from './../shift';\nsetReadOnly( ns, 'iterShift', iterShift );\n\n/**\n* @name iterSlice\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/slice}\n*/\nimport iterSlice from './../slice';\nsetReadOnly( ns, 'iterSlice', iterSlice );\n\n/**\n* @name iterSome\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/some}\n*/\nimport iterSome from './../some';\nsetReadOnly( ns, 'iterSome', iterSome );\n\n/**\n* @name iterSomeBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/some-by}\n*/\nimport iterSomeBy from './../some-by';\nsetReadOnly( ns, 'iterSomeBy', iterSomeBy );\n\n/**\n* @name iterStep\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/step}\n*/\nimport iterStep from './../step';\nsetReadOnly( ns, 'iterStep', iterStep );\n\n/**\n* @name iterStrided\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/strided}\n*/\nimport iterStrided from './../strided';\nsetReadOnly( ns, 'iterStrided', iterStrided );\n\n/**\n* @name iterStridedBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/strided-by}\n*/\nimport iterStridedBy from './../strided-by';\nsetReadOnly( ns, 'iterStridedBy', iterStridedBy );\n\n/**\n* @name iterator2arrayview\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/to-array-view}\n*/\nimport iterator2arrayview from './../to-array-view';\nsetReadOnly( ns, 'iterator2arrayview', iterator2arrayview );\n\n/**\n* @name iterator2arrayviewRight\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/to-array-view-right}\n*/\nimport iterator2arrayviewRight from './../to-array-view-right';\nsetReadOnly( ns, 'iterator2arrayviewRight', iterator2arrayviewRight );\n\n/**\n* @name iterUnion\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/union}\n*/\nimport iterUnion from './../union';\nsetReadOnly( ns, 'iterUnion', iterUnion );\n\n/**\n* @name iterUnique\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unique}\n*/\nimport iterUnique from './../unique';\nsetReadOnly( ns, 'iterUnique', iterUnique );\n\n/**\n* @name iterUniqueBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unique-by}\n*/\nimport iterUniqueBy from './../unique-by';\nsetReadOnly( ns, 'iterUniqueBy', iterUniqueBy );\n\n/**\n* @name iterUniqueByHash\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unique-by-hash}\n*/\nimport iterUniqueByHash from './../unique-by-hash';\nsetReadOnly( ns, 'iterUniqueByHash', iterUniqueByHash );\n\n/**\n* @name iterUnitspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unitspace}\n*/\nimport iterUnitspace from './../unitspace';\nsetReadOnly( ns, 'iterUnitspace', iterUnitspace );\n\n/**\n* @name iterUnshift\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/iter/unshift}\n*/\nimport iterUnshift from './../unshift';\nsetReadOnly( ns, 'iterUnshift', iterUnshift );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["isIteratorLike","require$$0","isNonNegativeInteger","require$$1","isPrimitive","format","require$$2","lib","iterator","n","N","i","TypeError","arguments","length","next","done","v","value","isFunction","predicate","thisArg","call","setReadOnly","hasOwnProp","require$$3","iteratorSymbol","require$$4","require$$5","main","iterConcat","iterators","niter","iter","FLG","Error","push","end","factory","args","apply","isPlainObject","iterConstant","options","opts","iterCounter","isString","isDateObject","convert_1","Date","parse","getTime","contains","require$$6","convert","require$$10","ROUNDING_MODES","ROUNDING_FCNS","floor","require$$7","ceil","require$$8","round","require$$9","iterDatespace","start","stop","step","rfcn","t1","t2","d","isPositiveInteger","iterDedupe","limit","count","prev","NaN","iterDedupeBy","clbk","sprev","dprev","acc","fcn","out","iterEmpty","END","iterFill","begin","M","finish","iterFilter","iterFilterMap","setNonEnumerableReadOnly","setNonEnumerable","isObject","objectKeys","methods","keys","k","f","FluentIterator","this","createMethod","iterFcn","_source","prototype","_done","iterForEach","iterHead","isNumber","isnan","iterIncrspace","increment","incr","LinkedList","getNode","hash","node","first","clean","threshold","remove","intersection","it","j","iterIntersection","hashFcn","hv","iterIntersectionByHash","last","iterLinspace","delta","isPositiveNumber","pow","iterLogspace","b","base","iterMap","iterMapN","idx","isArrayLike","nFuncs","slice","pipeline","pargs","nargs","thunk","noop","iterPop","cb","iterPush","items","ret","iterReject","iterReplicate","isInteger","iterReplicateBy","t","iterShift","iterSlice","DEFAULT_LENGTH","iterStep","isBoolean","iterStrided","stride","offset","eager","bool","o","iterStridedBy","ctx","s","isCollection","arraylike2object","set","setter","arr","len","iterUnion","iterUnique","isUnique","iterUniqueBy","iterUniqueByHash","PINF","iterUnitspace","STOP","curr","iterUnshift","ns","iterAdvance","iterAny","iterAnyBy","iterEvery","iterEveryBy","iterFirst","iterFlow","iterLast","iterLength","iterNone","iterNoneBy","iterNth","iterPipeline","iterThunk","iterSome","iterSomeBy","iterator2arrayview","iterator2arrayviewRight"],"mappings":"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"}